C51 COMPILER V9.03   CYFITTER_CFG                                                          04/04/2015 14:09:22 PAGE 1   


C51 COMPILER V9.03, COMPILATION OF MODULE CYFITTER_CFG
OBJECT MODULE PLACED IN .\DP8051_Keil_903\Debug\cyfitter_cfg.obj
COMPILER INVOKED BY: C:\Program Files\Cypress\PSoC Creator\2.1\PSoC Creator\import\keil\pk51\9.03\C51\BIN\c51.exe .\Gene
                    -rated_Source\PSoC3\cyfitter_cfg.c NOIV LARGE MODDP2 OMF2 VB(1) PR(.\DP8051_Keil_903\Debug\cyfitter_cfg.lst) CD DB NOIP O
                    -T(0) INCDIR(Generated_Source\PSoC3) OJ(.\DP8051_Keil_903\Debug\cyfitter_cfg.obj)

line level    source

   1          /*******************************************************************************
   2          * FILENAME: cyfitter_cfg.c
   3          * PSoC Creator 2.1
   4          *
   5          * Description:
   6          * This file is automatically generated by PSoC Creator with device 
   7          * initialization code.  Except for the user defined sections in
   8          * CyClockStartupError(), this file should not be modified.
   9          *
  10          ********************************************************************************
  11          * Copyright 2012, Cypress Semiconductor Corporation.  All rights reserved.
  12          * You may use this file only in accordance with the license, terms, conditions, 
  13          * disclaimers, and limitations in the end user license agreement accompanying 
  14          * the software package with which this file was provided.
  15          ********************************************************************************/
  16          
  17          #include <string.h>
  18          #include <cytypes.h>
  19          #include <cydevice_trm.h>
  20          #include <cyfitter.h>
  21          #include <CyLib.h>
  22          #include <cyfitter_cfg.h>
  23          
  24          /* Clock startup error codes                                                   */
  25          #define CYCLOCKSTART_NO_ERROR    0
  26          #define CYCLOCKSTART_XTAL_ERROR  1
  27          #define CYCLOCKSTART_32KHZ_ERROR 2
  28          #define CYCLOCKSTART_PLL_ERROR   3
  29          
  30          /*******************************************************************************
  31          * Function Name: CyClockStartupError
  32          ********************************************************************************
  33          * Summary:
  34          *  If an error is encountered during clock configuration (crystal startup error,
  35          *  PLL lock error, etc) the system will end up here.  Unless reimplemented by 
  36          *  the customer, an infinite loop will be encountered.
  37          *
  38          * Parameters:  
  39          *   void
  40          *
  41          * Return:
  42          *   void
  43          *
  44          *******************************************************************************/
  45          #if defined(__GNUC__) || defined(__ARMCC_VERSION)
              __attribute__ ((unused))
              #endif
  48          static void CyClockStartupError(uint8 errorCode)
  49          {
  50   1          /* To remove the compiler warning if errorCode not used.                */
  51   1          errorCode = errorCode;
  52   1      
  53   1          /* `#START CyClockStartupError` */
C51 COMPILER V9.03   CYFITTER_CFG                                                          04/04/2015 14:09:22 PAGE 2   

  54   1      
  55   1          /* If we have a clock startup error (bad MHz crystal, PLL lock, etc)    */
  56   1          /* we will end up here to allow the customer to implement something to  */
  57   1          /* deal with the clock condition.                                       */
  58   1      
  59   1          /* `#END` */
  60   1      
  61   1          /* If nothing else, stop here since the clocks have not started         */
  62   1          /* correctly.                                                           */
  63   1          while(1) {}
  64   1      }
  65          
  66          
  67          #undef CYCODE
  68          #undef CYDATA
  69          #undef CYXDATA
  70          #undef CYFAR
  71          #if defined(__C51__) || defined(__CX51__)
  72                  #define CYCODE code
  73                  #define CYDATA data
  74                  #define CYXDATA xdata
  75                  #define CYFAR far
  76          
  77                  #define CYPACKED
  78                  #define CYALIGNED
  79              
  80                  #define CY_CFG_MEMORY_BARRIER()
  81          
  82                  #ifndef CYCONFIGCPY_DECLARED
                              extern void cymemzero(void CYFAR *addr, uint16 size);
                              extern void cyconfigcpy(uint16 size, const void CYFAR *src, void CYFAR *dest) small;
                              extern void cyconfigcpycode(uint16 size, const void CYCODE *src, void CYFAR *dest);
                      #endif
  87          
  88          
  89                  #define CYMEMZERO(a,c) cymemzero((a),(c))
  90                  #define CYCONFIGCPY(d,s,c) cyconfigcpy((c),(s),(d))
  91                  #define CYCONFIGCPYCODE(d,s,c) cyconfigcpycode((c),(s),(d))
  92          #else
                      #error Unsupported toolchain
              #endif
  95          
  96          /* Defines the layout and meaning of each entry in the cfg_memset_list used for clearing registers */
  97          typedef struct {
  98                  void CYFAR *address;
  99                  uint16 size;
 100          } CYPACKED cfg_memset_t;
 101          
 102          /* Defines the layout and meaning of each entry in the cfg_memcpy_list used for initializing registers */
 103          typedef struct {
 104                  void CYFAR *dest;
 105                  const void CYCODE *src;
 106                  uint16 size;
 107          } CYPACKED cfg_memcpy_t;
 108          
 109          /* Contains the regions of memory that must be set to 0 during configuration */
 110          #define CFG_MEMSET_COUNT (sizeof(cfg_memset_list)/sizeof(*cfg_memset_list))
 111          static const cfg_memset_t CYCODE cfg_memset_list [] = {
 112                  /* address, size */
 113                  {(void CYFAR *)(CYREG_PRT0_DR), 32},
 114                  {(void CYFAR *)(CYREG_PRT3_DR), 16},
 115                  {(void CYFAR *)(CYDEV_UCFG_B0_P0_U0_BASE), 4096},
C51 COMPILER V9.03   CYFITTER_CFG                                                          04/04/2015 14:09:22 PAGE 3   

 116                  {(void CYFAR *)(CYDEV_UCFG_B1_P2_U0_BASE), 2048},
 117                  {(void CYFAR *)(CYDEV_UCFG_DSI0_BASE), 2560},
 118                  {(void CYFAR *)(CYDEV_UCFG_DSI12_BASE), 512},
 119                  {(void CYFAR *)(CYREG_BCTL0_MDCLK_EN), 32},
 120          };
 121          
 122          const uint8 CYCODE cfg_byte_table[] = {
 123                  0x29,
 124                  0x00, 0x52, 0x07, /* Base address 0x005200 */
 125                  /* CYDEV_PRTDSI_PRT4_BASE */
 126                  0x20, 0x40, 0x21, 0x40, 0x24, 0xA4, 
 127                  /* CYDEV_PRTDSI_PRT5_BASE */
 128                  0x2E, 0x7F, 
 129                  /* CYDEV_PRTDSI_PRT6_BASE */
 130                  0x34, 0x02, 
 131                  /* CYDEV_PRTDSI_PRT12_BASE */
 132                  0x61, 0x04, 
 133                  /* CYDEV_PRTDSI_PRT15_BASE */
 134                  0x7C, 0x20, 
 135                  0x00, 0x5A, 0x01, /* Base address 0x005A00 */
 136                  /* CYREG_CMP2_SW0 */
 137                  0xD7, 0x04, 
 138                  0x00, 0x64, 0x05, /* Base address 0x006400 */
 139                  /* CYDEV_UWRK_UWRK8_B0_BASE + 0x00000070 */
 140                  0x83, 0x67, 0x84, 0x0F, 0x88, 0x2D, 0x8D, 0x0F, 0x8F, 0x2D, 
 141                  0x00, 0x65, 0x08, /* Base address 0x006500 */
 142                  /* CYDEV_UWRK_UWRK8_B1_BASE */
 143                  0x04, 0xFF, 0x05, 0xFF, 0x07, 0xFF, 0x14, 0xFF, 0x17, 0xFF, 0x24, 0xFF, 0x27, 0xFF, 
 144                  /* CYDEV_UWRK_UWRK8_B1_BASE + 0x00000070 */
 145                  0x87, 0x1F, 
 146                  0x01, 0x00, 0x44, /* Base address 0x010000 */
 147                  /* CYDEV_UCFG_B0_P0_U0_BASE */
 148                  0x04, 0x01, 0x06, 0x02, 0x08, 0x02, 0x30, 0x01, 0x36, 0x02, 0x38, 0x80, 0x3E, 0x41, 0x40, 0x41, 
 149                  0x41, 0x02, 0x49, 0xFF, 0x4A, 0xFF, 0x4B, 0xFF, 0x4D, 0xA0, 0x4F, 0x01, 0x50, 0x18, 0x58, 0x04, 
 150                  0x5A, 0x04, 0x5D, 0x01, 0x5F, 0x01, 0x60, 0x40, 0x62, 0x80, 0x64, 0x40, 0x65, 0x40, 0x66, 0x80, 
 151                  0x68, 0x40, 0x6A, 0x50, 0x6B, 0xA8, 0x6C, 0x40, 0x6D, 0x20, 0x6E, 0x50, 0x6F, 0xA8, 
 152                  /* CYDEV_UCFG_B0_P0_U1_BASE */
 153                  0x83, 0x01, 0x99, 0x01, 0xA7, 0x03, 0xAA, 0x01, 0xB1, 0x01, 0xB3, 0x02, 0xB6, 0x01, 0xBF, 0x01, 
 154                  0xC0, 0x15, 0xC1, 0x02, 0xC9, 0xFF, 0xCA, 0xFF, 0xCB, 0xFF, 0xCD, 0xAF, 0xCE, 0x07, 0xCF, 0x01, 
 155                  0xD0, 0x18, 0xD2, 0x80, 0xD8, 0x04, 0xD9, 0x04, 0xDA, 0x04, 0xDB, 0x04, 0xDC, 0x12, 0xDD, 0x11, 
 156                  0xDF, 0x01, 0xE0, 0x40, 0xE2, 0x80, 0xE4, 0x40, 0xE5, 0x40, 0xE6, 0x80, 0xE8, 0x40, 0xEA, 0x50, 
 157                  0xEB, 0xA8, 0xEC, 0x40, 0xED, 0x20, 0xEE, 0x50, 0xEF, 0xA8, 
 158                  0x01, 0x01, 0x1A, /* Base address 0x010100 */
 159                  /* CYDEV_UCFG_B0_P0_ROUTE_BASE */
 160                  0x00, 0x20, 0x01, 0x08, 0x17, 0x20, 0x18, 0x01, 0x19, 0x40, 0x1A, 0x82, 0x1B, 0x01, 0x1E, 0x02, 
 161                  0x24, 0x40, 0x27, 0x50, 0x2F, 0x10, 0x37, 0x10, 0x3C, 0x02, 0x40, 0x49, 0x44, 0x08, 0x47, 0x40, 
 162                  0x4E, 0x01, 0x74, 0x01, 
 163                  /* CYDEV_UCFG_B0_P0_ROUTE_BASE + 0x00000080 */
 164                  0xC0, 0x06, 0xC4, 0x40, 0xCA, 0x40, 0xCC, 0x20, 0xCE, 0x80, 0xD0, 0x3D, 0xD2, 0x10, 0xE2, 0x08, 
 165                  0x01, 0x02, 0x4A, /* Base address 0x010200 */
 166                  /* CYDEV_UCFG_B0_P1_U0_BASE */
 167                  0x02, 0x01, 0x1C, 0x01, 0x2A, 0x01, 0x32, 0x01, 0x3E, 0x04, 0x40, 0x15, 0x41, 0x02, 0x49, 0xFF, 
 168                  0x4A, 0xFF, 0x4B, 0xFF, 0x4D, 0xAF, 0x4E, 0x07, 0x4F, 0x01, 0x50, 0x18, 0x58, 0x04, 0x5A, 0x04, 
 169                  0x5D, 0x01, 0x5F, 0x01, 0x60, 0x40, 0x62, 0x80, 0x64, 0x40, 0x65, 0x40, 0x66, 0x80, 0x68, 0x40, 
 170                  0x6A, 0x50, 0x6B, 0xA8, 0x6C, 0x40, 0x6D, 0x20, 0x6E, 0x50, 0x6F, 0xA8, 
 171                  /* CYDEV_UCFG_B0_P1_U1_BASE */
 172                  0x8D, 0x01, 0x9C, 0x01, 0x9F, 0x01, 0xA2, 0x02, 0xA6, 0x05, 0xB0, 0x02, 0xB4, 0x01, 0xB6, 0x04, 
 173                  0xB7, 0x01, 0xBE, 0x10, 0xBF, 0x40, 0xC0, 0x15, 0xC1, 0x02, 0xC5, 0x20, 0xC6, 0xC4, 0xC7, 0x0E, 
 174                  0xC8, 0x1F, 0xC9, 0xFF, 0xCA, 0xFF, 0xCB, 0xFF, 0xCD, 0xAF, 0xCE, 0x07, 0xCF, 0x01, 0xD0, 0x18, 
 175                  0xD4, 0x07, 0xD8, 0x04, 0xD9, 0x04, 0xDA, 0x04, 0xDB, 0x04, 0xDC, 0x01, 0xDD, 0x11, 0xDF, 0x05, 
 176                  0xE0, 0x40, 0xE2, 0x80, 0xE4, 0x40, 0xE5, 0x40, 0xE6, 0x80, 0xE8, 0x40, 0xEA, 0x50, 0xEB, 0xA8, 
 177                  0xEC, 0x40, 0xED, 0x20, 0xEE, 0x50, 0xEF, 0xA8, 
C51 COMPILER V9.03   CYFITTER_CFG                                                          04/04/2015 14:09:22 PAGE 4   

 178                  0x01, 0x03, 0x35, /* Base address 0x010300 */
 179                  /* CYDEV_UCFG_B0_P1_ROUTE_BASE */
 180                  0x06, 0x80, 0x0A, 0x01, 0x0E, 0x02, 0x10, 0xA0, 0x17, 0x20, 0x18, 0x80, 0x1A, 0x05, 0x1E, 0x20, 
 181                  0x1F, 0x08, 0x22, 0x40, 0x30, 0x80, 0x38, 0x80, 0x40, 0x08, 0x43, 0x40, 0x44, 0x08, 0x47, 0x40, 
 182                  0x48, 0x30, 0x49, 0x42, 0x4E, 0x01, 0x50, 0x80, 0x51, 0x08, 0x52, 0x10, 0x59, 0x10, 0x5A, 0x84, 
 183                  0x61, 0x08, 0x62, 0x10, 0x7B, 0x01, 
 184                  /* CYDEV_UCFG_B0_P1_ROUTE_BASE + 0x00000080 */
 185                  0x92, 0x02, 0x98, 0x40, 0x99, 0x40, 0x9B, 0x60, 0x9C, 0x08, 0xA2, 0x01, 0xA3, 0x01, 0xA4, 0x10, 
 186                  0xA9, 0x08, 0xAA, 0x40, 0xAB, 0x20, 0xAF, 0x10, 0xB0, 0x40, 0xC0, 0x10, 0xC2, 0x81, 0xC4, 0x4C, 
 187                  0xCC, 0x08, 0xCE, 0x08, 0xD0, 0x3C, 0xD2, 0x18, 0xD6, 0x0E, 0xD8, 0x06, 0xDE, 0x08, 0xE2, 0x01, 
 188                  0xE6, 0x40, 0xEA, 0x02, 
 189                  0x01, 0x04, 0x49, /* Base address 0x010400 */
 190                  /* CYDEV_UCFG_B0_P2_U0_BASE */
 191                  0x1A, 0x01, 0x2E, 0x01, 0x36, 0x01, 0x3E, 0x40, 0x40, 0x52, 0x42, 0x03, 0x49, 0xFF, 0x4A, 0xFF, 
 192                  0x4B, 0xFF, 0x4F, 0x01, 0x50, 0x18, 0x54, 0x03, 0x56, 0x04, 0x58, 0x04, 0x5A, 0x04, 0x5B, 0x04, 
 193                  0x5D, 0x22, 0x5F, 0x01, 0x60, 0x40, 0x62, 0x40, 0x64, 0x40, 0x65, 0x40, 0x66, 0x80, 0x68, 0x80, 
 194                  0x6A, 0x80, 0x6C, 0x80, 0x6E, 0x80, 
 195                  /* CYDEV_UCFG_B0_P2_U1_BASE */
 196                  0x84, 0x1A, 0x86, 0x64, 0x87, 0x03, 0x88, 0x2E, 0x8A, 0x50, 0x8C, 0x2E, 0x8E, 0x50, 0x91, 0x0A, 
 197                  0x94, 0x01, 0x96, 0x78, 0x97, 0x06, 0x98, 0x1A, 0x9A, 0x64, 0x9B, 0x0F, 0xA7, 0x0D, 0xB2, 0x78, 
 198                  0xB3, 0x0F, 0xB4, 0x07, 0xBA, 0x30, 0xBB, 0x08, 0xC0, 0x52, 0xC2, 0x03, 0xC9, 0xFF, 0xCA, 0xFF, 
 199                  0xCB, 0xFF, 0xCD, 0x83, 0xCE, 0x03, 0xCF, 0x01, 0xD0, 0x18, 0xD2, 0x83, 0xD8, 0x04, 0xD9, 0x04, 
 200                  0xDA, 0x04, 0xDB, 0x04, 0xDC, 0x22, 0xDD, 0x22, 0xDF, 0x01, 0xE0, 0x40, 0xE2, 0x40, 0xE4, 0x40, 
 201                  0xE5, 0x40, 0xE6, 0x80, 0xE8, 0x80, 0xEA, 0x80, 0xEC, 0x80, 0xEE, 0x80, 
 202                  0x01, 0x05, 0x2F, /* Base address 0x010500 */
 203                  /* CYDEV_UCFG_B0_P2_ROUTE_BASE */
 204                  0x04, 0x08, 0x05, 0x10, 0x07, 0x01, 0x09, 0x20, 0x0E, 0x28, 0x10, 0x02, 0x19, 0x40, 0x1D, 0x10, 
 205                  0x1E, 0x14, 0x25, 0x04, 0x26, 0x04, 0x2E, 0x04, 0x36, 0x10, 0x37, 0x05, 0x3D, 0x08, 0x41, 0x30, 
 206                  0x42, 0x20, 0x43, 0x08, 0x45, 0x20, 0x46, 0x20, 0x48, 0x02, 0x4C, 0x02, 0x59, 0x46, 0x5A, 0x10, 
 207                  0x63, 0x40, 0x6C, 0x04, 0x6F, 0x05, 0x74, 0x02, 0x76, 0x80, 
 208                  /* CYDEV_UCFG_B0_P2_ROUTE_BASE + 0x00000080 */
 209                  0x87, 0x40, 0x98, 0x40, 0x9C, 0x08, 0x9E, 0x80, 0xA2, 0x10, 0xA3, 0x08, 0xA9, 0x12, 0xB4, 0x40, 
 210                  0xC0, 0xE0, 0xC2, 0x62, 0xC4, 0x01, 0xCA, 0x40, 0xCC, 0xE0, 0xCE, 0x40, 0xD0, 0x66, 0xD2, 0x18, 
 211                  0xD6, 0x0F, 0xD8, 0x01, 
 212                  0x01, 0x06, 0x52, /* Base address 0x010600 */
 213                  /* CYDEV_UCFG_B0_P3_U0_BASE */
 214                  0x40, 0x52, 0x42, 0x03, 0x49, 0xFF, 0x4A, 0xFF, 0x4B, 0xFF, 0x4D, 0x83, 0x4E, 0x03, 0x4F, 0x01, 
 215                  0x50, 0x18, 0x5A, 0x04, 0x5D, 0x02, 0x5F, 0x01, 0x60, 0x40, 0x62, 0x40, 0x64, 0x40, 0x65, 0x40, 
 216                  0x66, 0x80, 0x68, 0x80, 0x6A, 0x80, 0x6C, 0x80, 0x6E, 0x80, 
 217                  /* CYDEV_UCFG_B0_P3_U1_BASE */
 218                  0x80, 0x03, 0x81, 0x03, 0x82, 0x04, 0x84, 0x01, 0x87, 0x02, 0x8B, 0x10, 0x8F, 0x0C, 0x90, 0x01, 
 219                  0x91, 0x01, 0x93, 0x02, 0x94, 0x04, 0x96, 0x02, 0x97, 0x01, 0x98, 0x01, 0x99, 0x1C, 0x9D, 0x14, 
 220                  0x9F, 0x0A, 0xA0, 0x06, 0xA1, 0x0F, 0xA2, 0x01, 0xA3, 0x10, 0xA5, 0x02, 0xA6, 0x01, 0xA7, 0x01, 
 221                  0xA8, 0x04, 0xA9, 0x03, 0xAC, 0x01, 0xAF, 0x01, 0xB3, 0x04, 0xB4, 0x01, 0xB5, 0x03, 0xB6, 0x06, 
 222                  0xB7, 0x18, 0xC0, 0x52, 0xC2, 0x03, 0xC5, 0xEC, 0xC6, 0x20, 0xC8, 0x0B, 0xC9, 0xFF, 0xCA, 0xFF, 
 223                  0xCB, 0xFF, 0xCD, 0x83, 0xCE, 0x03, 0xCF, 0x01, 0xD0, 0x18, 0xD2, 0x17, 0xD8, 0x04, 0xD9, 0x04, 
 224                  0xDA, 0x04, 0xDB, 0x04, 0xDD, 0x02, 0xDF, 0x01, 0xE0, 0x40, 0xE2, 0x40, 0xE4, 0x40, 0xE5, 0x40, 
 225                  0xE6, 0x80, 0xE8, 0x80, 0xEA, 0x80, 0xEC, 0x80, 0xEE, 0x80, 
 226                  0x01, 0x07, 0x2D, /* Base address 0x010700 */
 227                  /* CYDEV_UCFG_B0_P3_ROUTE_BASE */
 228                  0x01, 0x08, 0x03, 0x80, 0x08, 0x02, 0x0A, 0x28, 0x0B, 0x10, 0x11, 0x14, 0x12, 0x81, 0x19, 0x10, 
 229                  0x1A, 0x09, 0x1B, 0xC0, 0x22, 0xE0, 0x23, 0x10, 0x29, 0x18, 0x2A, 0x40, 0x2B, 0x40, 0x31, 0x08, 
 230                  0x32, 0x51, 0x39, 0x56, 0x3A, 0x01, 0x41, 0x10, 0x43, 0x0C, 0x45, 0x20, 0x47, 0x04, 0x48, 0x02, 
 231                  0x49, 0x06, 0x4C, 0x02, 0x51, 0x30, 0x69, 0x54, 0x73, 0x01, 
 232                  /* CYDEV_UCFG_B0_P3_ROUTE_BASE + 0x00000080 */
 233                  0x8E, 0x20, 0x95, 0x20, 0x98, 0x40, 0x9C, 0x08, 0x9D, 0x06, 0xA0, 0x02, 0xA3, 0x08, 0xC0, 0x0C, 
 234                  0xC2, 0x0E, 0xC4, 0x0F, 0xCA, 0x0F, 0xCC, 0x0F, 0xCE, 0x0F, 0xD0, 0x66, 0xD2, 0x18, 0xE2, 0x10, 
 235                  0x01, 0x08, 0x40, /* Base address 0x010800 */
 236                  /* CYDEV_UCFG_B0_P4_U0_BASE */
 237                  0x02, 0x01, 0x0C, 0x02, 0x1A, 0x04, 0x27, 0x03, 0x28, 0x04, 0x2F, 0x01, 0x30, 0x04, 0x32, 0x02, 
 238                  0x33, 0x02, 0x34, 0x01, 0x35, 0x01, 0x38, 0x80, 0x3E, 0x04, 0x40, 0x20, 0x41, 0x05, 0x49, 0xFF, 
 239                  0x4A, 0xFF, 0x4B, 0xFF, 0x4D, 0xA0, 0x4F, 0x04, 0x50, 0x18, 0x52, 0x80, 0x54, 0x25, 0x58, 0x04, 
C51 COMPILER V9.03   CYFITTER_CFG                                                          04/04/2015 14:09:22 PAGE 5   

 240                  0x59, 0x04, 0x5A, 0x04, 0x5B, 0x04, 0x5C, 0x22, 0x5D, 0x22, 0x5F, 0x01, 0x60, 0x40, 0x62, 0xC0, 
 241                  0x64, 0x40, 0x65, 0x40, 0x66, 0xC0, 0x68, 0xC0, 0x6A, 0xC0, 0x6C, 0xC0, 0x6E, 0xC0, 
 242                  /* CYDEV_UCFG_B0_P4_U1_BASE */
 243                  0xC0, 0x20, 0xC1, 0x05, 0xC5, 0xD2, 0xC6, 0x10, 0xC7, 0x20, 0xC8, 0x2B, 0xC9, 0xFF, 0xCA, 0xFF, 
 244                  0xCB, 0xFF, 0xCD, 0xAF, 0xCE, 0x0F, 0xCF, 0x04, 0xD0, 0x18, 0xDA, 0x04, 0xDD, 0x02, 0xDF, 0x01, 
 245                  0xE0, 0x40, 0xE2, 0xC0, 0xE4, 0x40, 0xE5, 0x40, 0xE6, 0xC0, 0xE8, 0xC0, 0xEA, 0xC0, 0xEC, 0xC0, 
 246                  0xEE, 0xC0, 
 247                  0x01, 0x09, 0x21, /* Base address 0x010900 */
 248                  /* CYDEV_UCFG_B0_P4_ROUTE_BASE */
 249                  0x05, 0x40, 0x06, 0x80, 0x0C, 0x20, 0x17, 0x20, 0x1C, 0x40, 0x1D, 0x60, 0x1F, 0x04, 0x27, 0x28, 
 250                  0x2C, 0x20, 0x2E, 0x80, 0x41, 0x20, 0x45, 0x20, 0x48, 0x02, 0x49, 0x02, 0x4B, 0x04, 0x4E, 0x02, 
 251                  0x50, 0x22, 0x52, 0x02, 0x5C, 0x40, 0x5D, 0x02, 0x5F, 0x04, 0x67, 0x08, 0x76, 0x80, 
 252                  /* CYDEV_UCFG_B0_P4_ROUTE_BASE + 0x00000080 */
 253                  0x97, 0x08, 0xB4, 0x20, 0xC0, 0x90, 0xC2, 0x40, 0xC4, 0x40, 0xCA, 0x50, 0xD0, 0x24, 0xD2, 0x18, 
 254                  0xD6, 0xD0, 0xD8, 0x20, 
 255                  0x01, 0x0A, 0x58, /* Base address 0x010A00 */
 256                  /* CYDEV_UCFG_B0_P5_U0_BASE */
 257                  0x00, 0x05, 0x02, 0x0A, 0x03, 0x01, 0x0A, 0x0F, 0x0F, 0x01, 0x10, 0x03, 0x12, 0x0C, 0x16, 0x0F, 
 258                  0x28, 0x03, 0x2A, 0x0C, 0x2C, 0x05, 0x2E, 0x0A, 0x34, 0x0F, 0x37, 0x01, 0x3F, 0x40, 0x40, 0x13, 
 259                  0x41, 0x04, 0x42, 0x02, 0x49, 0xFF, 0x4A, 0xFF, 0x4B, 0xFF, 0x4F, 0x01, 0x50, 0x18, 0x52, 0x83, 
 260                  0x58, 0x04, 0x59, 0x04, 0x5A, 0x04, 0x5B, 0x04, 0x5C, 0x01, 0x5D, 0x11, 0x5F, 0x01, 0x60, 0x40, 
 261                  0x62, 0x40, 0x64, 0x40, 0x65, 0x40, 0x66, 0x80, 0x68, 0x80, 0x6A, 0x80, 0x6C, 0x80, 0x6E, 0x80, 
 262                  /* CYDEV_UCFG_B0_P5_U1_BASE */
 263                  0x80, 0x09, 0x82, 0x06, 0x83, 0x04, 0x89, 0x01, 0x8A, 0x1F, 0x8B, 0x02, 0x8C, 0x06, 0x8E, 0x19, 
 264                  0x94, 0x01, 0x96, 0x02, 0x97, 0x0F, 0x9C, 0x04, 0x9D, 0x07, 0x9E, 0x08, 0x9F, 0x08, 0xA1, 0x02, 
 265                  0xA3, 0x01, 0xA8, 0x10, 0xA9, 0x08, 0xAA, 0x06, 0xAB, 0x07, 0xB1, 0x0F, 0xB6, 0x1F, 0xC0, 0x13, 
 266                  0xC1, 0x04, 0xC2, 0x02, 0xC9, 0xFF, 0xCA, 0xFF, 0xCB, 0xFF, 0xCD, 0x83, 0xCE, 0x03, 0xCF, 0x01, 
 267                  0xD0, 0x18, 0xD8, 0x04, 0xD9, 0x04, 0xDA, 0x04, 0xDC, 0x11, 0xDD, 0x01, 0xDF, 0x01, 0xE0, 0x40, 
 268                  0xE2, 0x40, 0xE4, 0x40, 0xE5, 0x40, 0xE6, 0x80, 0xE8, 0x80, 0xEA, 0x80, 0xEC, 0x80, 0xEE, 0x80, 
 269                  0x01, 0x0B, 0x34, /* Base address 0x010B00 */
 270                  /* CYDEV_UCFG_B0_P5_ROUTE_BASE */
 271                  0x00, 0x02, 0x03, 0x04, 0x05, 0x40, 0x07, 0x84, 0x08, 0x08, 0x0B, 0x80, 0x0E, 0x10, 0x0F, 0x02, 
 272                  0x10, 0x08, 0x13, 0x80, 0x14, 0x08, 0x15, 0x30, 0x19, 0x10, 0x1D, 0x40, 0x1F, 0x40, 0x20, 0x01, 
 273                  0x27, 0x80, 0x2D, 0x10, 0x2F, 0x40, 0x37, 0x84, 0x38, 0x02, 0x39, 0x80, 0x3C, 0x02, 0x3E, 0x10, 
 274                  0x3F, 0x02, 0x40, 0x01, 0x41, 0x14, 0x42, 0x20, 0x43, 0x41, 0x44, 0x08, 0x46, 0x20, 0x47, 0x41, 
 275                  0x68, 0x09, 0x6A, 0x10, 0x70, 0x01, 
 276                  /* CYDEV_UCFG_B0_P5_ROUTE_BASE + 0x00000080 */
 277                  0x91, 0xA8, 0x94, 0x02, 0x97, 0x08, 0x9B, 0x05, 0x9C, 0x20, 0x9D, 0x10, 0x9F, 0x40, 0xB5, 0x40, 
 278                  0xB7, 0x04, 0xC0, 0xDA, 0xC2, 0xAC, 0xC4, 0x43, 0xCA, 0xA0, 0xCC, 0x50, 0xCE, 0xA9, 0xD0, 0xFF, 
 279                  0xEC, 0x10, 
 280                  0x01, 0x0C, 0x47, /* Base address 0x010C00 */
 281                  /* CYDEV_UCFG_B0_P6_U0_BASE */
 282                  0x15, 0x01, 0x37, 0x01, 0x3F, 0x40, 0x40, 0x12, 0x41, 0x04, 0x42, 0x03, 0x49, 0xFF, 0x4A, 0xFF, 
 283                  0x4B, 0xFF, 0x4D, 0x83, 0x4E, 0x03, 0x4F, 0x01, 0x50, 0x18, 0x59, 0x04, 0x5A, 0x04, 0x5D, 0x01, 
 284                  0x5F, 0x01, 0x60, 0x40, 0x62, 0x40, 0x64, 0x40, 0x65, 0x40, 0x66, 0x80, 0x68, 0x80, 0x6A, 0x80, 
 285                  0x6C, 0x80, 0x6E, 0x80, 
 286                  /* CYDEV_UCFG_B0_P6_U1_BASE */
 287                  0x83, 0x03, 0x8A, 0x01, 0x8F, 0x03, 0x95, 0x01, 0x97, 0x02, 0xA5, 0x05, 0xA7, 0x02, 0xAA, 0x01, 
 288                  0xAE, 0x01, 0xB3, 0x04, 0xB5, 0x03, 0xB6, 0x01, 0xBE, 0x40, 0xBF, 0x10, 0xC0, 0x13, 0xC1, 0x04, 
 289                  0xC2, 0x02, 0xC5, 0xEC, 0xC7, 0x02, 0xC8, 0x13, 0xC9, 0xFF, 0xCA, 0xFF, 0xCB, 0xFF, 0xCD, 0x83, 
 290                  0xCE, 0x03, 0xCF, 0x01, 0xD0, 0x18, 0xD4, 0x03, 0xD6, 0x04, 0xD8, 0x04, 0xD9, 0x04, 0xDA, 0x04, 
 291                  0xDB, 0x04, 0xDC, 0x10, 0xDD, 0x11, 0xDF, 0x05, 0xE0, 0x40, 0xE2, 0x40, 0xE4, 0x40, 0xE5, 0x40, 
 292                  0xE6, 0x80, 0xE8, 0x80, 0xEA, 0x80, 0xEC, 0x80, 0xEE, 0x80, 
 293                  0x01, 0x0D, 0x25, /* Base address 0x010D00 */
 294                  /* CYDEV_UCFG_B0_P6_ROUTE_BASE */
 295                  0x03, 0x04, 0x12, 0x05, 0x19, 0x40, 0x21, 0x18, 0x23, 0x08, 0x26, 0x40, 0x27, 0x01, 0x28, 0x20, 
 296                  0x31, 0x08, 0x37, 0x04, 0x38, 0x02, 0x39, 0x80, 0x3A, 0x01, 0x41, 0x14, 0x43, 0x41, 0x46, 0x04, 
 297                  0x47, 0x49, 0x49, 0x05, 0x51, 0x04, 0x52, 0x04, 0x59, 0x55, 0x63, 0x80, 0x7A, 0x40, 
 298                  /* CYDEV_UCFG_B0_P6_ROUTE_BASE + 0x00000080 */
 299                  0x8F, 0x40, 0x97, 0x08, 0xC0, 0x02, 0xC4, 0x03, 0xCA, 0x02, 0xCC, 0x42, 0xCE, 0x09, 0xD0, 0xFF, 
 300                  0xD6, 0x0F, 0xD8, 0x01, 0xDE, 0x01, 0xE2, 0x01, 0xE6, 0x40, 0xEA, 0x82, 
 301                  0x01, 0x0E, 0x3B, /* Base address 0x010E00 */
C51 COMPILER V9.03   CYFITTER_CFG                                                          04/04/2015 14:09:22 PAGE 6   

 302                  /* CYDEV_UCFG_B0_P7_U0_BASE */
 303                  0x40, 0x30, 0x41, 0x02, 0x49, 0xFF, 0x4A, 0xFF, 0x4B, 0xFF, 0x4D, 0xA0, 0x4F, 0x04, 0x50, 0x18, 
 304                  0x5A, 0x04, 0x5D, 0x02, 0x5F, 0x01, 0x60, 0x40, 0x62, 0xC0, 0x64, 0x40, 0x65, 0x40, 0x66, 0xC0, 
 305                  0x68, 0xC0, 0x6A, 0xC0, 0x6C, 0xC0, 0x6E, 0xC0, 
 306                  /* CYDEV_UCFG_B0_P7_U1_BASE */
 307                  0x98, 0x04, 0x9F, 0x01, 0xAA, 0x07, 0xAE, 0x01, 0xB0, 0x04, 0xB4, 0x02, 0xB5, 0x01, 0xB6, 0x01, 
 308                  0xC0, 0x30, 0xC1, 0x02, 0xC5, 0xD0, 0xC6, 0x20, 0xC7, 0x01, 0xC8, 0x1A, 0xC9, 0xFF, 0xCA, 0xFF, 
 309                  0xCB, 0xFF, 0xCD, 0xAF, 0xCE, 0x0F, 0xCF, 0x04, 0xD0, 0x18, 0xD2, 0x80, 0xD4, 0x25, 0xD8, 0x04, 
 310                  0xD9, 0x04, 0xDA, 0x04, 0xDB, 0x04, 0xDC, 0x22, 0xDD, 0x22, 0xDF, 0x01, 0xE0, 0x40, 0xE2, 0xC0, 
 311                  0xE4, 0x40, 0xE5, 0x40, 0xE6, 0xC0, 0xE8, 0xC0, 0xEA, 0xC0, 0xEC, 0xC0, 0xEE, 0xC0, 
 312                  0x01, 0x0F, 0x1B, /* Base address 0x010F00 */
 313                  /* CYDEV_UCFG_B0_P7_ROUTE_BASE */
 314                  0x0E, 0x04, 0x16, 0x04, 0x17, 0x40, 0x1C, 0x40, 0x1E, 0x04, 0x1F, 0x40, 0x27, 0x04, 0x37, 0x40, 
 315                  0x40, 0x08, 0x41, 0x20, 0x43, 0x04, 0x45, 0x20, 0x47, 0x04, 0x4F, 0x01, 0x55, 0x20, 0x56, 0x04, 
 316                  0x5C, 0x48, 0x5F, 0x01, 0x67, 0x08, 0x77, 0x40, 
 317                  /* CYDEV_UCFG_B0_P7_ROUTE_BASE + 0x00000080 */
 318                  0x87, 0x40, 0xC2, 0x40, 0xC4, 0xC0, 0xCC, 0x10, 0xD0, 0x66, 0xD6, 0xD0, 0xD8, 0x20, 
 319                  0x01, 0x14, 0x41, /* Base address 0x011400 */
 320                  /* CYDEV_UCFG_B1_P2_U0_BASE */
 321                  0x05, 0x01, 0x06, 0x3F, 0x0B, 0x01, 0x0C, 0x2A, 0x0F, 0x01, 0x17, 0x02, 0x18, 0x0F, 0x1A, 0x40, 
 322                  0x1C, 0x3F, 0x22, 0x30, 0x24, 0x15, 0x2A, 0x03, 0x30, 0x0C, 0x32, 0x03, 0x34, 0x70, 0x35, 0x03, 
 323                  0x3E, 0x15, 0x3F, 0x10, 0x40, 0x32, 0x41, 0x04, 0x45, 0x60, 0x47, 0x02, 0x48, 0x12, 0x56, 0x08, 
 324                  0x58, 0x04, 0x59, 0x04, 0x5A, 0x04, 0x5B, 0x0F, 0x5F, 0x01, 0x61, 0x0C, 0x62, 0xF0, 0x63, 0x0C, 
 325                  0x65, 0x0C, 0x67, 0x0C, 0x68, 0x40, 0x69, 0x4C, 0x6A, 0x40, 0x6B, 0x4C, 0x6C, 0x90, 0x6D, 0x58, 
 326                  0x6F, 0x0C, 
 327                  /* CYDEV_UCFG_B1_P2_U1_BASE */
 328                  0x9C, 0x01, 0xA8, 0x01, 0xB4, 0x01, 0xB8, 0x20, 0xC0, 0x56, 0xC5, 0x40, 0xC6, 0x02, 0xC7, 0x05, 
 329                  0xC8, 0x16, 0xC9, 0xFF, 0xCA, 0xFF, 0xCB, 0xFF, 0xCC, 0x02, 0xCD, 0x20, 0xCF, 0x05, 0xD1, 0x10, 
 330                  0xD8, 0x04, 0xDA, 0x04, 0xDF, 0x01, 0xE0, 0x40, 0xE1, 0x40, 0xE2, 0x80, 0xE4, 0x80, 0xE6, 0x80, 
 331                  0x01, 0x15, 0x2E, /* Base address 0x011500 */
 332                  /* CYDEV_UCFG_B1_P2_ROUTE_BASE */
 333                  0x00, 0x40, 0x02, 0x10, 0x09, 0x80, 0x0A, 0x08, 0x0F, 0x02, 0x10, 0x88, 0x11, 0x04, 0x16, 0x08, 
 334                  0x1A, 0x54, 0x1F, 0x10, 0x20, 0x04, 0x32, 0x04, 0x38, 0xE8, 0x39, 0x04, 0x3A, 0x10, 0x42, 0x54, 
 335                  0x48, 0x80, 0x4F, 0x92, 0x50, 0x08, 0x56, 0x08, 0x57, 0x40, 0x58, 0x40, 0x60, 0x02, 0x61, 0x80, 
 336                  0x7A, 0x40, 
 337                  /* CYDEV_UCFG_B1_P2_ROUTE_BASE + 0x00000080 */
 338                  0x87, 0x20, 0x8C, 0x0A, 0x90, 0xA8, 0x92, 0x08, 0x93, 0x10, 0x94, 0x04, 0x97, 0x20, 0x98, 0x40, 
 339                  0x9B, 0x20, 0x9C, 0x08, 0xA2, 0x40, 0xC0, 0x05, 0xC2, 0x83, 0xC4, 0x4E, 0xCC, 0x02, 0xCE, 0x0E, 
 340                  0xD0, 0x07, 0xD2, 0x30, 0xD6, 0x08, 0xD8, 0x08, 0xDE, 0x01, 
 341                  0x01, 0x16, 0x4E, /* Base address 0x011600 */
 342                  /* CYDEV_UCFG_B1_P3_U0_BASE */
 343                  0x01, 0x02, 0x03, 0x04, 0x0F, 0x04, 0x27, 0x03, 0x29, 0x01, 0x2A, 0x01, 0x31, 0x01, 0x32, 0x01, 
 344                  0x33, 0x06, 0x3F, 0x04, 0x40, 0x01, 0x41, 0x06, 0x46, 0x0A, 0x49, 0xFF, 0x4A, 0xFF, 0x4B, 0xFF, 
 345                  0x4C, 0x02, 0x4E, 0xF0, 0x58, 0x04, 0x59, 0x04, 0x5A, 0x04, 0x5F, 0x01, 0x62, 0x48, 0x63, 0xA1, 
 346                  0x68, 0xF0, 0x6A, 0xF0, 0x6C, 0xF0, 0x6E, 0xF0, 
 347                  /* CYDEV_UCFG_B1_P3_U1_BASE */
 348                  0x85, 0x12, 0x89, 0x09, 0x8B, 0x36, 0x8D, 0x24, 0x8E, 0x01, 0x91, 0x0E, 0x92, 0x01, 0x93, 0x01, 
 349                  0x94, 0x01, 0x95, 0x37, 0x96, 0x02, 0x97, 0x08, 0x98, 0x03, 0x99, 0x0F, 0x9C, 0x01, 0x9D, 0x0F, 
 350                  0xA0, 0x02, 0xA1, 0x01, 0xA4, 0x01, 0xAA, 0x02, 0xB1, 0x0F, 0xB2, 0x01, 0xB3, 0x30, 0xB4, 0x02, 
 351                  0xBE, 0x10, 0xBF, 0x04, 0xC0, 0x62, 0xC1, 0x03, 0xC6, 0x06, 0xC7, 0x02, 0xC8, 0x14, 0xD6, 0x02, 
 352                  0xD8, 0x04, 0xD9, 0x04, 0xDA, 0x04, 0xDB, 0x04, 0xDE, 0x08, 0xDF, 0x01, 0xE1, 0x0C, 0xE2, 0xF0, 
 353                  0xE3, 0x0C, 0xE5, 0x0C, 0xE7, 0x0C, 0xE8, 0x40, 0xE9, 0x4C, 0xEA, 0x40, 0xEB, 0x4C, 0xEC, 0x90, 
 354                  0xED, 0x58, 0xEF, 0x0C, 
 355                  0x01, 0x17, 0x38, /* Base address 0x011700 */
 356                  /* CYDEV_UCFG_B1_P3_ROUTE_BASE */
 357                  0x00, 0x40, 0x09, 0x80, 0x0A, 0x59, 0x10, 0x88, 0x12, 0x20, 0x16, 0x08, 0x18, 0x20, 0x19, 0x18, 
 358                  0x1A, 0x10, 0x1F, 0x08, 0x20, 0x40, 0x21, 0x07, 0x27, 0xA0, 0x29, 0x01, 0x2E, 0x08, 0x2F, 0x18, 
 359                  0x31, 0x82, 0x32, 0x24, 0x38, 0xA8, 0x3F, 0x81, 0x40, 0x04, 0x41, 0x04, 0x47, 0x80, 0x49, 0x10, 
 360                  0x4D, 0x10, 0x4F, 0x10, 0x50, 0xCC, 0x51, 0x08, 0x52, 0x40, 0x57, 0x40, 0x5E, 0xC0, 0x71, 0x01, 
 361                  0x72, 0x40, 0x79, 0x10, 
 362                  /* CYDEV_UCFG_B1_P3_ROUTE_BASE + 0x00000080 */
 363                  0x92, 0x09, 0x93, 0x11, 0x95, 0x02, 0x98, 0x40, 0x9C, 0x08, 0x9D, 0x08, 0x9E, 0x40, 0xA2, 0x20, 
C51 COMPILER V9.03   CYFITTER_CFG                                                          04/04/2015 14:09:22 PAGE 7   

 364                  0xA5, 0x08, 0xAC, 0x02, 0xAE, 0x21, 0xC0, 0x01, 0xC2, 0x0F, 0xC4, 0x4E, 0xCA, 0x61, 0xCC, 0x0F, 
 365                  0xCE, 0x9E, 0xD0, 0x16, 0xD2, 0x24, 0xDE, 0x04, 0xEA, 0x08, 0xEC, 0x80, 
 366                  0x01, 0x19, 0x02, /* Base address 0x011900 */
 367                  /* CYDEV_UCFG_B1_P4_ROUTE_BASE + 0x00000080 */
 368                  0xAF, 0x08, 0xEC, 0x80, 
 369                  0x01, 0x1A, 0x04, /* Base address 0x011A00 */
 370                  /* CYDEV_UCFG_B1_P5_U1_BASE */
 371                  0xB8, 0x80, 0xBE, 0x40, 0xD8, 0x04, 0xDF, 0x01, 
 372                  0x01, 0x1B, 0x04, /* Base address 0x011B00 */
 373                  /* CYDEV_UCFG_B1_P5_ROUTE_BASE */
 374                  0x1F, 0x80, 
 375                  /* CYDEV_UCFG_B1_P5_ROUTE_BASE + 0x00000080 */
 376                  0x8F, 0x80, 0xE0, 0x10, 0xE2, 0x40, 
 377                  0x01, 0x40, 0x0F, /* Base address 0x014000 */
 378                  /* CYDEV_UCFG_DSI0_BASE */
 379                  0x02, 0x02, 0x0E, 0x08, 0x0F, 0x40, 0x31, 0x08, 0x33, 0x40, 0x37, 0x82, 0x38, 0x20, 0x67, 0x80, 
 380                  /* CYDEV_UCFG_DSI0_BASE + 0x00000080 */
 381                  0x87, 0x40, 0xC0, 0x40, 0xC2, 0xA0, 0xCC, 0xF0, 0xCE, 0x10, 0xD8, 0x80, 0xE2, 0x10, 
 382                  0x01, 0x41, 0x0F, /* Base address 0x014100 */
 383                  /* CYDEV_UCFG_DSI1_BASE */
 384                  0x32, 0x40, 
 385                  /* CYDEV_UCFG_DSI1_BASE + 0x00000080 */
 386                  0x81, 0x08, 0x8C, 0x10, 0x94, 0x20, 0x9F, 0x02, 0xA5, 0x08, 0xAA, 0x06, 0xAB, 0x40, 0xAF, 0xC0, 
 387                  0xCC, 0x10, 0xE2, 0x80, 0xE8, 0x80, 0xEA, 0x40, 0xEC, 0x60, 0xEE, 0x80, 
 388                  0x01, 0x42, 0x06, /* Base address 0x014200 */
 389                  /* CYDEV_UCFG_DSI2_BASE */
 390                  0x53, 0x40, 
 391                  /* CYDEV_UCFG_DSI2_BASE + 0x00000080 */
 392                  0x87, 0x02, 0x96, 0x80, 0x9F, 0x02, 0xD4, 0x20, 0xE6, 0x40, 
 393                  0x01, 0x43, 0x05, /* Base address 0x014300 */
 394                  /* CYDEV_UCFG_DSI3_BASE */
 395                  0x21, 0x20, 
 396                  /* CYDEV_UCFG_DSI3_BASE + 0x00000080 */
 397                  0x8E, 0x40, 0x96, 0x80, 0x97, 0x80, 0xC8, 0x10, 
 398                  0x01, 0x44, 0x04, /* Base address 0x014400 */
 399                  /* CYDEV_UCFG_DSI4_BASE */
 400                  0x07, 0x20, 0x28, 0x08, 
 401                  /* CYDEV_UCFG_DSI4_BASE + 0x00000080 */
 402                  0xC0, 0x04, 0xCA, 0x08, 
 403                  0x01, 0x45, 0x04, /* Base address 0x014500 */
 404                  /* CYDEV_UCFG_DSI5_BASE + 0x00000080 */
 405                  0x83, 0x20, 0xAF, 0x20, 0xB0, 0x08, 0xEA, 0x01, 
 406                  0x01, 0x46, 0x06, /* Base address 0x014600 */
 407                  /* CYDEV_UCFG_DSI6_BASE */
 408                  0x00, 0x40, 0x07, 0x20, 0x38, 0x10, 
 409                  /* CYDEV_UCFG_DSI6_BASE + 0x00000080 */
 410                  0x9F, 0x20, 0xC0, 0x06, 0xCE, 0x08, 
 411                  0x01, 0x47, 0x05, /* Base address 0x014700 */
 412                  /* CYDEV_UCFG_DSI7_BASE */
 413                  0x42, 0x01, 
 414                  /* CYDEV_UCFG_DSI7_BASE + 0x00000080 */
 415                  0x94, 0x10, 0xB4, 0x40, 0xD0, 0x08, 0xEA, 0x02, 
 416                  0x01, 0x48, 0x03, /* Base address 0x014800 */
 417                  /* CYDEV_UCFG_DSI8_BASE + 0x00000080 */
 418                  0xAF, 0x40, 0xB1, 0x20, 0xEA, 0x10, 
 419                  0x01, 0x49, 0x04, /* Base address 0x014900 */
 420                  /* CYDEV_UCFG_DSI9_BASE */
 421                  0x78, 0x01, 
 422                  /* CYDEV_UCFG_DSI9_BASE + 0x00000080 */
 423                  0x84, 0x01, 0xDE, 0x40, 0xE2, 0x40, 
 424                  0x01, 0x4C, 0x03, /* Base address 0x014C00 */
 425                  /* CYDEV_UCFG_DSI12_BASE + 0x00000080 */
C51 COMPILER V9.03   CYFITTER_CFG                                                          04/04/2015 14:09:22 PAGE 8   

 426                  0x94, 0x10, 0xB2, 0x01, 0xEC, 0x01, 
 427                  0x01, 0x4D, 0x03, /* Base address 0x014D00 */
 428                  /* CYDEV_UCFG_DSI13_BASE + 0x00000080 */
 429                  0x8C, 0x10, 0x94, 0x10, 0xE0, 0x08, 
 430                  0x01, 0x50, 0x07, /* Base address 0x015000 */
 431                  /* CYREG_BCTL0_MDCLK_EN */
 432                  0x00, 0x07, 0x08, 0x06, 0x0A, 0x05, 0x0C, 0x06, 0x0E, 0x06, 
 433                  /* CYREG_BCTL1_MDCLK_EN */
 434                  0x10, 0x01, 0x1A, 0x01, 
 435                  0x01, 0x51, 0x02, /* Base address 0x015100 */
 436                  /* CYREG_IDMUX_IRQ_CTL0 */
 437                  0x00, 0xFF, 0x01, 0x0F, 
 438          };
 439          /* BYTES: 2638 */
 440          
 441          /* IOPINS0_7 Address: CYREG_PRT12_DR Size (bytes): 10 */
 442          static const uint8 CYCODE BS_IOPINS0_7_VAL[] = {
 443                  0x04, 0x00, 0x00, 0x04, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00};
 444          
 445          /* IOPINS0_8 Address: CYREG_PRT15_DR Size (bytes): 10 */
 446          static const uint8 CYCODE BS_IOPINS0_8_VAL[] = {
 447                  0x20, 0x00, 0x20, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
 448          
 449          /* IOPINS0_2 Address: CYREG_PRT2_DM0 Size (bytes): 8 */
 450          static const uint8 CYCODE BS_IOPINS0_2_VAL[] = {
 451                  0x00, 0x7F, 0x7F, 0x00, 0x00, 0x00, 0x00, 0x00};
 452          
 453          /* IOPINS0_4 Address: CYREG_PRT4_DR Size (bytes): 10 */
 454          static const uint8 CYCODE BS_IOPINS0_4_VAL[] = {
 455                  0xE0, 0x00, 0x04, 0xE0, 0x00, 0x00, 0x40, 0x00, 0x01, 0x00};
 456          
 457          /* IOPINS0_5 Address: CYREG_PRT5_DM0 Size (bytes): 8 */
 458          static const uint8 CYCODE BS_IOPINS0_5_VAL[] = {
 459                  0x00, 0x00, 0x7F, 0x00, 0x00, 0x00, 0x00, 0x00};
 460          
 461          /* IOPINS0_6 Address: CYREG_PRT6_DR Size (bytes): 10 */
 462          static const uint8 CYCODE BS_IOPINS0_6_VAL[] = {
 463                  0x02, 0x00, 0x02, 0x02, 0x00, 0x00, 0x00, 0x00, 0x30, 0x00};
 464          
 465          
 466          extern void cfg_write_bytes_code(void CYCODE *table);
 467          extern void cfg_write_bytes(void CYFAR *table);
 468          
 469          /*******************************************************************************
 470          * Function Name: ClockSetup
 471          ********************************************************************************
 472          *
 473          * Summary:
 474          *  Performs the initialization of all of the clocks in the device based on the
 475          *  settings in the Clock tab of the DWR.  This includes enabling the requested
 476          *  clocks and setting the necessary dividers to produce the desired frequency. 
 477          *
 478          * Parameters:
 479          *  void
 480          *
 481          * Return:
 482          *  void
 483          *
 484          *******************************************************************************/
 485          static void ClockSetup(void)
 486          {
 487   1              reg32  timeout;
C51 COMPILER V9.03   CYFITTER_CFG                                                          04/04/2015 14:09:22 PAGE 9   

 488   1              reg32* timeout_p = &timeout;
 489   1              reg8   pllLock;
 490   1      
 491   1      
 492   1              /* Configure Digital Clocks based on settings from Clock DWR */
 493   1              CY_SET_XTND_REG24((void CYFAR *)(CYREG_CLKDIST_DCFG0_CFG0), 0x180001);
 494   1              CY_SET_XTND_REG24((void CYFAR *)(CYREG_CLKDIST_DCFG1_CFG0), 0x180017);
 495   1              CY_SET_XTND_REG24((void CYFAR *)(CYREG_CLKDIST_DCFG2_CFG0), 0x19001D);
 496   1      
 497   1              /* Configure ILO based on settings from Clock DWR */
 498   1              CY_SET_REG8((void CYXDATA *)(CYREG_SLOWCLK_ILO_CR0), 0x02);
 499   1              CY_SET_REG8((void CYXDATA *)(CYREG_CLKDIST_CR), 0x08);
 500   1      
 501   1              /* Configure IMO based on settings from Clock DWR */
 502   1              CY_SET_REG8((void CYXDATA *)(CYREG_FASTCLK_IMO_CR), 0x03);
 503   1              CY_SET_REG8((void CYXDATA *)(CYREG_IMO_TR1), (CY_GET_XTND_REG8(CYREG_FLSHID_CUST_TABLES_IMO_3MHZ)));
 504   1      
 505   1              /* Configure PLL based on settings from Clock DWR */
 506   1              CY_SET_XTND_REG16((void CYFAR *)(CYREG_FASTCLK_PLL_P), 0x0008);
 507   1              CY_SET_XTND_REG16((void CYFAR *)(CYREG_FASTCLK_PLL_CFG0), 0x1051);
 508   1              /* Wait up to 250us for the PLL to lock */
 509   1              pllLock = 0;
 510   1              for (timeout = 250 / 10; *timeout_p && (pllLock != 0x03u); timeout--) { 
 511   2                      pllLock = 0x03u & ((pllLock << 1) | ((CY_GET_REG8(CYREG_FASTCLK_PLL_SR) & 0x01u) >> 0));
 512   2                      CyDelayCycles(10 * 48); /* Delay 10us based on 48MHz clock */
 513   2              }
 514   1      
 515   1              /* Configure Bus/Master Clock based on settings from Clock DWR */
 516   1              CY_SET_XTND_REG16((void CYFAR *)(CYREG_CLKDIST_MSTR0), 0x0100);
 517   1              CY_SET_REG8((void CYXDATA *)(CYREG_CLKDIST_MSTR0), 0x07);
 518   1              CY_SET_REG8((void CYXDATA *)(CYREG_CLKDIST_BCFG0), 0x00);
 519   1              CY_SET_REG8((void CYXDATA *)(CYREG_CLKDIST_BCFG2), 0x48);
 520   1              CY_SET_REG8((void CYXDATA *)(CYREG_CLKDIST_MSTR0), 0x00);
 521   1              CY_SET_REG8((void CYXDATA *)(CYREG_CLKDIST_LD), 0x02);
 522   1      
 523   1              CY_SET_REG8((void CYXDATA *)(CYREG_PM_ACT_CFG2), ((CY_GET_REG8(CYREG_PM_ACT_CFG2) | 0x07)));
 524   1      }
 525          
 526          
 527          /* Analog API Functions */
 528          
 529          /*******************************************************************************
 530          * Function Name: AnalogSetDefault
 531          ********************************************************************************
 532          *
 533          * Summary:
 534          *  Sets up the analog portions of the chip to default values based on chip
 535          *  configuration options from the project.
 536          *
 537          * Parameters:
 538          *  void
 539          *
 540          * Return:
 541          *  void
 542          *
 543          *******************************************************************************/
 544          void AnalogSetDefault(void)
 545          {
 546   1              uint8 bg_xover_inl_trim = CY_GET_XTND_REG8(CYREG_FLSHID_MFG_CFG_BG_XOVER_INL_TRIM + 1u);
 547   1              CY_SET_REG8(CYREG_BG_DFT0, bg_xover_inl_trim & 0x07u);
 548   1              CY_SET_REG8(CYREG_BG_DFT1, (bg_xover_inl_trim >> 4) & 0x0Fu);
 549   1              CY_SET_REG8(CYREG_PRT4_AG, 0x01);
C51 COMPILER V9.03   CYFITTER_CFG                                                          04/04/2015 14:09:22 PAGE 10  

 550   1              CY_SET_REG8(CYREG_PRT6_AG, 0x30);
 551   1              CY_SET_REG8(CYREG_CAPSL_CFG0, 0x00);
 552   1              CY_SET_REG8(CYREG_CMP0_SW3, 0x20);
 553   1              CY_SET_REG8(CYREG_CMP2_SW0, 0x10);
 554   1              CY_SET_REG8(CYREG_CMP2_SW4, 0x02);
 555   1              CY_SET_REG8(CYREG_BUS_SW3, 0x01);
 556   1              CY_SET_REG8(CYREG_PUMP_CR0, 0x66);
 557   1      }
 558          
 559          
 560          /*******************************************************************************
 561          * Function Name: SetAnalogRoutingPumps
 562          ********************************************************************************
 563          *
 564          * Summary:
 565          * Enables or disables the analog pumps feeding analog routing switches.
 566          * Intended to be called at startup, based on the Vdda system configuration;
 567          * may be called during operation when the user informs us that the Vdda voltage crossed the pump threshold
             -.
 568          *
 569          * Parameters:
 570          *  enabled - 1 to enable the pumps, 0 to disable the pumps
 571          *
 572          * Return:
 573          *  void
 574          *
 575          *******************************************************************************/
 576          void SetAnalogRoutingPumps(uint8 enabled)
 577          {
 578   1              uint8 regValue = CY_GET_REG8(CYREG_PUMP_CR0);
 579   1              if (enabled)
 580   1                      regValue |= 0x22;
 581   1              else
 582   1                      regValue &= ~0x22;
 583   1              CY_SET_REG8(CYREG_PUMP_CR0, regValue);
 584   1      }
 585          
 586          #define CY_AMUX_UNUSED CYREG_BOOST_SR
 587          /* Table used to specify registers used to implement CapSense_AMuxCH0 */
 588          uint8 CYXDATA * const CYCODE CapSense_AMuxCH0__addrTable[] = {
 589                  (uint8 CYXDATA *)CYREG_PRT5_AMUX, 
 590                  (uint8 CYXDATA *)CYREG_PRT5_AMUX, 
 591                  (uint8 CYXDATA *)CYREG_PRT5_AMUX, 
 592                  (uint8 CYXDATA *)CYREG_PRT5_AMUX, 
 593                  (uint8 CYXDATA *)CYREG_PRT5_AMUX, 
 594                  (uint8 CYXDATA *)CYREG_PRT5_AMUX, 
 595                  (uint8 CYXDATA *)CYREG_PRT5_AMUX, 
 596                  (uint8 CYXDATA *)CYREG_PRT6_AMUX, 
 597                  (uint8 CYXDATA *)CYREG_CMP0_SW3, 
 598                  (uint8 CYXDATA *)CYREG_DAC2_SW3, 
 599          };
 600          
 601          /* Table used to define bit masks used to enable inputs for CapSense_AMuxCH0 */
 602          const uint8 CYCODE CapSense_AMuxCH0__maskTable[] = {
 603                  0x40, 
 604                  0x20, 
 605                  0x01, 
 606                  0x02, 
 607                  0x04, 
 608                  0x08, 
 609                  0x10, 
 610                  0x10, 
C51 COMPILER V9.03   CYFITTER_CFG                                                          04/04/2015 14:09:22 PAGE 11  

 611                  0x01, 
 612                  0x10, 
 613          };
 614          
 615          /*******************************************************************************
 616          * Function Name: CapSense_AMuxCH0_Set
 617          ********************************************************************************
 618          * Summary:
 619          *  This function is used to set a particular channel as active on the AMux.
 620          *
 621          * Parameters:  
 622          *   channel - The mux channel input to set as active
 623          *
 624          * Return:
 625          *   void
 626          *
 627          *******************************************************************************/
 628          void CapSense_AMuxCH0_Set(uint8 channel) CYREENTRANT
 629          {
 630   1              if (channel >= 10)
 631   1                      return;
 632   1              *CapSense_AMuxCH0__addrTable[channel] |= CapSense_AMuxCH0__maskTable[channel];
 633   1      }
 634          
 635          /*******************************************************************************
 636          * Function Name: CapSense_AMuxCH0_Unset
 637          ********************************************************************************
 638          * Summary:
 639          *  This function is used to clear a particular channel from being active on the
 640          *  AMux.
 641          *
 642          * Parameters:  
 643          *   channel - The mux channel input to mark inactive
 644          *
 645          * Return:
 646          *   void
 647          *
 648          *******************************************************************************/
 649          void CapSense_AMuxCH0_Unset(uint8 channel) CYREENTRANT
 650          {
 651   1              if (channel >= 10)
 652   1                      return;
 653   1              *CapSense_AMuxCH0__addrTable[channel] &= ~CapSense_AMuxCH0__maskTable[channel];
 654   1      }
 655          
 656          
 657          
 658          /*******************************************************************************
 659          * Function Name: cyfitter_cfg
 660          ********************************************************************************
 661          * Summary:
 662          *  This function is called by the start-up code for the selected device. It
 663          *  performs all of the necessary device configuration based on the design
 664          *  settings.  This includes settings from the Design Wide Resources (DWR) such
 665          *  as Clocks and Pins as well as any component configuration that is necessary.
 666          *
 667          * Parameters:  
 668          *   void
 669          *
 670          * Return:
 671          *   void
 672          *
C51 COMPILER V9.03   CYFITTER_CFG                                                          04/04/2015 14:09:22 PAGE 12  

 673          *******************************************************************************/
 674          void cyfitter_cfg(void)
 675          {
 676   1              /* Enable/Disable Debug functionality based on settings from System DWR */
 677   1              CY_SET_XTND_REG8(CYREG_MLOGIC_DEBUG, (CY_GET_XTND_REG8(CYREG_MLOGIC_DEBUG) | 0x05));
 678   1      
 679   1              {
 680   2                      uint8 CYDATA i;
 681   2      
 682   2                      /* Zero out critical memory blocks before beginning configuration */
 683   2                      for (i = 0; i < CFG_MEMSET_COUNT; i++)
 684   2                      {
 685   3                              const cfg_memset_t CYCODE * CYDATA ms = &cfg_memset_list[i];
 686   3                              CYMEMZERO(ms->address, ms->size);
 687   3                      }
 688   2      
 689   2                      cfg_write_bytes_code(cfg_byte_table);
 690   2      
 691   2                      /* Perform normal device configuration. Order is not critical for these items. */
 692   2                      CY_SET_XTND_REG16((void CYFAR *)(CYREG_CAPSR_CFG0), 0x0300);
 693   2                      CY_SET_XTND_REG16((void CYFAR *)(CYREG_LUT0_CR), 0x0003);
 694   2                      CY_SET_XTND_REG16((void CYFAR *)(CYREG_LUT2_CR), 0x0203);
 695   2      
 696   2                      /* Enable digital routing */
 697   2                      CY_SET_XTND_REG8(CYREG_BCTL0_BANK_CTL, CY_GET_XTND_REG8(CYREG_BCTL0_BANK_CTL) | 0x02u);
 698   2                      CY_SET_XTND_REG8(CYREG_BCTL1_BANK_CTL, CY_GET_XTND_REG8(CYREG_BCTL1_BANK_CTL) | 0x02u);
 699   2      
 700   2                      /* Enable UDB array */
 701   2                      CY_SET_REG8(CYREG_PM_ACT_CFG0, CY_GET_REG8(CYREG_PM_ACT_CFG0) | 0x40u);
 702   2                      CY_SET_REG8(CYREG_PM_AVAIL_CR2, CY_GET_REG8(CYREG_PM_AVAIL_CR2) | 0x10u);
 703   2              }
 704   1      
 705   1              /* Perform second pass device configuration. These items must be configured in specific order after the r
             -egular configuration is done. */
 706   1              CYCONFIGCPYCODE((void CYFAR *)(CYREG_PRT12_DR), (void CYCODE *)(BS_IOPINS0_7_VAL), 10);
 707   1              CYCONFIGCPYCODE((void CYFAR *)(CYREG_PRT15_DR), (void CYCODE *)(BS_IOPINS0_8_VAL), 10);
 708   1              CYCONFIGCPYCODE((void CYFAR *)(CYREG_PRT2_DM0), (void CYCODE *)(BS_IOPINS0_2_VAL), 8);
 709   1              CYCONFIGCPYCODE((void CYFAR *)(CYREG_PRT4_DR), (void CYCODE *)(BS_IOPINS0_4_VAL), 10);
 710   1              CYCONFIGCPYCODE((void CYFAR *)(CYREG_PRT5_DM0), (void CYCODE *)(BS_IOPINS0_5_VAL), 8);
 711   1              CYCONFIGCPYCODE((void CYFAR *)(CYREG_PRT6_DR), (void CYCODE *)(BS_IOPINS0_6_VAL), 10);
 712   1              CY_SET_XTND_REG8((void CYFAR *)(CYREG_B0_P6_U1_CFG27), 0xC4);
 713   1              CY_SET_XTND_REG8((void CYFAR *)(CYREG_B1_P3_U1_CFG27), 0x44);
 714   1              CY_SET_REG8((void CYXDATA *)(CYREG_INTC_CSR_EN), 0x01);
 715   1      
 716   1              if (CYDEV_CHIP_REV_ACTUAL < 5)
 717   1              {
 718   2                      CY_SET_REG8(CYDEV_MFGCFG_PWRSYS_WAKE_TR2, 0x3A);
 719   2              }
 720   1      
 721   1      
 722   1              /* Set Flash Cycles based on max possible frequency in case a glitch occurs during ClockSetup(). */
 723   1              CY_SET_REG8((void CYXDATA *)(CYREG_CACHE_CR), ((CYDEV_INSTRUCT_CACHE_ENABLED) ? 0xF1 : 0xC0));
 724   1              /* Setup clocks based on selections from Clock DWR */
 725   1              ClockSetup();
 726   1              /* Set Flash Cycles based on newly configured 24.00MHz Bus Clock. */
 727   1              CY_SET_REG8((void CYXDATA *)(CYREG_CACHE_CR), ((CYDEV_INSTRUCT_CACHE_ENABLED) ? 0xB1 : 0x80));
 728   1      
 729   1              /* Perform basic analog initialization to defaults */
 730   1              AnalogSetDefault();
 731   1      
 732   1              /* Configure alternate active mode */
 733   1              CYCONFIGCPY((void CYFAR *)CYDEV_PM_STBY_BASE, (void CYFAR *)CYDEV_PM_ACT_BASE, 14);
C51 COMPILER V9.03   CYFITTER_CFG                                                          04/04/2015 14:09:22 PAGE 13  

 734   1              CY_SET_REG8(CYREG_PM_STBY_CFG0, CY_GET_REG8(CYREG_PM_STBY_CFG0) & ~0x02u);      /* Disable CPU */
 735   1      }
C51 COMPILER V9.03   CYFITTER_CFG                                                          04/04/2015 14:09:22 PAGE 14  

ASSEMBLY LISTING OF GENERATED OBJECT CODE


             ; FUNCTION _CyClockStartupError (BEGIN)
                                           ; SOURCE LINE # 48
0000 900000      R     MOV     DPTR,#errorCode
0003 EF                MOV     A,R7
0004 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 49
                                           ; SOURCE LINE # 51
0005 900000      R     MOV     DPTR,#errorCode
0008 E0                MOVX    A,@DPTR
0009 FF                MOV     R7,A
000A 900000      R     MOV     DPTR,#errorCode
000D EF                MOV     A,R7
000E F0                MOVX    @DPTR,A
000F         ?C0001:
                                           ; SOURCE LINE # 63
000F 80FE              SJMP    ?C0001
0011         ?C0002:
                                           ; SOURCE LINE # 64
0011         ?C0003:
0011 22                RET     
             ; FUNCTION _CyClockStartupError (END)

             ; FUNCTION ClockSetup (BEGIN)
                                           ; SOURCE LINE # 485
                                           ; SOURCE LINE # 486
                                           ; SOURCE LINE # 488
0000 7E00        R     MOV     R6,#HIGH timeout
0002 7F00        R     MOV     R7,#LOW timeout
0004 900000      R     MOV     DPTR,#timeout_p
0007 EE                MOV     A,R6
0008 F0                MOVX    @DPTR,A
0009 A3                INC     DPTR
000A EF                MOV     A,R7
000B F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 493
000C 7B00              MOV     R3,#00H
000E 7A40              MOV     R2,#040H
0010 7980              MOV     R1,#080H
0012 7F01              MOV     R7,#01H
0014 7E00              MOV     R6,#00H
0016 7D18              MOV     R5,#018H
0018 7C00              MOV     R4,#00H
001A 120000      E     LCALL   _cywrite24
                                           ; SOURCE LINE # 494
001D 7B00              MOV     R3,#00H
001F 7A40              MOV     R2,#040H
0021 7984              MOV     R1,#084H
0023 7F17              MOV     R7,#017H
0025 7E00              MOV     R6,#00H
0027 7D18              MOV     R5,#018H
0029 7C00              MOV     R4,#00H
002B 120000      E     LCALL   _cywrite24
                                           ; SOURCE LINE # 495
002E 7B00              MOV     R3,#00H
0030 7A40              MOV     R2,#040H
0032 7988              MOV     R1,#088H
0034 7F1D              MOV     R7,#01DH
0036 7E00              MOV     R6,#00H
0038 7D19              MOV     R5,#019H
C51 COMPILER V9.03   CYFITTER_CFG                                                          04/04/2015 14:09:22 PAGE 15  

003A 7C00              MOV     R4,#00H
003C 120000      E     LCALL   _cywrite24
                                           ; SOURCE LINE # 498
003F 904300            MOV     DPTR,#04300H
0042 7402              MOV     A,#02H
0044 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 499
0045 904000            MOV     DPTR,#04000H
0048 7408              MOV     A,#08H
004A F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 502
004B 904200            MOV     DPTR,#04200H
004E 7403              MOV     A,#03H
0050 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 503
0051 7B0C              MOV     R3,#0CH
0053 7A01              MOV     R2,#01H
0055 7908              MOV     R1,#08H
0057 120000      E     LCALL   _cyread8
005A 9046A1            MOV     DPTR,#046A1H
005D EF                MOV     A,R7
005E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 506
005F 7B00              MOV     R3,#00H
0061 7A42              MOV     R2,#042H
0063 7922              MOV     R1,#022H
0065 7D08              MOV     R5,#08H
0067 7C00              MOV     R4,#00H
0069 120000      E     LCALL   _cywrite16
                                           ; SOURCE LINE # 507
006C 7B00              MOV     R3,#00H
006E 7A42              MOV     R2,#042H
0070 7920              MOV     R1,#020H
0072 7D51              MOV     R5,#051H
0074 7C10              MOV     R4,#010H
0076 120000      E     LCALL   _cywrite16
                                           ; SOURCE LINE # 509
0079 900000      R     MOV     DPTR,#pllLock
007C E4                CLR     A
007D F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 510
007E 7F19              MOV     R7,#019H
0080 7E00              MOV     R6,#00H
0082 7D00              MOV     R5,#00H
0084 7C00              MOV     R4,#00H
0086 900000      R     MOV     DPTR,#timeout
0089 120000      E     LCALL   ?C?LSTXDATA
008C         ?C0004:
008C 900000      R     MOV     DPTR,#timeout_p
008F E0                MOVX    A,@DPTR
0090 FE                MOV     R6,A
0091 A3                INC     DPTR
0092 E0                MOVX    A,@DPTR
0093 FF                MOV     R7,A
0094 8F82              MOV     DPL,R7
0096 8E83              MOV     DPH,R6
0098 E0                MOVX    A,@DPTR
0099 FC                MOV     R4,A
009A A3                INC     DPTR
009B E0                MOVX    A,@DPTR
009C FD                MOV     R5,A
009D A3                INC     DPTR
C51 COMPILER V9.03   CYFITTER_CFG                                                          04/04/2015 14:09:22 PAGE 16  

009E E0                MOVX    A,@DPTR
009F FE                MOV     R6,A
00A0 A3                INC     DPTR
00A1 E0                MOVX    A,@DPTR
00A2 FF                MOV     R7,A
00A3 EC                MOV     A,R4
00A4 4D                ORL     A,R5
00A5 4E                ORL     A,R6
00A6 4F                ORL     A,R7
00A7 605F              JZ      ?C0005
00A9 900000      R     MOV     DPTR,#pllLock
00AC E0                MOVX    A,@DPTR
00AD FF                MOV     R7,A
00AE EF                MOV     A,R7
00AF 6403              XRL     A,#03H
00B1 6055              JZ      ?C0005
                                           ; SOURCE LINE # 511
00B3 904225            MOV     DPTR,#04225H
00B6 E0                MOVX    A,@DPTR
00B7 FF                MOV     R7,A
00B8 EF                MOV     A,R7
00B9 5401              ANL     A,#01H
00BB FF                MOV     R7,A
00BC 7E00              MOV     R6,#00H
00BE 900000      R     MOV     DPTR,#pllLock
00C1 E0                MOVX    A,@DPTR
00C2 FE                MOV     R6,A
00C3 EE                MOV     A,R6
00C4 25E0              ADD     A,ACC
00C6 FE                MOV     R6,A
00C7 EE                MOV     A,R6
00C8 4F                ORL     A,R7
00C9 FF                MOV     R7,A
00CA EF                MOV     A,R7
00CB 5403              ANL     A,#03H
00CD FF                MOV     R7,A
00CE 900000      R     MOV     DPTR,#pllLock
00D1 EF                MOV     A,R7
00D2 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 512
00D3 7FE0              MOV     R7,#0E0H
00D5 7E01              MOV     R6,#01H
00D7 7D00              MOV     R5,#00H
00D9 7C00              MOV     R4,#00H
00DB 120000      E     LCALL   _CyDelayCycles
                                           ; SOURCE LINE # 513
00DE         ?C0006:
00DE 900000      R     MOV     DPTR,#timeout
00E1 E0                MOVX    A,@DPTR
00E2 FC                MOV     R4,A
00E3 A3                INC     DPTR
00E4 E0                MOVX    A,@DPTR
00E5 FD                MOV     R5,A
00E6 A3                INC     DPTR
00E7 E0                MOVX    A,@DPTR
00E8 FE                MOV     R6,A
00E9 A3                INC     DPTR
00EA E0                MOVX    A,@DPTR
00EB FF                MOV     R7,A
00EC 7BFF              MOV     R3,#0FFH
00EE 7AFF              MOV     R2,#0FFH
00F0 79FF              MOV     R1,#0FFH
C51 COMPILER V9.03   CYFITTER_CFG                                                          04/04/2015 14:09:22 PAGE 17  

00F2 78FF              MOV     R0,#0FFH
00F4 EF                MOV     A,R7
00F5 2B                ADD     A,R3
00F6 FF                MOV     R7,A
00F7 EE                MOV     A,R6
00F8 3A                ADDC    A,R2
00F9 FE                MOV     R6,A
00FA ED                MOV     A,R5
00FB 39                ADDC    A,R1
00FC FD                MOV     R5,A
00FD EC                MOV     A,R4
00FE 38                ADDC    A,R0
00FF FC                MOV     R4,A
0100 900000      R     MOV     DPTR,#timeout
0103 120000      E     LCALL   ?C?LSTXDATA
0106 8084              SJMP    ?C0004
0108         ?C0005:
                                           ; SOURCE LINE # 516
0108 7B00              MOV     R3,#00H
010A 7A40              MOV     R2,#040H
010C 7904              MOV     R1,#04H
010E 7D00              MOV     R5,#00H
0110 7C01              MOV     R4,#01H
0112 120000      E     LCALL   _cywrite16
                                           ; SOURCE LINE # 517
0115 904004            MOV     DPTR,#04004H
0118 7407              MOV     A,#07H
011A F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 518
011B 904006            MOV     DPTR,#04006H
011E E4                CLR     A
011F F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 519
0120 904008            MOV     DPTR,#04008H
0123 7448              MOV     A,#048H
0125 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 520
0126 904004            MOV     DPTR,#04004H
0129 E4                CLR     A
012A F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 521
012B 904001            MOV     DPTR,#04001H
012E 7402              MOV     A,#02H
0130 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 523
0131 9043A2            MOV     DPTR,#043A2H
0134 E0                MOVX    A,@DPTR
0135 FF                MOV     R7,A
0136 EF                MOV     A,R7
0137 4407              ORL     A,#07H
0139 FF                MOV     R7,A
013A EF                MOV     A,R7
013B F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 524
013C         ?C0007:
013C 22                RET     
             ; FUNCTION ClockSetup (END)

             ; FUNCTION AnalogSetDefault (BEGIN)
                                           ; SOURCE LINE # 544
                                           ; SOURCE LINE # 545
                                           ; SOURCE LINE # 546
C51 COMPILER V9.03   CYFITTER_CFG                                                          04/04/2015 14:09:22 PAGE 18  

0000 7B0C              MOV     R3,#0CH
0002 7A01              MOV     R2,#01H
0004 79CF              MOV     R1,#0CFH
0006 120000      E     LCALL   _cyread8
0009 900000      R     MOV     DPTR,#bg_xover_inl_trim
000C EF                MOV     A,R7
000D F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 547
000E 900000      R     MOV     DPTR,#bg_xover_inl_trim
0011 E0                MOVX    A,@DPTR
0012 FF                MOV     R7,A
0013 EF                MOV     A,R7
0014 5407              ANL     A,#07H
0016 FF                MOV     R7,A
0017 90586E            MOV     DPTR,#0586EH
001A EF                MOV     A,R7
001B F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 548
001C 900000      R     MOV     DPTR,#bg_xover_inl_trim
001F E0                MOVX    A,@DPTR
0020 FF                MOV     R7,A
0021 EF                MOV     A,R7
0022 C4                SWAP    A
0023 540F              ANL     A,#0FH
0025 FF                MOV     R7,A
0026 EF                MOV     A,R7
0027 540F              ANL     A,#0FH
0029 FF                MOV     R7,A
002A 90586F            MOV     DPTR,#0586FH
002D EF                MOV     A,R7
002E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 549
002F 90514D            MOV     DPTR,#0514DH
0032 7401              MOV     A,#01H
0034 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 550
0035 90516D            MOV     DPTR,#0516DH
0038 7430              MOV     A,#030H
003A F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 551
003B 905870            MOV     DPTR,#05870H
003E E4                CLR     A
003F F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 552
0040 905AC3            MOV     DPTR,#05AC3H
0043 7420              MOV     A,#020H
0045 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 553
0046 905AD0            MOV     DPTR,#05AD0H
0049 7410              MOV     A,#010H
004B F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 554
004C 905AD4            MOV     DPTR,#05AD4H
004F 7402              MOV     A,#02H
0051 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 555
0052 905B5B            MOV     DPTR,#05B5BH
0055 7401              MOV     A,#01H
0057 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 556
0058 905876            MOV     DPTR,#05876H
005B 7466              MOV     A,#066H
C51 COMPILER V9.03   CYFITTER_CFG                                                          04/04/2015 14:09:22 PAGE 19  

005D F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 557
005E         ?C0008:
005E 22                RET     
             ; FUNCTION AnalogSetDefault (END)

             ; FUNCTION _SetAnalogRoutingPumps (BEGIN)
                                           ; SOURCE LINE # 576
0000 900000      R     MOV     DPTR,#enabled
0003 EF                MOV     A,R7
0004 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 577
                                           ; SOURCE LINE # 578
0005 905876            MOV     DPTR,#05876H
0008 E0                MOVX    A,@DPTR
0009 FF                MOV     R7,A
000A 900000      R     MOV     DPTR,#regValue
000D EF                MOV     A,R7
000E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 579
000F 900000      R     MOV     DPTR,#enabled
0012 E0                MOVX    A,@DPTR
0013 FF                MOV     R7,A
0014 EF                MOV     A,R7
0015 6010              JZ      ?C0009
                                           ; SOURCE LINE # 580
0017 900000      R     MOV     DPTR,#regValue
001A E0                MOVX    A,@DPTR
001B FF                MOV     R7,A
001C EF                MOV     A,R7
001D 4422              ORL     A,#022H
001F FF                MOV     R7,A
0020 900000      R     MOV     DPTR,#regValue
0023 EF                MOV     A,R7
0024 F0                MOVX    @DPTR,A
0025 800E              SJMP    ?C0010
0027         ?C0009:
                                           ; SOURCE LINE # 582
0027 900000      R     MOV     DPTR,#regValue
002A E0                MOVX    A,@DPTR
002B FF                MOV     R7,A
002C EF                MOV     A,R7
002D 54DD              ANL     A,#0DDH
002F FF                MOV     R7,A
0030 900000      R     MOV     DPTR,#regValue
0033 EF                MOV     A,R7
0034 F0                MOVX    @DPTR,A
0035         ?C0010:
                                           ; SOURCE LINE # 583
0035 900000      R     MOV     DPTR,#regValue
0038 E0                MOVX    A,@DPTR
0039 FF                MOV     R7,A
003A 905876            MOV     DPTR,#05876H
003D EF                MOV     A,R7
003E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 584
003F         ?C0011:
003F 22                RET     
             ; FUNCTION _SetAnalogRoutingPumps (END)

             ; FUNCTION _?CapSense_AMuxCH0_Set (BEGIN)
                                           ; SOURCE LINE # 628
C51 COMPILER V9.03   CYFITTER_CFG                                                          04/04/2015 14:09:22 PAGE 20  

0000 90FFFF            MOV     DPTR,#0FFFFH
0003 120000      E     LCALL   ?C?ADDXBP
0006 EF                MOV     A,R7
0007 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 630
0008 850083      E     MOV     DPH,?C_XBP
000B 850082      E     MOV     DPL,?C_XBP+01H
000E E0                MOVX    A,@DPTR
000F FF                MOV     R7,A
0010 EF                MOV     A,R7
0011 C3                CLR     C
0012 940A              SUBB    A,#0AH
0014 503C              JNC     ?C0013
0016         ?C0012:
                                           ; SOURCE LINE # 632
0016 850083      E     MOV     DPH,?C_XBP
0019 850082      E     MOV     DPL,?C_XBP+01H
001C E0                MOVX    A,@DPTR
001D FF                MOV     R7,A
001E EF                MOV     A,R7
001F 25E0              ADD     A,ACC
0021 2400        R     ADD     A,#LOW CapSense_AMuxCH0__addrTable
0023 F582              MOV     DPL,A
0025 E4                CLR     A
0026 3400        R     ADDC    A,#HIGH CapSense_AMuxCH0__addrTable
0028 F583              MOV     DPH,A
002A E4                CLR     A
002B 93                MOVC    A,@A+DPTR
002C FE                MOV     R6,A
002D 7401              MOV     A,#01H
002F 93                MOVC    A,@A+DPTR
0030 FF                MOV     R7,A
0031 8F82              MOV     DPL,R7
0033 8E83              MOV     DPH,R6
0035 C083              PUSH    DPH
0037 C082              PUSH    DPL
0039 E0                MOVX    A,@DPTR
003A FF                MOV     R7,A
003B 850083      E     MOV     DPH,?C_XBP
003E 850082      E     MOV     DPL,?C_XBP+01H
0041 E0                MOVX    A,@DPTR
0042 FE                MOV     R6,A
0043 EE                MOV     A,R6
0044 900000      R     MOV     DPTR,#CapSense_AMuxCH0__maskTable
0047 93                MOVC    A,@A+DPTR
0048 FE                MOV     R6,A
0049 EF                MOV     A,R7
004A 4E                ORL     A,R6
004B FF                MOV     R7,A
004C D082              POP     DPL
004E D083              POP     DPH
0050 EF                MOV     A,R7
0051 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 633
0052         ?C0013:
0052 900001            MOV     DPTR,#01H
0055 120000      E     LCALL   ?C?ADDXBP
0058 22                RET     
             ; FUNCTION _?CapSense_AMuxCH0_Set (END)

             ; FUNCTION _?CapSense_AMuxCH0_Unset (BEGIN)
                                           ; SOURCE LINE # 649
C51 COMPILER V9.03   CYFITTER_CFG                                                          04/04/2015 14:09:22 PAGE 21  

0000 90FFFF            MOV     DPTR,#0FFFFH
0003 120000      E     LCALL   ?C?ADDXBP
0006 EF                MOV     A,R7
0007 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 651
0008 850083      E     MOV     DPH,?C_XBP
000B 850082      E     MOV     DPL,?C_XBP+01H
000E E0                MOVX    A,@DPTR
000F FF                MOV     R7,A
0010 EF                MOV     A,R7
0011 C3                CLR     C
0012 940A              SUBB    A,#0AH
0014 503F              JNC     ?C0015
0016         ?C0014:
                                           ; SOURCE LINE # 653
0016 850083      E     MOV     DPH,?C_XBP
0019 850082      E     MOV     DPL,?C_XBP+01H
001C E0                MOVX    A,@DPTR
001D FF                MOV     R7,A
001E EF                MOV     A,R7
001F 25E0              ADD     A,ACC
0021 2400        R     ADD     A,#LOW CapSense_AMuxCH0__addrTable
0023 F582              MOV     DPL,A
0025 E4                CLR     A
0026 3400        R     ADDC    A,#HIGH CapSense_AMuxCH0__addrTable
0028 F583              MOV     DPH,A
002A E4                CLR     A
002B 93                MOVC    A,@A+DPTR
002C FE                MOV     R6,A
002D 7401              MOV     A,#01H
002F 93                MOVC    A,@A+DPTR
0030 FF                MOV     R7,A
0031 8F82              MOV     DPL,R7
0033 8E83              MOV     DPH,R6
0035 C083              PUSH    DPH
0037 C082              PUSH    DPL
0039 E0                MOVX    A,@DPTR
003A FF                MOV     R7,A
003B 850083      E     MOV     DPH,?C_XBP
003E 850082      E     MOV     DPL,?C_XBP+01H
0041 E0                MOVX    A,@DPTR
0042 FE                MOV     R6,A
0043 EE                MOV     A,R6
0044 900000      R     MOV     DPTR,#CapSense_AMuxCH0__maskTable
0047 93                MOVC    A,@A+DPTR
0048 FE                MOV     R6,A
0049 EE                MOV     A,R6
004A F4                CPL     A
004B FE                MOV     R6,A
004C EF                MOV     A,R7
004D 5E                ANL     A,R6
004E FF                MOV     R7,A
004F D082              POP     DPL
0051 D083              POP     DPH
0053 EF                MOV     A,R7
0054 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 654
0055         ?C0015:
0055 900001            MOV     DPTR,#01H
0058 120000      E     LCALL   ?C?ADDXBP
005B 22                RET     
             ; FUNCTION _?CapSense_AMuxCH0_Unset (END)
C51 COMPILER V9.03   CYFITTER_CFG                                                          04/04/2015 14:09:22 PAGE 22  


             ; FUNCTION cyfitter_cfg (BEGIN)
                                           ; SOURCE LINE # 674
                                           ; SOURCE LINE # 675
                                           ; SOURCE LINE # 677
0000 7B00              MOV     R3,#00H
0002 7A46              MOV     R2,#046H
0004 79E8              MOV     R1,#0E8H
0006 120000      E     LCALL   _cyread8
0009 EF                MOV     A,R7
000A 4405              ORL     A,#05H
000C FD                MOV     R5,A
000D 7B00              MOV     R3,#00H
000F 7A46              MOV     R2,#046H
0011 79E8              MOV     R1,#0E8H
0013 120000      E     LCALL   _cywrite8
                                           ; SOURCE LINE # 679
                                           ; SOURCE LINE # 683
0016 750000      R     MOV     i,#00H
0019         ?C0016:
0019 E500        R     MOV     A,i
001B C3                CLR     C
001C 9407              SUBB    A,#07H
001E 5042              JNC     ?C0017
                                           ; SOURCE LINE # 684
                                           ; SOURCE LINE # 685
0020 AF00        R     MOV     R7,i
0022 EF                MOV     A,R7
0023 75F005            MOV     B,#05H
0026 A4                MUL     AB
0027 2400        R     ADD     A,#LOW cfg_memset_list
0029 F582              MOV     DPL,A
002B E4                CLR     A
002C 3400        R     ADDC    A,#HIGH cfg_memset_list
002E F583              MOV     DPH,A
0030 AF82              MOV     R7,DPL
0032 AE83              MOV     R6,DPH
0034 8E00        R     MOV     ms,R6
0036 8F00        R     MOV     ms+01H,R7
                                           ; SOURCE LINE # 686
0038 AE00        R     MOV     R6,ms
003A AF00        R     MOV     R7,ms+01H
003C 8F82              MOV     DPL,R7
003E 8E83              MOV     DPH,R6
0040 E4                CLR     A
0041 93                MOVC    A,@A+DPTR
0042 FB                MOV     R3,A
0043 7401              MOV     A,#01H
0045 93                MOVC    A,@A+DPTR
0046 FA                MOV     R2,A
0047 7402              MOV     A,#02H
0049 93                MOVC    A,@A+DPTR
004A F9                MOV     R1,A
004B AE00        R     MOV     R6,ms
004D AF00        R     MOV     R7,ms+01H
004F 8F82              MOV     DPL,R7
0051 8E83              MOV     DPH,R6
0053 7403              MOV     A,#03H
0055 93                MOVC    A,@A+DPTR
0056 FC                MOV     R4,A
0057 7404              MOV     A,#04H
0059 93                MOVC    A,@A+DPTR
C51 COMPILER V9.03   CYFITTER_CFG                                                          04/04/2015 14:09:22 PAGE 23  

005A FD                MOV     R5,A
005B 120000      E     LCALL   _cymemzero
                                           ; SOURCE LINE # 687
005E         ?C0018:
005E 0500        R     INC     i
0060 80B7              SJMP    ?C0016
0062         ?C0017:
                                           ; SOURCE LINE # 689
0062 7E00        R     MOV     R6,#HIGH cfg_byte_table
0064 7F00        R     MOV     R7,#LOW cfg_byte_table
0066 120000      E     LCALL   _cfg_write_bytes_code
                                           ; SOURCE LINE # 692
0069 7B00              MOV     R3,#00H
006B 7A58              MOV     R2,#058H
006D 7972              MOV     R1,#072H
006F 7D00              MOV     R5,#00H
0071 7C03              MOV     R4,#03H
0073 120000      E     LCALL   _cywrite16
                                           ; SOURCE LINE # 693
0076 7B00              MOV     R3,#00H
0078 7A58              MOV     R2,#058H
007A 7948              MOV     R1,#048H
007C 7D03              MOV     R5,#03H
007E 7C00              MOV     R4,#00H
0080 120000      E     LCALL   _cywrite16
                                           ; SOURCE LINE # 694
0083 7B00              MOV     R3,#00H
0085 7A58              MOV     R2,#058H
0087 794C              MOV     R1,#04CH
0089 7D03              MOV     R5,#03H
008B 7C02              MOV     R4,#02H
008D 120000      E     LCALL   _cywrite16
                                           ; SOURCE LINE # 697
0090 7B01              MOV     R3,#01H
0092 7A50              MOV     R2,#050H
0094 7903              MOV     R1,#03H
0096 120000      E     LCALL   _cyread8
0099 EF                MOV     A,R7
009A 4402              ORL     A,#02H
009C FD                MOV     R5,A
009D 7B01              MOV     R3,#01H
009F 7A50              MOV     R2,#050H
00A1 7903              MOV     R1,#03H
00A3 120000      E     LCALL   _cywrite8
                                           ; SOURCE LINE # 698
00A6 7B01              MOV     R3,#01H
00A8 7A50              MOV     R2,#050H
00AA 7913              MOV     R1,#013H
00AC 120000      E     LCALL   _cyread8
00AF EF                MOV     A,R7
00B0 4402              ORL     A,#02H
00B2 FD                MOV     R5,A
00B3 7B01              MOV     R3,#01H
00B5 7A50              MOV     R2,#050H
00B7 7913              MOV     R1,#013H
00B9 120000      E     LCALL   _cywrite8
                                           ; SOURCE LINE # 701
00BC 9043A0            MOV     DPTR,#043A0H
00BF E0                MOVX    A,@DPTR
00C0 FF                MOV     R7,A
00C1 EF                MOV     A,R7
00C2 4440              ORL     A,#040H
C51 COMPILER V9.03   CYFITTER_CFG                                                          04/04/2015 14:09:22 PAGE 24  

00C4 FF                MOV     R7,A
00C5 9043A0            MOV     DPTR,#043A0H
00C8 EF                MOV     A,R7
00C9 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 702
00CA 9043C2            MOV     DPTR,#043C2H
00CD E0                MOVX    A,@DPTR
00CE FF                MOV     R7,A
00CF EF                MOV     A,R7
00D0 4410              ORL     A,#010H
00D2 FF                MOV     R7,A
00D3 9043C2            MOV     DPTR,#043C2H
00D6 EF                MOV     A,R7
00D7 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 703
                                           ; SOURCE LINE # 706
00D8 7C00        R     MOV     R4,#HIGH BS_IOPINS0_7_VAL
00DA 7D00        R     MOV     R5,#LOW BS_IOPINS0_7_VAL
00DC 7B00              MOV     R3,#00H
00DE 7A51              MOV     R2,#051H
00E0 79C0              MOV     R1,#0C0H
00E2 7F0A              MOV     R7,#0AH
00E4 7E00              MOV     R6,#00H
00E6 120000      E     LCALL   _cyconfigcpycode
                                           ; SOURCE LINE # 707
00E9 7C00        R     MOV     R4,#HIGH BS_IOPINS0_8_VAL
00EB 7D00        R     MOV     R5,#LOW BS_IOPINS0_8_VAL
00ED 7B00              MOV     R3,#00H
00EF 7A51              MOV     R2,#051H
00F1 79F0              MOV     R1,#0F0H
00F3 7F0A              MOV     R7,#0AH
00F5 7E00              MOV     R6,#00H
00F7 120000      E     LCALL   _cyconfigcpycode
                                           ; SOURCE LINE # 708
00FA 7C00        R     MOV     R4,#HIGH BS_IOPINS0_2_VAL
00FC 7D00        R     MOV     R5,#LOW BS_IOPINS0_2_VAL
00FE 7B00              MOV     R3,#00H
0100 7A51              MOV     R2,#051H
0102 7922              MOV     R1,#022H
0104 7F08              MOV     R7,#08H
0106 7E00              MOV     R6,#00H
0108 120000      E     LCALL   _cyconfigcpycode
                                           ; SOURCE LINE # 709
010B 7C00        R     MOV     R4,#HIGH BS_IOPINS0_4_VAL
010D 7D00        R     MOV     R5,#LOW BS_IOPINS0_4_VAL
010F 7B00              MOV     R3,#00H
0111 7A51              MOV     R2,#051H
0113 7940              MOV     R1,#040H
0115 7F0A              MOV     R7,#0AH
0117 7E00              MOV     R6,#00H
0119 120000      E     LCALL   _cyconfigcpycode
                                           ; SOURCE LINE # 710
011C 7C00        R     MOV     R4,#HIGH BS_IOPINS0_5_VAL
011E 7D00        R     MOV     R5,#LOW BS_IOPINS0_5_VAL
0120 7B00              MOV     R3,#00H
0122 7A51              MOV     R2,#051H
0124 7952              MOV     R1,#052H
0126 7F08              MOV     R7,#08H
0128 7E00              MOV     R6,#00H
012A 120000      E     LCALL   _cyconfigcpycode
                                           ; SOURCE LINE # 711
012D 7C00        R     MOV     R4,#HIGH BS_IOPINS0_6_VAL
C51 COMPILER V9.03   CYFITTER_CFG                                                          04/04/2015 14:09:22 PAGE 25  

012F 7D00        R     MOV     R5,#LOW BS_IOPINS0_6_VAL
0131 7B00              MOV     R3,#00H
0133 7A51              MOV     R2,#051H
0135 7960              MOV     R1,#060H
0137 7F0A              MOV     R7,#0AH
0139 7E00              MOV     R6,#00H
013B 120000      E     LCALL   _cyconfigcpycode
                                           ; SOURCE LINE # 712
013E 7B01              MOV     R3,#01H
0140 7A0C              MOV     R2,#0CH
0142 79DB              MOV     R1,#0DBH
0144 7DC4              MOV     R5,#0C4H
0146 120000      E     LCALL   _cywrite8
                                           ; SOURCE LINE # 713
0149 7B01              MOV     R3,#01H
014B 7A16              MOV     R2,#016H
014D 79DB              MOV     R1,#0DBH
014F 7D44              MOV     R5,#044H
0151 120000      E     LCALL   _cywrite8
                                           ; SOURCE LINE # 714
0154 9044F4            MOV     DPTR,#044F4H
0157 7401              MOV     A,#01H
0159 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 716
015A 9046EC            MOV     DPTR,#046ECH
015D E0                MOVX    A,@DPTR
015E FF                MOV     R7,A
015F EF                MOV     A,R7
0160 C3                CLR     C
0161 9405              SUBB    A,#05H
0163 5006              JNC     ?C0019
                                           ; SOURCE LINE # 717
                                           ; SOURCE LINE # 718
0165 904689            MOV     DPTR,#04689H
0168 743A              MOV     A,#03AH
016A F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 719
016B         ?C0019:
                                           ; SOURCE LINE # 723
016B 904800            MOV     DPTR,#04800H
016E 74C0              MOV     A,#0C0H
0170 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 725
0171 120000      R     LCALL   ClockSetup
                                           ; SOURCE LINE # 727
0174 904800            MOV     DPTR,#04800H
0177 7480              MOV     A,#080H
0179 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 730
017A 120000      R     LCALL   AnalogSetDefault
                                           ; SOURCE LINE # 733
017D 7B00              MOV     R3,#00H
017F 7A43              MOV     R2,#043H
0181 79A0              MOV     R1,#0A0H
0183 C003              PUSH    AR3
0185 C002              PUSH    AR2
0187 C001              PUSH    AR1
0189 7B00              MOV     R3,#00H
018B 7A43              MOV     R2,#043H
018D 79B0              MOV     R1,#0B0H
018F 900000      E     MOV     DPTR,#?_cyconfigcpy?BYTE+05H
0192 EB                MOV     A,R3
C51 COMPILER V9.03   CYFITTER_CFG                                                          04/04/2015 14:09:22 PAGE 26  

0193 F0                MOVX    @DPTR,A
0194 A3                INC     DPTR
0195 EA                MOV     A,R2
0196 F0                MOVX    @DPTR,A
0197 A3                INC     DPTR
0198 E9                MOV     A,R1
0199 F0                MOVX    @DPTR,A
019A D001              POP     AR1
019C D002              POP     AR2
019E D003              POP     AR3
01A0 7F0E              MOV     R7,#0EH
01A2 7E00              MOV     R6,#00H
01A4 120000      E     LCALL   _cyconfigcpy
                                           ; SOURCE LINE # 734
01A7 9043B0            MOV     DPTR,#043B0H
01AA E0                MOVX    A,@DPTR
01AB FF                MOV     R7,A
01AC EF                MOV     A,R7
01AD 54FD              ANL     A,#0FDH
01AF FF                MOV     R7,A
01B0 9043B0            MOV     DPTR,#043B0H
01B3 EF                MOV     A,R7
01B4 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 735
01B5         ?C0020:
01B5 22                RET     
             ; FUNCTION cyfitter_cfg (END)



MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1113    ----
   CONSTANT SIZE    =   2759    ----
   XDATA SIZE       =     11    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      3    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)

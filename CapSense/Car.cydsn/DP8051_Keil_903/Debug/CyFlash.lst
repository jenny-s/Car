C51 COMPILER V9.03   CYFLASH                                                               04/04/2015 14:09:12 PAGE 1   


C51 COMPILER V9.03, COMPILATION OF MODULE CYFLASH
OBJECT MODULE PLACED IN .\DP8051_Keil_903\Debug\CyFlash.obj
COMPILER INVOKED BY: C:\Program Files\Cypress\PSoC Creator\2.1\PSoC Creator\import\keil\pk51\9.03\C51\BIN\c51.exe .\Gene
                    -rated_Source\PSoC3\CyFlash.c NOIV LARGE MODDP2 OMF2 VB(1) PR(.\DP8051_Keil_903\Debug\CyFlash.lst) CD DB NOIP OT(0) INCDI
                    -R(Generated_Source\PSoC3) OJ(.\DP8051_Keil_903\Debug\CyFlash.obj)

line level    source

   1          /*******************************************************************************
   2          * File Name: CyFlash.c
   3          * Version 3.10
   4          *
   5          *  Description:
   6          *   Provides an API for the FLASH/EEPROM.
   7          *
   8          *  Note:
   9          *   This code is endian agnostic.
  10          *
  11          *  Note:
  12          *   Documentation of the API's in this file is located in the
  13          *   System Reference Guide provided with PSoC Creator.
  14          *
  15          ********************************************************************************
  16          * Copyright 2008-2012, Cypress Semiconductor Corporation. All rights reserved.
  17          * You may use this file only in accordance with the license, terms, conditions,
  18          * disclaimers, and limitations in the end user license agreement accompanying
  19          * the software package with which this file was provided.
  20          *******************************************************************************/
  21          
  22          #include "CyFlash.h"
  23          
  24          
  25          /*******************************************************************************
  26          * Holds die temperature, updated by CySetTemp(). Used for flash writting.
  27          * The first byte is the sign of the temperature (0 = negative, 1 = positive).
  28          * The second byte is the magnitude.
  29          *******************************************************************************/
  30          uint8 dieTemperature[CY_FLASH_DIE_TEMP_DATA_SIZE];
  31          
  32          #if(CYDEV_ECC_ENABLE == 0)
  33              static uint8 * rowBuffer = 0;
  34          #endif  /* (CYDEV_ECC_ENABLE == 0) */
  35          
  36          
  37          /*******************************************************************************
  38          * Function Name: CyFlash_Start
  39          ********************************************************************************
  40          *
  41          * Summary:
  42          *  Enable the EEPROM/Flash.
  43          *
  44          *  Note: For PSoC 5, this will enable both Flash and EEPROM. For PSoC 3 and
  45          *  PSOC 5LP  this will enable only Flash.
  46          *
  47          * Parameters:
  48          *  None
  49          *
  50          * Return:
  51          *  None
  52          *
  53          *******************************************************************************/
C51 COMPILER V9.03   CYFLASH                                                               04/04/2015 14:09:12 PAGE 2   

  54          void CyFlash_Start(void) 
  55          {
  56   1          #if(CY_PSOC5A)
              
                      /* Active Power Mode */
                      *PM_ACT_EEFLASH |= PM_FLASH_EE_MASK;
              
                      /* Standby Power Mode */
                      *PM_STBY_EEFLASH |= PM_FLASH_EE_MASK;
              
                  #endif  /* (CY_PSOC5A) */
  65   1      
  66   1          #if(CY_PSOC3 || CY_PSOC5LP)
  67   1      
  68   1              /* Active Power Mode */
  69   1              *PM_ACT_FLASH_PTR |= PM_FLASH_MASK;
  70   1      
  71   1              /* Standby Power Mode */
  72   1              *PM_STBY_FLASH_PTR |= PM_FLASH_MASK;
  73   1      
  74   1          #endif  /* (CY_PSOC3 || CY_PSOC5LP) */
  75   1      }
  76          
  77          
  78          /*******************************************************************************
  79          * Function Name: CyFlash_Stop
  80          ********************************************************************************
  81          *
  82          * Summary:
  83          *  Disable the EEPROM/Flash.
  84          *
  85          *  Note:
  86          *  PSoC5 ES1:        disable both Flash and EEPROM.
  87          *  PSoC3 ES3/PSOC5A: disable only Flash.
  88          *
  89          * Parameters:
  90          *  None
  91          *
  92          * Return:
  93          *  None
  94          *
  95          * Side Effects:
  96          *  This setting is ignored as long as the CPU is currently running.  This will
  97          *  only take effect when the CPU is later disabled.
  98          *
  99          *******************************************************************************/
 100          void CyFlash_Stop(void) 
 101          {
 102   1          #if (CY_PSOC5A)
              
                      /* Active Power Mode */
                      *PM_ACT_EEFLASH &= ~PM_FLASH_EE_MASK;
              
                      /* Standby Power Mode */
                      *PM_STBY_EEFLASH &= ~PM_FLASH_EE_MASK;
              
                  #endif  /* (CY_PSOC5A) */
 111   1      
 112   1          #if (CY_PSOC3 || CY_PSOC5LP)
 113   1      
 114   1              /* Active Power Mode */
 115   1              *PM_ACT_FLASH_PTR &= ~PM_FLASH_MASK;
C51 COMPILER V9.03   CYFLASH                                                               04/04/2015 14:09:12 PAGE 3   

 116   1      
 117   1              /* Standby Power Mode */
 118   1              *PM_STBY_FLASH_PTR &= ~PM_FLASH_MASK;
 119   1      
 120   1          #endif  /* (CY_PSOC3 || CY_PSOC5LP) */
 121   1      }
 122          
 123          
 124          /*******************************************************************************
 125          * Function Name: CySetTempInt
 126          ********************************************************************************
 127          *
 128          * Summary:
 129          *  Sends a command to the SPC to read the die temperature. Sets a global value
 130          *  used by the Write functions. This function must be called once before
 131          *  executing a series of Flash writing functions.
 132          *
 133          * Parameters:
 134          *  None
 135          *
 136          * Return:
 137          *  status:
 138          *   CYRET_SUCCESS - if successful
 139          *   CYRET_LOCKED  - if Flash writing already in use
 140          *   CYRET_UNKNOWN - if there was an SPC error
 141          *
 142          *******************************************************************************/
 143          cystatus CySetTempInt(void) 
 144          {
 145   1          cystatus status;
 146   1      
 147   1          /* Make sure SPC is powered */
 148   1          CySpcStart();
 149   1      
 150   1          /* Plan for failure. */
 151   1          status = CYRET_UNKNOWN;
 152   1      
 153   1          if(CySpcLock() == CYRET_SUCCESS)
 154   1          {
 155   2              /* Write the command. */
 156   2              #if(CY_PSOC5A)
                          if(CYRET_STARTED == CySpcGetTemp(TEMP_NUMBER_OF_SAMPLES, TEMP_TIMER_PERIOD, TEMP_CLK_DIV_SELEC
             -T))
                      #else
 159   2                  if(CYRET_STARTED == CySpcGetTemp(TEMP_NUMBER_OF_SAMPLES))
 160   2              #endif  /* (CY_PSOC5A) */
 161   2                  {
 162   3                      do
 163   3                      {
 164   4                          if(CySpcReadData(dieTemperature, CY_FLASH_DIE_TEMP_DATA_SIZE) == CY_FLASH_DIE_TEMP_DAT
             -A_SIZE)
 165   4                          {
 166   5                              status = CYRET_SUCCESS;
 167   5      
 168   5                              while(CY_SPC_BUSY)
 169   5                              {
 170   6                                  /* Spin until idle. */
 171   6                                  CyDelayUs(1u);
 172   6                              }
 173   5                              break;
 174   5                          }
 175   4      
C51 COMPILER V9.03   CYFLASH                                                               04/04/2015 14:09:12 PAGE 4   

 176   4                      } while(CY_SPC_BUSY);
 177   3                  }
 178   2      
 179   2                  CySpcUnlock();
 180   2          }
 181   1          else
 182   1          {
 183   2              status = CYRET_LOCKED;
 184   2          }
 185   1      
 186   1          return (status);
 187   1      }
 188          
 189          
 190          /*******************************************************************************
 191          * Function Name: CySetTemp
 192          ********************************************************************************
 193          *
 194          * Summary:
 195          *  This is a wraparound for CySetTempInt(). It is used to return second
 196          *  successful read of temperature value.
 197          *
 198          * Parameters:
 199          *  None
 200          *
 201          * Return:
 202          *  status:
 203          *   CYRET_SUCCESS if successful.
 204          *   CYRET_LOCKED  if Flash writing already in use
 205          *   CYRET_UNKNOWN if there was an SPC error.
 206          *
 207          *  uint8 dieTemperature[2]:
 208          *   Holds die temperature for the flash writting algorithm. The first byte is
 209          *   the sign of the temperature (0 = negative, 1 = positive). The second byte is
 210          *   the magnitude.
 211          *
 212          *******************************************************************************/
 213          cystatus CySetTemp(void) 
 214          {
 215   1          cystatus status = CySetTempInt();
 216   1      
 217   1          if(status == CYRET_SUCCESS)
 218   1          {
 219   2              status = CySetTempInt();
 220   2          }
 221   1      
 222   1          return (status);
 223   1      }
 224          
 225          
 226          /*******************************************************************************
 227          * Function Name: CySetFlashEEBuffer
 228          ********************************************************************************
 229          *
 230          * Summary:
 231          *  Sets the user supplied temporary buffer to store SPC data while performing
 232          *  flash and EEPROM commands. This buffer is only necessary when Flash ECC is
 233          *  disabled.
 234          *
 235          * Parameters:
 236          *  buffer:
 237          *   Address of block of memory to store temporary memory. The size of the block
C51 COMPILER V9.03   CYFLASH                                                               04/04/2015 14:09:12 PAGE 5   

 238          *   of memory is CYDEV_FLS_ROW_SIZE + CYDEV_ECC_ROW_SIZE.
 239          *
 240          * Return:
 241          *  status:
 242          *   CYRET_SUCCESS if successful.
 243          *   CYRET_BAD_PARAM if the buffer is NULL
 244          *
 245          *******************************************************************************/
 246          cystatus CySetFlashEEBuffer(uint8 * buffer) 
 247          {
 248   1          cystatus status = CYRET_SUCCESS;
 249   1      
 250   1          CySpcStart();
 251   1      
 252   1          #if(CYDEV_ECC_ENABLE == 0)
 253   1      
 254   1              if(NULL == buffer)
 255   1              {
 256   2                  status = CYRET_BAD_PARAM;
 257   2              }
 258   1              else if(CySpcLock() != CYRET_SUCCESS)
 259   1              {
 260   2                  status = CYRET_LOCKED;
 261   2              }
 262   1              else
 263   1              {
 264   2                  rowBuffer = buffer;
 265   2                  CySpcUnlock();
 266   2              }
 267   1      
 268   1          #else
              
                      /* To supress the warning */
                      buffer = buffer;
              
                  #endif  /* (CYDEV_ECC_ENABLE == 0u) */
 274   1      
 275   1          return(status);
 276   1      }
 277          
 278          
 279          #if(CYDEV_ECC_ENABLE == 1)
              
                  /*******************************************************************************
                  * Function Name: CyWriteRowData
                  ********************************************************************************
                  *
                  * Summary:
                  *   Sends a command to the SPC to load and program a row of data in flash.
                  *
                  * Parameters:
                  *  arrayID:
                  *   ID of the array to write.
                  *  rowAddress:
                  *   rowAddress of flash row to program.
                  *  rowData:
                  *   Array of bytes to write.
                  *
                  * Return:
                  *  status:
                  *   CYRET_SUCCESS if successful.
                  *   CYRET_LOCKED if the SPC is already in use.
C51 COMPILER V9.03   CYFLASH                                                               04/04/2015 14:09:12 PAGE 6   

                  *   CYRET_CANCELED if command not accepted
                  *   CYRET_UNKNOWN if there was an SPC error.
                  *
                  *******************************************************************************/
                  cystatus CyWriteRowData(uint8 arrayId, uint16 rowAddress, uint8 * rowData) 
                  {
                      uint16 rowSize;
                      cystatus status;
              
                      rowSize = (arrayId > CY_SPC_LAST_FLASH_ARRAYID) ? CYDEV_EEPROM_ROW_SIZE : CYDEV_FLS_ROW_SIZE;
                      status = CyWriteRowFull(arrayId, rowAddress, rowData, rowSize);
              
                      return(status);
                  }
              
              #else
 316          
 317              /*******************************************************************************
 318              * Function Name: CyWriteRowData
 319              ********************************************************************************
 320              *
 321              * Summary:
 322              *   Sends a command to the SPC to load and program a row of data in flash.
 323              *
 324              * Parameters:
 325              *  arrayID      : ID of the array to write.
 326              *  rowAddress   : rowAddress of flash row to program.
 327              *  rowData      : Array of bytes to write.
 328              *
 329              * Return:
 330              *  status:
 331              *   CYRET_SUCCESS if successful.
 332              *   CYRET_LOCKED if the SPC is already in use.
 333              *   CYRET_CANCELED if command not accepted
 334              *   CYRET_UNKNOWN if there was an SPC error.
 335              *
 336              *******************************************************************************/
 337              cystatus CyWriteRowData(uint8 arrayId, uint16 rowAddress, uint8 * rowData) 
 338              {
 339   1              uint8 index;
 340   1              uint32 offset;
 341   1              uint16 rowSize;
 342   1              cystatus status;
 343   1      
 344   1              rowSize = (arrayId > CY_SPC_LAST_FLASH_ARRAYID) ? \
 345   1                          CYDEV_EEPROM_ROW_SIZE : \
 346   1                          (CYDEV_FLS_ROW_SIZE + CYDEV_ECC_ROW_SIZE);
 347   1      
 348   1              if(rowSize != CYDEV_EEPROM_ROW_SIZE)
 349   1              {
 350   2                  /* Save the ECC area. */
 351   2                  offset = CYDEV_ECC_BASE + ((uint32) arrayId * CYDEV_ECC_SECTOR_SIZE) +
 352   2                          ((uint32) rowAddress * CYDEV_ECC_ROW_SIZE);
 353   2      
 354   2                  for (index = 0; index < CYDEV_ECC_ROW_SIZE; index++)
 355   2                  {
 356   3                      rowBuffer[CYDEV_FLS_ROW_SIZE + index] = CY_GET_XTND_REG8((void CYFAR *)(offset + index));
 357   3                  }
 358   2              }
 359   1      
 360   1              /* Copy the rowdata to the temporary buffer. */
 361   1              memcpy(rowBuffer, rowData, CYDEV_FLS_ROW_SIZE);
C51 COMPILER V9.03   CYFLASH                                                               04/04/2015 14:09:12 PAGE 7   

 362   1      
 363   1              status = CyWriteRowFull(arrayId, rowAddress, rowBuffer, rowSize);
 364   1      
 365   1              return(status);
 366   1          }
 367          
 368          #endif /* (CYDEV_ECC_ENABLE == 0u) */
 369          
 370          
 371          #if ((CYDEV_ECC_ENABLE == 0u) && (CYDEV_CONFIGURATION_ECC == 0u))
 372          
 373              /*******************************************************************************
 374              * Function Name: CyWriteRowConfig
 375              ********************************************************************************
 376              *
 377              * Summary:
 378              *  Sends a command to the SPC to load and program a row of config data in flash.
 379              *  This function is only valid for Flash array IDs (not for EEPROM).
 380              *
 381              * Parameters:
 382              *  arrayId:
 383              *   ID of the array to write
 384              *  rowAddress:
 385              *   Address of the sector to erase.
 386              *  rowData:
 387              *   Array of bytes to write.
 388              *
 389              * Return:
 390              *  status:
 391              *   CYRET_SUCCESS if successful.
 392              *   CYRET_LOCKED if the SPC is already in use.
 393              *   CYRET_CANCELED if command not accepted
 394              *   CYRET_UNKNOWN if there was an SPC error.
 395              *
 396              *******************************************************************************/
 397              cystatus CyWriteRowConfig(uint8 arrayId, uint16 rowAddress, uint8 * rowData) 
 398              {
 399   1              uint32 offset;
 400   1              uint16 index;
 401   1              cystatus status;
 402   1      
 403   1              /* Read the existing flash data. */
 404   1              offset = CYDEV_FLS_BASE + ((uint32) arrayId * CYDEV_FLS_SECTOR_SIZE) +
 405   1                  ((uint32) rowAddress * CYDEV_FLS_ROW_SIZE);
 406   1      
 407   1              for (index = 0; index < CYDEV_FLS_ROW_SIZE; index++)
 408   1              {
 409   2                  rowBuffer[index] = CY_GET_XTND_REG8((void CYFAR *)(offset + index));
 410   2              }
 411   1      
 412   1              /* Copy the rowData to the temporary buffer. */
 413   1              memcpy(&rowBuffer[CYDEV_FLS_ROW_SIZE], rowData, CYDEV_ECC_ROW_SIZE);
 414   1      
 415   1              status = CyWriteRowFull(arrayId, rowAddress, rowBuffer, CYDEV_FLS_ROW_SIZE + CYDEV_ECC_ROW_SIZE);
 416   1      
 417   1              return (status);
 418   1          }
 419          
 420          #endif  /* ((CYDEV_ECC_ENABLE == 0u) && (CYDEV_CONFIGURATION_ECC == 0u)) */
 421          
 422          
 423          
C51 COMPILER V9.03   CYFLASH                                                               04/04/2015 14:09:12 PAGE 8   

 424          /*******************************************************************************
 425          * Function Name: CyWriteRowFull
 426          ********************************************************************************
 427          * Summary:
 428          *   Sends a command to the SPC to load and program a row of data in flash.
 429          *   rowData array is expected to contain Flash and ECC data if needed.
 430          *
 431          * Parameters:
 432          *       arrayId: FLASH or EEPROM array id.
 433          *       rowData: pointer to a row of data to write.
 434          *       rowNumber: Zero based number of the row.
 435          *       rowSize: Size of the row.
 436          *
 437          * Return:
 438          *   CYRET_SUCCESS if successful.
 439          *   CYRET_LOCKED if the SPC is already in use.
 440          *   CYRET_CANCELED if command not accepted
 441          *   CYRET_UNKNOWN if there was an SPC error.
 442          *
 443          *******************************************************************************/
 444          cystatus CyWriteRowFull(uint8 arrayId, uint16 rowNumber, uint8* rowData, uint16 rowSize) \
 445                  
 446          {
 447   1          cystatus status;
 448   1      
 449   1          if(CySpcLock() == CYRET_SUCCESS)
 450   1          {
 451   2              /* Load row data into SPC internal latch */
 452   2              status = CySpcLoadRow(arrayId, rowData, rowSize);
 453   2      
 454   2              if(CYRET_STARTED == status)
 455   2              {
 456   3                  while(CY_SPC_BUSY)
 457   3                  {
 458   4                      /* Wait for SPC to finish and get SPC status */
 459   4                      CyDelayUs(1u);
 460   4                  }
 461   3      
 462   3                  /* Hide SPC status */
 463   3                  if(CY_SPC_STATUS_SUCCESS == CY_SPC_READ_STATUS)
 464   3                  {
 465   4                      status = CYRET_SUCCESS;
 466   4                  }
 467   3                  else
 468   3                  {
 469   4                      status = CYRET_UNKNOWN;
 470   4                  }
 471   3      
 472   3                  if(CYRET_SUCCESS == status)
 473   3                  {
 474   4                      /* Erase and program flash with the data from SPC interval latch */
 475   4                      status = CySpcWriteRow(arrayId, rowNumber, dieTemperature[0u], dieTemperature[1u]);
 476   4      
 477   4                      if(CYRET_STARTED == status)
 478   4                      {
 479   5                          while(CY_SPC_BUSY)
 480   5                          {
 481   6                              /* Wait for SPC to finish and get SPC status */
 482   6                              CyDelayUs(1u);
 483   6                          }
 484   5      
 485   5                          /* Hide SPC status */
C51 COMPILER V9.03   CYFLASH                                                               04/04/2015 14:09:12 PAGE 9   

 486   5                          if(CY_SPC_STATUS_SUCCESS == CY_SPC_READ_STATUS)
 487   5                          {
 488   6                              status = CYRET_SUCCESS;
 489   6                          }
 490   5                          else
 491   5                          {
 492   6                              status = CYRET_UNKNOWN;
 493   6                          }
 494   5                      }
 495   4                  }
 496   3      
 497   3              }
 498   2      
 499   2              CySpcUnlock();
 500   2          }
 501   1          else
 502   1          {
 503   2              status = CYRET_LOCKED;
 504   2          }
 505   1      
 506   1          return(status);
 507   1      }
 508          
 509          
 510          /*******************************************************************************
 511          * Function Name: CyFlash_SetWaitCycles
 512          ********************************************************************************
 513          *
 514          * Summary:
 515          *  Sets the number of clock cycles the cache will wait before it samples data
 516          *  coming back from Flash. This function must be called before increasing CPU
 517          *  clock frequency. It can optionally be called after lowering CPU clock
 518          *  frequency in order to improve CPU performance.
 519          *
 520          * Parameters:
 521          *  freq:
 522          *   Frequency of operation in Megahertz.
 523          *
 524          * Return:
 525          *  None
 526          *
 527          *******************************************************************************/
 528          void CyFlash_SetWaitCycles(uint8 freq) 
 529          {
 530   1          /* Set Flash Cycles bit fields with frequency value */
 531   1      
 532   1          #if (CY_PSOC3)
 533   1      
 534   1              if (freq <= 22u)
 535   1              {
 536   2                  *FLASH_CYCLES_PTR = ((*FLASH_CYCLES_PTR & ~FLASH_CYCLES_MASK) |
 537   2                      (LESSER_OR_EQUAL_22MHz << FLASH_CYCLES_MASK_SHIFT));
 538   2              }
 539   1              else if (freq <= 44u)
 540   1              {
 541   2                  *FLASH_CYCLES_PTR = ((*FLASH_CYCLES_PTR & ~FLASH_CYCLES_MASK) |
 542   2                      (LESSER_OR_EQUAL_44MHz << FLASH_CYCLES_MASK_SHIFT));
 543   2              }
 544   1              else
 545   1              {
 546   2                  *FLASH_CYCLES_PTR = ((*FLASH_CYCLES_PTR & ~FLASH_CYCLES_MASK) |
 547   2                      (GREATER_44MHz << FLASH_CYCLES_MASK_SHIFT));
C51 COMPILER V9.03   CYFLASH                                                               04/04/2015 14:09:12 PAGE 10  

 548   2              }
 549   1      
 550   1          #endif  /* (CY_PSOC3) */
 551   1      
 552   1      
 553   1          #if (CY_PSOC5A)
              
                      if (freq <= 16u)
                      {
                          *FLASH_CYCLES_PTR = ((*FLASH_CYCLES_PTR & ~FLASH_CYCLES_MASK) |
                              (LESSER_OR_EQUAL_16MHz << FLASH_CYCLES_MASK_SHIFT));
                      }
                      else if (freq <= 33u)
                      {
                          *FLASH_CYCLES_PTR = ((*FLASH_CYCLES_PTR & ~FLASH_CYCLES_MASK) |
                              (LESSER_OR_EQUAL_33MHz << FLASH_CYCLES_MASK_SHIFT));
                      }
                      else if (freq <= 50u)
                      {
                          *FLASH_CYCLES_PTR = ((*FLASH_CYCLES_PTR & ~FLASH_CYCLES_MASK) |
                              (LESSER_OR_EQUAL_50MHz << FLASH_CYCLES_MASK_SHIFT));
                      }
                      else
                      {
                          *FLASH_CYCLES_PTR = ((*FLASH_CYCLES_PTR & ~FLASH_CYCLES_MASK) |
                              (GREATER_51MHz << FLASH_CYCLES_MASK_SHIFT));
                      }
              
                  #endif  /* (CY_PSOC5A) */
 577   1      
 578   1      
 579   1          #if (CY_PSOC5LP)
              
                      if (freq <= 16u)
                      {
                          *FLASH_CYCLES_PTR = ((*FLASH_CYCLES_PTR & ~FLASH_CYCLES_MASK) |
                              (LESSER_OR_EQUAL_16MHz << FLASH_CYCLES_MASK_SHIFT));
                      }
                      else if (freq <= 33u)
                      {
                          *FLASH_CYCLES_PTR = ((*FLASH_CYCLES_PTR & ~FLASH_CYCLES_MASK) |
                              (LESSER_OR_EQUAL_33MHz << FLASH_CYCLES_MASK_SHIFT));
                      }
                      else if (freq <= 50u)
                      {
                          *FLASH_CYCLES_PTR = ((*FLASH_CYCLES_PTR & ~FLASH_CYCLES_MASK) |
                              (LESSER_OR_EQUAL_50MHz << FLASH_CYCLES_MASK_SHIFT));
                      }
                      else
                      {
                          *FLASH_CYCLES_PTR = ((*FLASH_CYCLES_PTR & ~FLASH_CYCLES_MASK) |
                              (GREATER_51MHz << FLASH_CYCLES_MASK_SHIFT));
                      }
              
                  #endif  /* (CY_PSOC5LP) */
 603   1      }
 604          
 605          
 606          #if (CY_PSOC3 || CY_PSOC5LP)
 607          
 608              /*******************************************************************************
 609              * Function Name: CyEEPROM_Start
C51 COMPILER V9.03   CYFLASH                                                               04/04/2015 14:09:12 PAGE 11  

 610              ********************************************************************************
 611              *
 612              * Summary:
 613              *  Enable the EEPROM.
 614              *
 615              * Parameters:
 616              *  None
 617              *
 618              * Return:
 619              *  None
 620              *
 621              *******************************************************************************/
 622              void CyEEPROM_Start(void) 
 623              {
 624   1              /* Active Power Mode */
 625   1              *PM_ACT_EE_PTR |= PM_EE_MASK;
 626   1      
 627   1              /* Standby Power Mode */
 628   1              *PM_STBY_EE_PTR |= PM_EE_MASK;
 629   1          }
 630          
 631          
 632              /*******************************************************************************
 633              * Function Name: CyEEPROM_Stop
 634              ********************************************************************************
 635              *
 636              * Summary:
 637              *  Disable the EEPROM.
 638              *
 639              * Parameters:
 640              *  None
 641              *
 642              * Return:
 643              *  None
 644              *
 645              *******************************************************************************/
 646              void CyEEPROM_Stop (void) 
 647              {
 648   1              /* Active Power Mode */
 649   1              *PM_ACT_EE_PTR &= ~PM_EE_MASK;
 650   1      
 651   1              /* Standby Power Mode */
 652   1              *PM_STBY_EE_PTR &= ~PM_EE_MASK;
 653   1          }
 654          
 655          #endif /* (CY_PSOC3 || CY_PSOC5LP) */
 656          
 657          
 658          /*******************************************************************************
 659          * Function Name: CyEEPROM_ReadReserve
 660          ********************************************************************************
 661          *
 662          * Summary:
 663          *  Request access to the EEPROM for reading and wait until access is available.
 664          *
 665          * Parameters:
 666          *  None
 667          *
 668          * Return:
 669          *  None
 670          *
 671          *******************************************************************************/
C51 COMPILER V9.03   CYFLASH                                                               04/04/2015 14:09:12 PAGE 12  

 672          void CyEEPROM_ReadReserve(void) 
 673          {
 674   1          /* Make a request for PHUB to have access */
 675   1          *AHUB_EE_REQ_ACK_PTR |= 0x01u;
 676   1      
 677   1          /* Wait for acknowledgement from PHUB */
 678   1          while (!(*AHUB_EE_REQ_ACK_PTR & 0x02u));
 679   1      }
 680          
 681          
 682          /*******************************************************************************
 683          * Function Name: CyEEPROM_ReadRelease
 684          ********************************************************************************
 685          *
 686          * Summary:
 687          *  Release the read reservation of the EEPROM.
 688          *
 689          * Parameters:
 690          *  None
 691          *
 692          * Return:
 693          *  None
 694          *
 695          *******************************************************************************/
 696          void CyEEPROM_ReadRelease(void) 
 697          {
 698   1          *AHUB_EE_REQ_ACK_PTR |= 0x00u;
 699   1      }
 700          
 701          
 702          /* [] END OF FILE */
C51 COMPILER V9.03   CYFLASH                                                               04/04/2015 14:09:12 PAGE 13  

ASSEMBLY LISTING OF GENERATED OBJECT CODE


             ; FUNCTION CyFlash_Start (BEGIN)
                                           ; SOURCE LINE # 54
                                           ; SOURCE LINE # 55
                                           ; SOURCE LINE # 69
0000 9043AC            MOV     DPTR,#043ACH
0003 E0                MOVX    A,@DPTR
0004 FF                MOV     R7,A
0005 EF                MOV     A,R7
0006 4401              ORL     A,#01H
0008 FF                MOV     R7,A
0009 EF                MOV     A,R7
000A F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 72
000B 9043BC            MOV     DPTR,#043BCH
000E E0                MOVX    A,@DPTR
000F FF                MOV     R7,A
0010 EF                MOV     A,R7
0011 4401              ORL     A,#01H
0013 FF                MOV     R7,A
0014 EF                MOV     A,R7
0015 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 75
0016         ?C0001:
0016 22                RET     
             ; FUNCTION CyFlash_Start (END)

             ; FUNCTION CyFlash_Stop (BEGIN)
                                           ; SOURCE LINE # 100
                                           ; SOURCE LINE # 101
                                           ; SOURCE LINE # 115
0000 9043AC            MOV     DPTR,#043ACH
0003 E0                MOVX    A,@DPTR
0004 FF                MOV     R7,A
0005 EF                MOV     A,R7
0006 54FE              ANL     A,#0FEH
0008 FF                MOV     R7,A
0009 EF                MOV     A,R7
000A F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 118
000B 9043BC            MOV     DPTR,#043BCH
000E E0                MOVX    A,@DPTR
000F FF                MOV     R7,A
0010 EF                MOV     A,R7
0011 54FE              ANL     A,#0FEH
0013 FF                MOV     R7,A
0014 EF                MOV     A,R7
0015 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 121
0016         ?C0002:
0016 22                RET     
             ; FUNCTION CyFlash_Stop (END)

             ; FUNCTION CySetTempInt (BEGIN)
                                           ; SOURCE LINE # 143
                                           ; SOURCE LINE # 144
                                           ; SOURCE LINE # 148
0000 120000      E     LCALL   CySpcStart
                                           ; SOURCE LINE # 151
0003 900000      R     MOV     DPTR,#status
C51 COMPILER V9.03   CYFLASH                                                               04/04/2015 14:09:12 PAGE 14  

0006 74FF              MOV     A,#0FFH
0008 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 153
0009 120000      E     LCALL   CySpcLock
000C EF                MOV     A,R7
000D 704C              JNZ     ?C0003
                                           ; SOURCE LINE # 154
                                           ; SOURCE LINE # 159
000F 7F01              MOV     R7,#01H
0011 120000      E     LCALL   _CySpcGetTemp
0014 EF                MOV     A,R7
0015 6407              XRL     A,#07H
0017 703D              JNZ     ?C0004
                                           ; SOURCE LINE # 161
0019         ?C0007:
                                           ; SOURCE LINE # 163
                                           ; SOURCE LINE # 164
0019 7B01              MOV     R3,#01H
001B 7A00        R     MOV     R2,#HIGH dieTemperature
001D 7900        R     MOV     R1,#LOW dieTemperature
001F 7D02              MOV     R5,#02H
0021 120000      E     LCALL   _CySpcReadData
0024 EF                MOV     A,R7
0025 B4021F            CJNE    A,#02H,?C0005
                                           ; SOURCE LINE # 165
                                           ; SOURCE LINE # 166
0028 900000      R     MOV     DPTR,#status
002B E4                CLR     A
002C F0                MOVX    @DPTR,A
002D         ?C0009:
                                           ; SOURCE LINE # 168
002D 904722            MOV     DPTR,#04722H
0030 E0                MOVX    A,@DPTR
0031 FF                MOV     R7,A
0032 EF                MOV     A,R7
0033 5402              ANL     A,#02H
0035 FF                MOV     R7,A
0036 7E00              MOV     R6,#00H
0038 EF                MOV     A,R7
0039 4E                ORL     A,R6
003A 701A              JNZ     ?C0004
                                           ; SOURCE LINE # 169
                                           ; SOURCE LINE # 171
003C 7F01              MOV     R7,#01H
003E 7E00              MOV     R6,#00H
0040 120000      E     LCALL   _CyDelayUs
                                           ; SOURCE LINE # 172
0043 80E8              SJMP    ?C0009
0045         ?C0010:
                                           ; SOURCE LINE # 173
0045 800F              SJMP    ?C0004
                                           ; SOURCE LINE # 174
0047         ?C0008:
                                           ; SOURCE LINE # 176
0047         ?C0005:
0047 904722            MOV     DPTR,#04722H
004A E0                MOVX    A,@DPTR
004B FF                MOV     R7,A
004C EF                MOV     A,R7
004D 5402              ANL     A,#02H
004F FF                MOV     R7,A
0050 7E00              MOV     R6,#00H
C51 COMPILER V9.03   CYFLASH                                                               04/04/2015 14:09:12 PAGE 15  

0052 EF                MOV     A,R7
0053 4E                ORL     A,R6
0054 60C3              JZ      ?C0007
0056         ?C0006:
                                           ; SOURCE LINE # 177
0056         ?C0004:
                                           ; SOURCE LINE # 179
0056 120000      E     LCALL   CySpcUnlock
                                           ; SOURCE LINE # 180
0059 8006              SJMP    ?C0011
005B         ?C0003:
                                           ; SOURCE LINE # 182
                                           ; SOURCE LINE # 183
005B 900000      R     MOV     DPTR,#status
005E 7404              MOV     A,#04H
0060 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 184
0061         ?C0011:
                                           ; SOURCE LINE # 186
0061 900000      R     MOV     DPTR,#status
0064 E0                MOVX    A,@DPTR
0065 FF                MOV     R7,A
                                           ; SOURCE LINE # 187
0066         ?C0012:
0066 22                RET     
             ; FUNCTION CySetTempInt (END)

             ; FUNCTION CySetTemp (BEGIN)
                                           ; SOURCE LINE # 213
                                           ; SOURCE LINE # 214
                                           ; SOURCE LINE # 215
0000 120000      R     LCALL   CySetTempInt
0003 900000      R     MOV     DPTR,#status
0006 EF                MOV     A,R7
0007 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 217
0008 900000      R     MOV     DPTR,#status
000B E0                MOVX    A,@DPTR
000C FF                MOV     R7,A
000D EF                MOV     A,R7
000E 7008              JNZ     ?C0013
                                           ; SOURCE LINE # 218
                                           ; SOURCE LINE # 219
0010 120000      R     LCALL   CySetTempInt
0013 900000      R     MOV     DPTR,#status
0016 EF                MOV     A,R7
0017 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 220
0018         ?C0013:
                                           ; SOURCE LINE # 222
0018 900000      R     MOV     DPTR,#status
001B E0                MOVX    A,@DPTR
001C FF                MOV     R7,A
                                           ; SOURCE LINE # 223
001D         ?C0014:
001D 22                RET     
             ; FUNCTION CySetTemp (END)

             ; FUNCTION _CySetFlashEEBuffer (BEGIN)
                                           ; SOURCE LINE # 246
0000 900000      R     MOV     DPTR,#buffer
0003 EB                MOV     A,R3
C51 COMPILER V9.03   CYFLASH                                                               04/04/2015 14:09:12 PAGE 16  

0004 F0                MOVX    @DPTR,A
0005 A3                INC     DPTR
0006 EA                MOV     A,R2
0007 F0                MOVX    @DPTR,A
0008 A3                INC     DPTR
0009 E9                MOV     A,R1
000A F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 247
                                           ; SOURCE LINE # 248
000B 900000      R     MOV     DPTR,#status
000E E4                CLR     A
000F F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 250
0010 120000      E     LCALL   CySpcStart
                                           ; SOURCE LINE # 254
0013 7B00              MOV     R3,#00H
0015 7A00              MOV     R2,#00H
0017 7900              MOV     R1,#00H
0019 C003              PUSH    AR3
001B C002              PUSH    AR2
001D C001              PUSH    AR1
001F 900000      R     MOV     DPTR,#buffer
0022 E0                MOVX    A,@DPTR
0023 FB                MOV     R3,A
0024 A3                INC     DPTR
0025 E0                MOVX    A,@DPTR
0026 FA                MOV     R2,A
0027 A3                INC     DPTR
0028 E0                MOVX    A,@DPTR
0029 F9                MOV     R1,A
002A D082              POP     DPL
002C D083              POP     DPH
002E D0E0              POP     ACC
0030 6B                XRL     A,R3
0031 7008              JNZ     ?C0060
0033 E9                MOV     A,R1
0034 6582              XRL     A,DPL
0036 7003              JNZ     ?C0060
0038 EA                MOV     A,R2
0039 6583              XRL     A,DPH
003B         ?C0060:
003B 7008              JNZ     ?C0015
                                           ; SOURCE LINE # 255
                                           ; SOURCE LINE # 256
003D 900000      R     MOV     DPTR,#status
0040 7401              MOV     A,#01H
0042 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 257
0043 8027              SJMP    ?C0016
0045         ?C0015:
                                           ; SOURCE LINE # 258
0045 120000      E     LCALL   CySpcLock
0048 EF                MOV     A,R7
0049 6008              JZ      ?C0017
                                           ; SOURCE LINE # 259
                                           ; SOURCE LINE # 260
004B 900000      R     MOV     DPTR,#status
004E 7404              MOV     A,#04H
0050 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 261
0051 8019              SJMP    ?C0016
0053         ?C0017:
C51 COMPILER V9.03   CYFLASH                                                               04/04/2015 14:09:12 PAGE 17  

                                           ; SOURCE LINE # 263
                                           ; SOURCE LINE # 264
0053 900000      R     MOV     DPTR,#buffer
0056 E0                MOVX    A,@DPTR
0057 FB                MOV     R3,A
0058 A3                INC     DPTR
0059 E0                MOVX    A,@DPTR
005A FA                MOV     R2,A
005B A3                INC     DPTR
005C E0                MOVX    A,@DPTR
005D F9                MOV     R1,A
005E 900000      R     MOV     DPTR,#rowBuffer
0061 EB                MOV     A,R3
0062 F0                MOVX    @DPTR,A
0063 A3                INC     DPTR
0064 EA                MOV     A,R2
0065 F0                MOVX    @DPTR,A
0066 A3                INC     DPTR
0067 E9                MOV     A,R1
0068 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 265
0069 120000      E     LCALL   CySpcUnlock
                                           ; SOURCE LINE # 266
006C         ?C0018:
006C         ?C0016:
                                           ; SOURCE LINE # 275
006C 900000      R     MOV     DPTR,#status
006F E0                MOVX    A,@DPTR
0070 FF                MOV     R7,A
                                           ; SOURCE LINE # 276
0071         ?C0019:
0071 22                RET     
             ; FUNCTION _CySetFlashEEBuffer (END)

             ; FUNCTION _CyWriteRowData (BEGIN)
                                           ; SOURCE LINE # 337
0000 900000      R     MOV     DPTR,#arrayId
0003 EF                MOV     A,R7
0004 F0                MOVX    @DPTR,A
0005 900000      R     MOV     DPTR,#rowAddress
0008 EC                MOV     A,R4
0009 F0                MOVX    @DPTR,A
000A A3                INC     DPTR
000B ED                MOV     A,R5
000C F0                MOVX    @DPTR,A
000D 900000      R     MOV     DPTR,#rowData
0010 EB                MOV     A,R3
0011 F0                MOVX    @DPTR,A
0012 A3                INC     DPTR
0013 EA                MOV     A,R2
0014 F0                MOVX    @DPTR,A
0015 A3                INC     DPTR
0016 E9                MOV     A,R1
0017 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 338
                                           ; SOURCE LINE # 344
0018 900000      R     MOV     DPTR,#arrayId
001B E0                MOVX    A,@DPTR
001C FF                MOV     R7,A
001D EF                MOV     A,R7
001E D3                SETB    C
001F 943F              SUBB    A,#03FH
C51 COMPILER V9.03   CYFLASH                                                               04/04/2015 14:09:12 PAGE 18  

0021 4006              JC      ?C0020
0023 7E00              MOV     R6,#00H
0025 7F10              MOV     R7,#010H
0027 8004              SJMP    ?C0021
0029         ?C0020:
0029 7E01              MOV     R6,#01H
002B 7F20              MOV     R7,#020H
002D         ?C0021:
002D 900000      R     MOV     DPTR,#rowSize
0030 EE                MOV     A,R6
0031 F0                MOVX    @DPTR,A
0032 A3                INC     DPTR
0033 EF                MOV     A,R7
0034 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 348
0035 900000      R     MOV     DPTR,#rowSize
0038 E0                MOVX    A,@DPTR
0039 FE                MOV     R6,A
003A A3                INC     DPTR
003B E0                MOVX    A,@DPTR
003C FF                MOV     R7,A
003D EF                MOV     A,R7
003E 6410              XRL     A,#010H
0040 4E                ORL     A,R6
0041 7003              JNZ     $ + 5H
0043 020000      R     LJMP    ?C0022
                                           ; SOURCE LINE # 349
                                           ; SOURCE LINE # 352
0046 900000      R     MOV     DPTR,#arrayId
0049 E0                MOVX    A,@DPTR
004A FF                MOV     R7,A
004B 7E00              MOV     R6,#00H
004D 7C20              MOV     R4,#020H
004F 7D00              MOV     R5,#00H
0051 120000      E     LCALL   ?C?LIMUL
0054 EF                MOV     A,R7
0055 2400              ADD     A,#00H
0057 FF                MOV     R7,A
0058 EE                MOV     A,R6
0059 3400              ADDC    A,#00H
005B FE                MOV     R6,A
005C ED                MOV     A,R5
005D 3408              ADDC    A,#08H
005F FD                MOV     R5,A
0060 EC                MOV     A,R4
0061 3400              ADDC    A,#00H
0063 FC                MOV     R4,A
0064 C004              PUSH    AR4
0066 C005              PUSH    AR5
0068 C006              PUSH    AR6
006A C007              PUSH    AR7
006C 900000      R     MOV     DPTR,#rowAddress
006F E0                MOVX    A,@DPTR
0070 FE                MOV     R6,A
0071 A3                INC     DPTR
0072 E0                MOVX    A,@DPTR
0073 FF                MOV     R7,A
0074 7C00              MOV     R4,#00H
0076 7D20              MOV     R5,#020H
0078 120000      E     LCALL   ?C?LIMUL
007B A804              MOV     R0,AR4
007D A905              MOV     R1,AR5
C51 COMPILER V9.03   CYFLASH                                                               04/04/2015 14:09:12 PAGE 19  

007F AA06              MOV     R2,AR6
0081 AB07              MOV     R3,AR7
0083 D007              POP     AR7
0085 D006              POP     AR6
0087 D005              POP     AR5
0089 D004              POP     AR4
008B EB                MOV     A,R3
008C 2F                ADD     A,R7
008D FF                MOV     R7,A
008E EA                MOV     A,R2
008F 3E                ADDC    A,R6
0090 FE                MOV     R6,A
0091 E9                MOV     A,R1
0092 3D                ADDC    A,R5
0093 FD                MOV     R5,A
0094 E8                MOV     A,R0
0095 3C                ADDC    A,R4
0096 FC                MOV     R4,A
0097 900000      R     MOV     DPTR,#offset
009A 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 354
009D 900000      R     MOV     DPTR,#index
00A0 E4                CLR     A
00A1 F0                MOVX    @DPTR,A
00A2         ?C0023:
00A2 900000      R     MOV     DPTR,#index
00A5 E0                MOVX    A,@DPTR
00A6 FF                MOV     R7,A
00A7 EF                MOV     A,R7
00A8 C3                CLR     C
00A9 9420              SUBB    A,#020H
00AB 505A              JNC     ?C0022
                                           ; SOURCE LINE # 355
                                           ; SOURCE LINE # 356
00AD 900000      R     MOV     DPTR,#index
00B0 E0                MOVX    A,@DPTR
00B1 FF                MOV     R7,A
00B2 E4                CLR     A
00B3 FC                MOV     R4,A
00B4 FD                MOV     R5,A
00B5 FE                MOV     R6,A
00B6 900000      R     MOV     DPTR,#offset
00B9 E0                MOVX    A,@DPTR
00BA F8                MOV     R0,A
00BB A3                INC     DPTR
00BC E0                MOVX    A,@DPTR
00BD F9                MOV     R1,A
00BE A3                INC     DPTR
00BF E0                MOVX    A,@DPTR
00C0 FA                MOV     R2,A
00C1 A3                INC     DPTR
00C2 E0                MOVX    A,@DPTR
00C3 FB                MOV     R3,A
00C4 EF                MOV     A,R7
00C5 2B                ADD     A,R3
00C6 FF                MOV     R7,A
00C7 EE                MOV     A,R6
00C8 3A                ADDC    A,R2
00C9 FE                MOV     R6,A
00CA ED                MOV     A,R5
00CB 39                ADDC    A,R1
00CC FD                MOV     R5,A
C51 COMPILER V9.03   CYFLASH                                                               04/04/2015 14:09:12 PAGE 20  

00CD EC                MOV     A,R4
00CE 38                ADDC    A,R0
00CF FC                MOV     R4,A
00D0 A907              MOV     R1,AR7
00D2 AA06              MOV     R2,AR6
00D4 AB05              MOV     R3,AR5
00D6 120000      E     LCALL   _cyread8
00D9 900000      R     MOV     DPTR,#index
00DC E0                MOVX    A,@DPTR
00DD FE                MOV     R6,A
00DE EE                MOV     A,R6
00DF FD                MOV     R5,A
00E0 7C00              MOV     R4,#00H
00E2 ED                MOV     A,R5
00E3 2400              ADD     A,#00H
00E5 FD                MOV     R5,A
00E6 EC                MOV     A,R4
00E7 3401              ADDC    A,#01H
00E9 FC                MOV     R4,A
00EA 900000      R     MOV     DPTR,#rowBuffer
00ED E0                MOVX    A,@DPTR
00EE FB                MOV     R3,A
00EF A3                INC     DPTR
00F0 E0                MOVX    A,@DPTR
00F1 FA                MOV     R2,A
00F2 A3                INC     DPTR
00F3 E0                MOVX    A,@DPTR
00F4 F9                MOV     R1,A
00F5 E9                MOV     A,R1
00F6 2D                ADD     A,R5
00F7 F9                MOV     R1,A
00F8 EA                MOV     A,R2
00F9 3C                ADDC    A,R4
00FA FA                MOV     R2,A
00FB EF                MOV     A,R7
00FC 120000      E     LCALL   ?C?CSTPTR
                                           ; SOURCE LINE # 357
00FF         ?C0025:
00FF 900000      R     MOV     DPTR,#index
0102 E0                MOVX    A,@DPTR
0103 04                INC     A
0104 F0                MOVX    @DPTR,A
0105 809B              SJMP    ?C0023
0107         ?C0024:
                                           ; SOURCE LINE # 358
0107         ?C0022:
                                           ; SOURCE LINE # 361
0107 900000      R     MOV     DPTR,#rowData
010A E0                MOVX    A,@DPTR
010B FB                MOV     R3,A
010C A3                INC     DPTR
010D E0                MOVX    A,@DPTR
010E FA                MOV     R2,A
010F A3                INC     DPTR
0110 E0                MOVX    A,@DPTR
0111 F9                MOV     R1,A
0112 C003              PUSH    AR3
0114 C002              PUSH    AR2
0116 C001              PUSH    AR1
0118 900000      R     MOV     DPTR,#rowBuffer
011B E0                MOVX    A,@DPTR
011C FB                MOV     R3,A
C51 COMPILER V9.03   CYFLASH                                                               04/04/2015 14:09:12 PAGE 21  

011D A3                INC     DPTR
011E E0                MOVX    A,@DPTR
011F FA                MOV     R2,A
0120 A3                INC     DPTR
0121 E0                MOVX    A,@DPTR
0122 F9                MOV     R1,A
0123 A801              MOV     R0,AR1
0125 AC02              MOV     R4,AR2
0127 AD03              MOV     R5,AR3
0129 D001              POP     AR1
012B D002              POP     AR2
012D D003              POP     AR3
012F 7E01              MOV     R6,#01H
0131 7F00              MOV     R7,#00H
0133 120000      E     LCALL   ?C?COPYAMD
                                           ; SOURCE LINE # 363
0136 900000      R     MOV     DPTR,#arrayId
0139 E0                MOVX    A,@DPTR
013A FF                MOV     R7,A
013B C007              PUSH    AR7
013D 900000      R     MOV     DPTR,#rowAddress
0140 E0                MOVX    A,@DPTR
0141 FC                MOV     R4,A
0142 A3                INC     DPTR
0143 E0                MOVX    A,@DPTR
0144 FD                MOV     R5,A
0145 900000      R     MOV     DPTR,#rowBuffer
0148 E0                MOVX    A,@DPTR
0149 FB                MOV     R3,A
014A A3                INC     DPTR
014B E0                MOVX    A,@DPTR
014C FA                MOV     R2,A
014D A3                INC     DPTR
014E E0                MOVX    A,@DPTR
014F F9                MOV     R1,A
0150 900000      R     MOV     DPTR,#rowSize
0153 E0                MOVX    A,@DPTR
0154 FE                MOV     R6,A
0155 A3                INC     DPTR
0156 E0                MOVX    A,@DPTR
0157 FF                MOV     R7,A
0158 900000      R     MOV     DPTR,#?_CyWriteRowFull?BYTE+06H
015B EE                MOV     A,R6
015C F0                MOVX    @DPTR,A
015D A3                INC     DPTR
015E EF                MOV     A,R7
015F F0                MOVX    @DPTR,A
0160 D007              POP     AR7
0162 120000      R     LCALL   _CyWriteRowFull
0165 900000      R     MOV     DPTR,#status
0168 EF                MOV     A,R7
0169 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 365
016A 900000      R     MOV     DPTR,#status
016D E0                MOVX    A,@DPTR
016E FF                MOV     R7,A
                                           ; SOURCE LINE # 366
016F         ?C0026:
016F 22                RET     
             ; FUNCTION _CyWriteRowData (END)

             ; FUNCTION _CyWriteRowConfig (BEGIN)
C51 COMPILER V9.03   CYFLASH                                                               04/04/2015 14:09:12 PAGE 22  

                                           ; SOURCE LINE # 397
0000 900000      R     MOV     DPTR,#arrayId
0003 EF                MOV     A,R7
0004 F0                MOVX    @DPTR,A
0005 900000      R     MOV     DPTR,#rowAddress
0008 EC                MOV     A,R4
0009 F0                MOVX    @DPTR,A
000A A3                INC     DPTR
000B ED                MOV     A,R5
000C F0                MOVX    @DPTR,A
000D 900000      R     MOV     DPTR,#rowData
0010 EB                MOV     A,R3
0011 F0                MOVX    @DPTR,A
0012 A3                INC     DPTR
0013 EA                MOV     A,R2
0014 F0                MOVX    @DPTR,A
0015 A3                INC     DPTR
0016 E9                MOV     A,R1
0017 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 398
                                           ; SOURCE LINE # 405
0018 900000      R     MOV     DPTR,#arrayId
001B E0                MOVX    A,@DPTR
001C FF                MOV     R7,A
001D E4                CLR     A
001E FC                MOV     R4,A
001F FD                MOV     R5,A
0020 FE                MOV     R6,A
0021 7B00              MOV     R3,#00H
0023 7A00              MOV     R2,#00H
0025 7901              MOV     R1,#01H
0027 7800              MOV     R0,#00H
0029 120000      E     LCALL   ?C?LMUL
002C EF                MOV     A,R7
002D 2400              ADD     A,#00H
002F FF                MOV     R7,A
0030 EE                MOV     A,R6
0031 3400              ADDC    A,#00H
0033 FE                MOV     R6,A
0034 ED                MOV     A,R5
0035 3410              ADDC    A,#010H
0037 FD                MOV     R5,A
0038 EC                MOV     A,R4
0039 3400              ADDC    A,#00H
003B FC                MOV     R4,A
003C C004              PUSH    AR4
003E C005              PUSH    AR5
0040 C006              PUSH    AR6
0042 C007              PUSH    AR7
0044 900000      R     MOV     DPTR,#rowAddress
0047 E0                MOVX    A,@DPTR
0048 FE                MOV     R6,A
0049 A3                INC     DPTR
004A E0                MOVX    A,@DPTR
004B FF                MOV     R7,A
004C 7C01              MOV     R4,#01H
004E 7D00              MOV     R5,#00H
0050 120000      E     LCALL   ?C?LIMUL
0053 A804              MOV     R0,AR4
0055 A905              MOV     R1,AR5
0057 AA06              MOV     R2,AR6
0059 AB07              MOV     R3,AR7
C51 COMPILER V9.03   CYFLASH                                                               04/04/2015 14:09:12 PAGE 23  

005B D007              POP     AR7
005D D006              POP     AR6
005F D005              POP     AR5
0061 D004              POP     AR4
0063 EB                MOV     A,R3
0064 2F                ADD     A,R7
0065 FF                MOV     R7,A
0066 EA                MOV     A,R2
0067 3E                ADDC    A,R6
0068 FE                MOV     R6,A
0069 E9                MOV     A,R1
006A 3D                ADDC    A,R5
006B FD                MOV     R5,A
006C E8                MOV     A,R0
006D 3C                ADDC    A,R4
006E FC                MOV     R4,A
006F 900000      R     MOV     DPTR,#offset
0072 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 407
0075 900000      R     MOV     DPTR,#index
0078 E4                CLR     A
0079 F0                MOVX    @DPTR,A
007A A3                INC     DPTR
007B E4                CLR     A
007C F0                MOVX    @DPTR,A
007D         ?C0027:
007D 900000      R     MOV     DPTR,#index
0080 E0                MOVX    A,@DPTR
0081 FE                MOV     R6,A
0082 A3                INC     DPTR
0083 E0                MOVX    A,@DPTR
0084 FF                MOV     R7,A
0085 C3                CLR     C
0086 EE                MOV     A,R6
0087 9401              SUBB    A,#01H
0089 505B              JNC     ?C0028
                                           ; SOURCE LINE # 408
                                           ; SOURCE LINE # 409
008B 900000      R     MOV     DPTR,#index
008E E0                MOVX    A,@DPTR
008F FE                MOV     R6,A
0090 A3                INC     DPTR
0091 E0                MOVX    A,@DPTR
0092 FF                MOV     R7,A
0093 E4                CLR     A
0094 FC                MOV     R4,A
0095 FD                MOV     R5,A
0096 900000      R     MOV     DPTR,#offset
0099 E0                MOVX    A,@DPTR
009A F8                MOV     R0,A
009B A3                INC     DPTR
009C E0                MOVX    A,@DPTR
009D F9                MOV     R1,A
009E A3                INC     DPTR
009F E0                MOVX    A,@DPTR
00A0 FA                MOV     R2,A
00A1 A3                INC     DPTR
00A2 E0                MOVX    A,@DPTR
00A3 FB                MOV     R3,A
00A4 EF                MOV     A,R7
00A5 2B                ADD     A,R3
00A6 FF                MOV     R7,A
C51 COMPILER V9.03   CYFLASH                                                               04/04/2015 14:09:12 PAGE 24  

00A7 EE                MOV     A,R6
00A8 3A                ADDC    A,R2
00A9 FE                MOV     R6,A
00AA ED                MOV     A,R5
00AB 39                ADDC    A,R1
00AC FD                MOV     R5,A
00AD EC                MOV     A,R4
00AE 38                ADDC    A,R0
00AF FC                MOV     R4,A
00B0 A907              MOV     R1,AR7
00B2 AA06              MOV     R2,AR6
00B4 AB05              MOV     R3,AR5
00B6 120000      E     LCALL   _cyread8
00B9 900000      R     MOV     DPTR,#rowBuffer
00BC E0                MOVX    A,@DPTR
00BD FB                MOV     R3,A
00BE A3                INC     DPTR
00BF E0                MOVX    A,@DPTR
00C0 FA                MOV     R2,A
00C1 A3                INC     DPTR
00C2 E0                MOVX    A,@DPTR
00C3 F9                MOV     R1,A
00C4 900000      R     MOV     DPTR,#index
00C7 E0                MOVX    A,@DPTR
00C8 FC                MOV     R4,A
00C9 A3                INC     DPTR
00CA E0                MOVX    A,@DPTR
00CB FD                MOV     R5,A
00CC E9                MOV     A,R1
00CD 2D                ADD     A,R5
00CE F9                MOV     R1,A
00CF EA                MOV     A,R2
00D0 3C                ADDC    A,R4
00D1 FA                MOV     R2,A
00D2 EF                MOV     A,R7
00D3 120000      E     LCALL   ?C?CSTPTR
                                           ; SOURCE LINE # 410
00D6         ?C0029:
00D6 900000      R     MOV     DPTR,#index+01H
00D9 E0                MOVX    A,@DPTR
00DA 04                INC     A
00DB F0                MOVX    @DPTR,A
00DC 7006              JNZ     ?C0061
00DE 900000      R     MOV     DPTR,#index
00E1 E0                MOVX    A,@DPTR
00E2 04                INC     A
00E3 F0                MOVX    @DPTR,A
00E4         ?C0061:
00E4 8097              SJMP    ?C0027
00E6         ?C0028:
                                           ; SOURCE LINE # 413
00E6 900000      R     MOV     DPTR,#rowData
00E9 E0                MOVX    A,@DPTR
00EA FB                MOV     R3,A
00EB A3                INC     DPTR
00EC E0                MOVX    A,@DPTR
00ED FA                MOV     R2,A
00EE A3                INC     DPTR
00EF E0                MOVX    A,@DPTR
00F0 F9                MOV     R1,A
00F1 C003              PUSH    AR3
00F3 C002              PUSH    AR2
C51 COMPILER V9.03   CYFLASH                                                               04/04/2015 14:09:12 PAGE 25  

00F5 C001              PUSH    AR1
00F7 900000      R     MOV     DPTR,#rowBuffer
00FA E0                MOVX    A,@DPTR
00FB FB                MOV     R3,A
00FC A3                INC     DPTR
00FD E0                MOVX    A,@DPTR
00FE FA                MOV     R2,A
00FF A3                INC     DPTR
0100 E0                MOVX    A,@DPTR
0101 F9                MOV     R1,A
0102 E9                MOV     A,R1
0103 2400              ADD     A,#00H
0105 F9                MOV     R1,A
0106 EA                MOV     A,R2
0107 3401              ADDC    A,#01H
0109 FA                MOV     R2,A
010A A801              MOV     R0,AR1
010C AC02              MOV     R4,AR2
010E AD03              MOV     R5,AR3
0110 D001              POP     AR1
0112 D002              POP     AR2
0114 D003              POP     AR3
0116 7E00              MOV     R6,#00H
0118 7F20              MOV     R7,#020H
011A 120000      E     LCALL   ?C?COPYAMD
                                           ; SOURCE LINE # 415
011D 900000      R     MOV     DPTR,#arrayId
0120 E0                MOVX    A,@DPTR
0121 FF                MOV     R7,A
0122 900000      R     MOV     DPTR,#rowAddress
0125 E0                MOVX    A,@DPTR
0126 FC                MOV     R4,A
0127 A3                INC     DPTR
0128 E0                MOVX    A,@DPTR
0129 FD                MOV     R5,A
012A 900000      R     MOV     DPTR,#rowBuffer
012D E0                MOVX    A,@DPTR
012E FB                MOV     R3,A
012F A3                INC     DPTR
0130 E0                MOVX    A,@DPTR
0131 FA                MOV     R2,A
0132 A3                INC     DPTR
0133 E0                MOVX    A,@DPTR
0134 F9                MOV     R1,A
0135 900000      R     MOV     DPTR,#?_CyWriteRowFull?BYTE+06H
0138 7401              MOV     A,#01H
013A F0                MOVX    @DPTR,A
013B A3                INC     DPTR
013C 7420              MOV     A,#020H
013E F0                MOVX    @DPTR,A
013F 120000      R     LCALL   _CyWriteRowFull
0142 900000      R     MOV     DPTR,#status
0145 EF                MOV     A,R7
0146 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 417
0147 900000      R     MOV     DPTR,#status
014A E0                MOVX    A,@DPTR
014B FF                MOV     R7,A
                                           ; SOURCE LINE # 418
014C         ?C0030:
014C 22                RET     
             ; FUNCTION _CyWriteRowConfig (END)
C51 COMPILER V9.03   CYFLASH                                                               04/04/2015 14:09:12 PAGE 26  


             ; FUNCTION _CyWriteRowFull (BEGIN)
                                           ; SOURCE LINE # 444
0000 900000      R     MOV     DPTR,#arrayId
0003 EF                MOV     A,R7
0004 F0                MOVX    @DPTR,A
0005 900000      R     MOV     DPTR,#rowNumber
0008 EC                MOV     A,R4
0009 F0                MOVX    @DPTR,A
000A A3                INC     DPTR
000B ED                MOV     A,R5
000C F0                MOVX    @DPTR,A
000D 900000      R     MOV     DPTR,#rowData
0010 EB                MOV     A,R3
0011 F0                MOVX    @DPTR,A
0012 A3                INC     DPTR
0013 EA                MOV     A,R2
0014 F0                MOVX    @DPTR,A
0015 A3                INC     DPTR
0016 E9                MOV     A,R1
0017 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 446
                                           ; SOURCE LINE # 449
0018 120000      E     LCALL   CySpcLock
001B EF                MOV     A,R7
001C 6003              JZ      $ + 5H
001E 020000      R     LJMP    ?C0031
                                           ; SOURCE LINE # 450
                                           ; SOURCE LINE # 452
0021 900000      R     MOV     DPTR,#arrayId
0024 E0                MOVX    A,@DPTR
0025 FF                MOV     R7,A
0026 900000      R     MOV     DPTR,#rowData
0029 E0                MOVX    A,@DPTR
002A FB                MOV     R3,A
002B A3                INC     DPTR
002C E0                MOVX    A,@DPTR
002D FA                MOV     R2,A
002E A3                INC     DPTR
002F E0                MOVX    A,@DPTR
0030 F9                MOV     R1,A
0031 900000      R     MOV     DPTR,#rowSize
0034 E0                MOVX    A,@DPTR
0035 FC                MOV     R4,A
0036 A3                INC     DPTR
0037 E0                MOVX    A,@DPTR
0038 FD                MOV     R5,A
0039 900000      E     MOV     DPTR,#?_CySpcLoadRow?BYTE+04H
003C EC                MOV     A,R4
003D F0                MOVX    @DPTR,A
003E A3                INC     DPTR
003F ED                MOV     A,R5
0040 F0                MOVX    @DPTR,A
0041 120000      E     LCALL   _CySpcLoadRow
0044 900000      R     MOV     DPTR,#status
0047 EF                MOV     A,R7
0048 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 454
0049 900000      R     MOV     DPTR,#status
004C E0                MOVX    A,@DPTR
004D FF                MOV     R7,A
004E EF                MOV     A,R7
C51 COMPILER V9.03   CYFLASH                                                               04/04/2015 14:09:12 PAGE 27  

004F 6407              XRL     A,#07H
0051 6003              JZ      $ + 5H
0053 020000      R     LJMP    ?C0032
                                           ; SOURCE LINE # 455
0056         ?C0033:
                                           ; SOURCE LINE # 456
0056 904722            MOV     DPTR,#04722H
0059 E0                MOVX    A,@DPTR
005A FF                MOV     R7,A
005B EF                MOV     A,R7
005C 5402              ANL     A,#02H
005E FF                MOV     R7,A
005F 7E00              MOV     R6,#00H
0061 EF                MOV     A,R7
0062 4E                ORL     A,R6
0063 7009              JNZ     ?C0034
                                           ; SOURCE LINE # 457
                                           ; SOURCE LINE # 459
0065 7F01              MOV     R7,#01H
0067 7E00              MOV     R6,#00H
0069 120000      E     LCALL   _CyDelayUs
                                           ; SOURCE LINE # 460
006C 80E8              SJMP    ?C0033
006E         ?C0034:
                                           ; SOURCE LINE # 463
006E 904722            MOV     DPTR,#04722H
0071 E0                MOVX    A,@DPTR
0072 FF                MOV     R7,A
0073 EF                MOV     A,R7
0074 5402              ANL     A,#02H
0076 FF                MOV     R7,A
0077 7E00              MOV     R6,#00H
0079 EF                MOV     A,R7
007A 4E                ORL     A,R6
007B 600D              JZ      ?C0036
007D 904722            MOV     DPTR,#04722H
0080 E0                MOVX    A,@DPTR
0081 FF                MOV     R7,A
0082 EF                MOV     A,R7
0083 13                RRC     A
0084 13                RRC     A
0085 543F              ANL     A,#03FH
0087 FF                MOV     R7,A
0088 8002              SJMP    ?C0037
008A         ?C0036:
008A 7FFF              MOV     R7,#0FFH
008C         ?C0037:
008C EF                MOV     A,R7
008D 7007              JNZ     ?C0035
                                           ; SOURCE LINE # 464
                                           ; SOURCE LINE # 465
008F 900000      R     MOV     DPTR,#status
0092 E4                CLR     A
0093 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 466
0094 8006              SJMP    ?C0038
0096         ?C0035:
                                           ; SOURCE LINE # 468
                                           ; SOURCE LINE # 469
0096 900000      R     MOV     DPTR,#status
0099 74FF              MOV     A,#0FFH
009B F0                MOVX    @DPTR,A
C51 COMPILER V9.03   CYFLASH                                                               04/04/2015 14:09:12 PAGE 28  

                                           ; SOURCE LINE # 470
009C         ?C0038:
                                           ; SOURCE LINE # 472
009C 900000      R     MOV     DPTR,#status
009F E0                MOVX    A,@DPTR
00A0 FF                MOV     R7,A
00A1 EF                MOV     A,R7
00A2 7074              JNZ     ?C0032
                                           ; SOURCE LINE # 473
                                           ; SOURCE LINE # 475
00A4 900000      R     MOV     DPTR,#arrayId
00A7 E0                MOVX    A,@DPTR
00A8 FF                MOV     R7,A
00A9 900000      R     MOV     DPTR,#rowNumber
00AC E0                MOVX    A,@DPTR
00AD FC                MOV     R4,A
00AE A3                INC     DPTR
00AF E0                MOVX    A,@DPTR
00B0 FD                MOV     R5,A
00B1 900000      R     MOV     DPTR,#dieTemperature
00B4 E0                MOVX    A,@DPTR
00B5 FB                MOV     R3,A
00B6 900000      R     MOV     DPTR,#dieTemperature+01H
00B9 E0                MOVX    A,@DPTR
00BA FE                MOV     R6,A
00BB 900000      E     MOV     DPTR,#?_CySpcWriteRow?BYTE+04H
00BE EE                MOV     A,R6
00BF F0                MOVX    @DPTR,A
00C0 120000      E     LCALL   _CySpcWriteRow
00C3 900000      R     MOV     DPTR,#status
00C6 EF                MOV     A,R7
00C7 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 477
00C8 900000      R     MOV     DPTR,#status
00CB E0                MOVX    A,@DPTR
00CC FF                MOV     R7,A
00CD EF                MOV     A,R7
00CE 6407              XRL     A,#07H
00D0 7046              JNZ     ?C0032
                                           ; SOURCE LINE # 478
00D2         ?C0041:
                                           ; SOURCE LINE # 479
00D2 904722            MOV     DPTR,#04722H
00D5 E0                MOVX    A,@DPTR
00D6 FF                MOV     R7,A
00D7 EF                MOV     A,R7
00D8 5402              ANL     A,#02H
00DA FF                MOV     R7,A
00DB 7E00              MOV     R6,#00H
00DD EF                MOV     A,R7
00DE 4E                ORL     A,R6
00DF 7009              JNZ     ?C0042
                                           ; SOURCE LINE # 480
                                           ; SOURCE LINE # 482
00E1 7F01              MOV     R7,#01H
00E3 7E00              MOV     R6,#00H
00E5 120000      E     LCALL   _CyDelayUs
                                           ; SOURCE LINE # 483
00E8 80E8              SJMP    ?C0041
00EA         ?C0042:
                                           ; SOURCE LINE # 486
00EA 904722            MOV     DPTR,#04722H
C51 COMPILER V9.03   CYFLASH                                                               04/04/2015 14:09:12 PAGE 29  

00ED E0                MOVX    A,@DPTR
00EE FF                MOV     R7,A
00EF EF                MOV     A,R7
00F0 5402              ANL     A,#02H
00F2 FF                MOV     R7,A
00F3 7E00              MOV     R6,#00H
00F5 EF                MOV     A,R7
00F6 4E                ORL     A,R6
00F7 600D              JZ      ?C0044
00F9 904722            MOV     DPTR,#04722H
00FC E0                MOVX    A,@DPTR
00FD FF                MOV     R7,A
00FE EF                MOV     A,R7
00FF 13                RRC     A
0100 13                RRC     A
0101 543F              ANL     A,#03FH
0103 FF                MOV     R7,A
0104 8002              SJMP    ?C0045
0106         ?C0044:
0106 7FFF              MOV     R7,#0FFH
0108         ?C0045:
0108 EF                MOV     A,R7
0109 7007              JNZ     ?C0043
                                           ; SOURCE LINE # 487
                                           ; SOURCE LINE # 488
010B 900000      R     MOV     DPTR,#status
010E E4                CLR     A
010F F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 489
0110 8006              SJMP    ?C0032
0112         ?C0043:
                                           ; SOURCE LINE # 491
                                           ; SOURCE LINE # 492
0112 900000      R     MOV     DPTR,#status
0115 74FF              MOV     A,#0FFH
0117 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 493
0118         ?C0046:
                                           ; SOURCE LINE # 494
0118         ?C0040:
                                           ; SOURCE LINE # 495
0118         ?C0039:
                                           ; SOURCE LINE # 497
0118         ?C0032:
                                           ; SOURCE LINE # 499
0118 120000      E     LCALL   CySpcUnlock
                                           ; SOURCE LINE # 500
011B 8006              SJMP    ?C0047
011D         ?C0031:
                                           ; SOURCE LINE # 502
                                           ; SOURCE LINE # 503
011D 900000      R     MOV     DPTR,#status
0120 7404              MOV     A,#04H
0122 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 504
0123         ?C0047:
                                           ; SOURCE LINE # 506
0123 900000      R     MOV     DPTR,#status
0126 E0                MOVX    A,@DPTR
0127 FF                MOV     R7,A
                                           ; SOURCE LINE # 507
0128         ?C0048:
C51 COMPILER V9.03   CYFLASH                                                               04/04/2015 14:09:12 PAGE 30  

0128 22                RET     
             ; FUNCTION _CyWriteRowFull (END)

             ; FUNCTION _CyFlash_SetWaitCycles (BEGIN)
                                           ; SOURCE LINE # 528
0000 900000      R     MOV     DPTR,#freq
0003 EF                MOV     A,R7
0004 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 529
                                           ; SOURCE LINE # 534
0005 900000      R     MOV     DPTR,#freq
0008 E0                MOVX    A,@DPTR
0009 FF                MOV     R7,A
000A EF                MOV     A,R7
000B D3                SETB    C
000C 9416              SUBB    A,#016H
000E 5013              JNC     ?C0049
                                           ; SOURCE LINE # 535
                                           ; SOURCE LINE # 536
0010 904800            MOV     DPTR,#04800H
0013 E0                MOVX    A,@DPTR
0014 FF                MOV     R7,A
0015 EF                MOV     A,R7
0016 543F              ANL     A,#03FH
0018 FF                MOV     R7,A
0019 EF                MOV     A,R7
001A 4440              ORL     A,#040H
001C FF                MOV     R7,A
001D 904800            MOV     DPTR,#04800H
0020 EF                MOV     A,R7
0021 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 538
0022 22                RET     
0023         ?C0049:
                                           ; SOURCE LINE # 539
0023 900000      R     MOV     DPTR,#freq
0026 E0                MOVX    A,@DPTR
0027 FF                MOV     R7,A
0028 EF                MOV     A,R7
0029 D3                SETB    C
002A 942C              SUBB    A,#02CH
002C 5013              JNC     ?C0051
                                           ; SOURCE LINE # 540
                                           ; SOURCE LINE # 541
002E 904800            MOV     DPTR,#04800H
0031 E0                MOVX    A,@DPTR
0032 FF                MOV     R7,A
0033 EF                MOV     A,R7
0034 543F              ANL     A,#03FH
0036 FF                MOV     R7,A
0037 EF                MOV     A,R7
0038 4480              ORL     A,#080H
003A FF                MOV     R7,A
003B 904800            MOV     DPTR,#04800H
003E EF                MOV     A,R7
003F F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 543
0040 22                RET     
0041         ?C0051:
                                           ; SOURCE LINE # 545
                                           ; SOURCE LINE # 546
0041 904800            MOV     DPTR,#04800H
C51 COMPILER V9.03   CYFLASH                                                               04/04/2015 14:09:12 PAGE 31  

0044 E0                MOVX    A,@DPTR
0045 FF                MOV     R7,A
0046 EF                MOV     A,R7
0047 543F              ANL     A,#03FH
0049 FF                MOV     R7,A
004A EF                MOV     A,R7
004B 44C0              ORL     A,#0C0H
004D FF                MOV     R7,A
004E 904800            MOV     DPTR,#04800H
0051 EF                MOV     A,R7
0052 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 548
0053         ?C0052:
0053         ?C0050:
                                           ; SOURCE LINE # 603
0053         ?C0053:
0053 22                RET     
             ; FUNCTION _CyFlash_SetWaitCycles (END)

             ; FUNCTION CyEEPROM_Start (BEGIN)
                                           ; SOURCE LINE # 622
                                           ; SOURCE LINE # 623
                                           ; SOURCE LINE # 625
0000 9043AC            MOV     DPTR,#043ACH
0003 E0                MOVX    A,@DPTR
0004 FF                MOV     R7,A
0005 EF                MOV     A,R7
0006 4410              ORL     A,#010H
0008 FF                MOV     R7,A
0009 EF                MOV     A,R7
000A F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 628
000B 9043BC            MOV     DPTR,#043BCH
000E E0                MOVX    A,@DPTR
000F FF                MOV     R7,A
0010 EF                MOV     A,R7
0011 4410              ORL     A,#010H
0013 FF                MOV     R7,A
0014 EF                MOV     A,R7
0015 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 629
0016         ?C0054:
0016 22                RET     
             ; FUNCTION CyEEPROM_Start (END)

             ; FUNCTION CyEEPROM_Stop (BEGIN)
                                           ; SOURCE LINE # 646
                                           ; SOURCE LINE # 647
                                           ; SOURCE LINE # 649
0000 9043AC            MOV     DPTR,#043ACH
0003 E0                MOVX    A,@DPTR
0004 FF                MOV     R7,A
0005 EF                MOV     A,R7
0006 54EF              ANL     A,#0EFH
0008 FF                MOV     R7,A
0009 EF                MOV     A,R7
000A F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 652
000B 9043BC            MOV     DPTR,#043BCH
000E E0                MOVX    A,@DPTR
000F FF                MOV     R7,A
0010 EF                MOV     A,R7
C51 COMPILER V9.03   CYFLASH                                                               04/04/2015 14:09:12 PAGE 32  

0011 54EF              ANL     A,#0EFH
0013 FF                MOV     R7,A
0014 EF                MOV     A,R7
0015 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 653
0016         ?C0055:
0016 22                RET     
             ; FUNCTION CyEEPROM_Stop (END)

             ; FUNCTION CyEEPROM_ReadReserve (BEGIN)
                                           ; SOURCE LINE # 672
                                           ; SOURCE LINE # 673
                                           ; SOURCE LINE # 675
0000 904702            MOV     DPTR,#04702H
0003 E0                MOVX    A,@DPTR
0004 FF                MOV     R7,A
0005 EF                MOV     A,R7
0006 4401              ORL     A,#01H
0008 FF                MOV     R7,A
0009 EF                MOV     A,R7
000A F0                MOVX    @DPTR,A
000B         ?C0056:
                                           ; SOURCE LINE # 678
000B 904702            MOV     DPTR,#04702H
000E E0                MOVX    A,@DPTR
000F FF                MOV     R7,A
0010 EF                MOV     A,R7
0011 5402              ANL     A,#02H
0013 FF                MOV     R7,A
0014 7E00              MOV     R6,#00H
0016 EF                MOV     A,R7
0017 4E                ORL     A,R6
0018 60F1              JZ      ?C0056
001A         ?C0057:
                                           ; SOURCE LINE # 679
001A         ?C0058:
001A 22                RET     
             ; FUNCTION CyEEPROM_ReadReserve (END)

             ; FUNCTION CyEEPROM_ReadRelease (BEGIN)
                                           ; SOURCE LINE # 696
                                           ; SOURCE LINE # 697
                                           ; SOURCE LINE # 698
0000 904702            MOV     DPTR,#04702H
0003 E0                MOVX    A,@DPTR
0004 FF                MOV     R7,A
0005 EF                MOV     A,R7
0006 4400              ORL     A,#00H
0008 FF                MOV     R7,A
0009 EF                MOV     A,R7
000A F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 699
000B         ?C0059:
000B 22                RET     
             ; FUNCTION CyEEPROM_ReadRelease (END)



MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1460    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =     48    ----
C51 COMPILER V9.03   CYFLASH                                                               04/04/2015 14:09:12 PAGE 33  

   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)

C51 COMPILER V9.03   CYPM                                                                  04/04/2015 14:09:13 PAGE 1   


C51 COMPILER V9.03, COMPILATION OF MODULE CYPM
OBJECT MODULE PLACED IN .\DP8051_Keil_903\Debug\cyPm.obj
COMPILER INVOKED BY: C:\Program Files\Cypress\PSoC Creator\2.1\PSoC Creator\import\keil\pk51\9.03\C51\BIN\c51.exe .\Gene
                    -rated_Source\PSoC3\cyPm.c NOIV LARGE MODDP2 OMF2 VB(1) PR(.\DP8051_Keil_903\Debug\cyPm.lst) CD DB NOIP OT(0) INCDIR(Gene
                    -rated_Source\PSoC3) OJ(.\DP8051_Keil_903\Debug\cyPm.obj)

line level    source

   1          /*******************************************************************************
   2          * File Name: cyPm.c
   3          * Version 3.10
   4          *
   5          * Description:
   6          *  Provides an API for the power management.
   7          *
   8          * Note:
   9          *  Documentation of the API's in this file is located in the
  10          *  System Reference Guide provided with PSoC Creator.
  11          *
  12          ********************************************************************************
  13          * Copyright 2008-2012, Cypress Semiconductor Corporation.  All rights reserved.
  14          * You may use this file only in accordance with the license, terms, conditions,
  15          * disclaimers, and limitations in the end user license agreement accompanying
  16          * the software package with which this file was provided.
  17          *******************************************************************************/
  18          
  19          #include "cyPm.h"
  20          
  21          static CY_PM_BACKUP_STRUCT          cyPmBackup;
  22          static CY_PM_CLOCK_BACKUP_STRUCT    cyPmClockBackup;
  23          
  24          /* Convertion table between register's values and frequency in MHz  */
  25          static const uint8 CYCODE cyPmImoFreqReg2Mhz[7u] = {12u, 6u, 24u, 3u, 48u, 62u, 74u};
  26          
  27          /* Function Prototypes */
  28          static void CyPmHibSaveSet(void);
  29          static void CyPmHibRestore(void) ;
  30          
  31          static void CyPmSlpSaveSet(void) ;
  32          static void CyPmSlpRestore(void) ;
  33          
  34          static void CyPmHibSlpSaveSet(void) ;
  35          static void CyPmHibSlpRestore(void) ;
  36          
  37          #if(CY_PSOC5A)
              
                  /***************************************************************************
                  * The PICU interupt event is not allowed to act as wakeup source for PSoC 5.
                  * To prevent accidental wakeup all the PICU interrupts are disabled before
                  * Sleep and Hibernate low power modes entry. In case of Sleep mode registers
                  * values must be restored on wakeup, but in case of Hibernate low power mode
                  * there is no sense in saving/restoring registers values as the only wakeup
                  * source for this mode is external reset (XRES). For more information refer
                  * to the PSoC 5 device TRM.
                  ***************************************************************************/
              
                  static void CyPmSavePicuInterrupts(void);
                  static void CyPmDisablePicuInterrupts(void) ;
                  static void CyPmRestorePicuInterrupts(void) ;
              
              #endif  /* (CY_PSOC5A) */
C51 COMPILER V9.03   CYPM                                                                  04/04/2015 14:09:13 PAGE 2   

  54          
  55          
  56          /*******************************************************************************
  57          * Function Name: CyPmSaveClocks
  58          ********************************************************************************
  59          *
  60          * Summary:
  61          *  This function is called in preparation for entering sleep or hibernate low
  62          *  power modes. Saves all state of the clocking system that does not persist
  63          *  during sleep/hibernate or that needs to be altered in preparation for
  64          *  sleep/hibernate. Shutdowns all the digital and analog clock dividers.
  65          *
  66          *  Switches the master clock over to the IMO and shuts down the PLL and MHz
  67          *  Crystal. The IMO frequency is set to either 12 MHz or 48 MHz to match the
  68          *  Design-Wide Resources System Editor "Enable Fast IMO During Startup" setting.
  69          *  The ILO and 32 KHz oscillators are not impacted. The current Flash wait state
  70          *  setting is saved and the Flash wait state setting is set for the current IMO
  71          *  speed.
  72          *
  73          *  Note If the Master Clock source is routed through the DSI inputs, then it
  74          *  must be set manually to another source before using the
  75          *  CyPmSaveClocks()/CyPmRestoreClocks() functions.
  76          *
  77          * Parameters:
  78          *  None
  79          *
  80          * Return:
  81          *  None
  82          *
  83          * Side Effects:
  84          *  All peripheral clocks are going to be off after this API method call.
  85          *
  86          *******************************************************************************/
  87          void CyPmSaveClocks(void) 
  88          {
  89   1          /* Digital and analog clocks - save enable state and disable them all */
  90   1          cyPmClockBackup.enClkA = CY_PM_ACT_CFG1_REG & CY_PM_ACT_EN_CLK_A_MASK;
  91   1          cyPmClockBackup.enClkD = CY_PM_ACT_CFG2_REG;
  92   1          CY_PM_ACT_CFG1_REG &= ~CY_PM_ACT_EN_CLK_A_MASK;
  93   1          CY_PM_ACT_CFG2_REG &= ~CY_PM_ACT_EN_CLK_D_MASK;
  94   1      
  95   1          /* Save current flash wait cycles and set the maximum value */
  96   1          cyPmClockBackup.flashWaitCycles = CY_PM_CACHE_CR_CYCLES_MASK & CY_PM_CACHE_CR_REG;
  97   1          CyFlash_SetWaitCycles(CY_PM_MAX_FLASH_WAIT_CYCLES);
  98   1      
  99   1          /* IMO - save current IMO MHz OSC frequency and USB mode is on bit */
 100   1          cyPmClockBackup.imoFreq = CY_PM_FASTCLK_IMO_CR_REG & CY_PM_FASTCLK_IMO_CR_FREQ_MASK;
 101   1          cyPmClockBackup.imoUsbClk = CY_PM_FASTCLK_IMO_CR_REG & CY_PM_FASTCLK_IMO_CR_USB;
 102   1      
 103   1          /* IMO doubler - save enable state */
 104   1          if(0u != (CY_PM_FASTCLK_IMO_CR_REG & CY_PM_FASTCLK_IMO_CR_F2XON))
 105   1          {
 106   2              /* IMO doubler enabled - save and disable */
 107   2              cyPmClockBackup.imo2x = CY_PM_ENABLED;
 108   2          }
 109   1          else
 110   1          {
 111   2              /* IMO doubler disabled */
 112   2              cyPmClockBackup.imo2x = CY_PM_DISABLED;
 113   2          }
 114   1      
 115   1          /* IMO - set appropriate frequency for LPM */
C51 COMPILER V9.03   CYPM                                                                  04/04/2015 14:09:13 PAGE 3   

 116   1          CyIMO_SetFreq(CY_PM_IMO_FREQ_LPM);
 117   1      
 118   1          /* IMO - save enable state and enable without wait to settle */
 119   1          if(0u != (CY_PM_ACT_CFG0_IMO & CY_PM_ACT_CFG0_REG))
 120   1          {
 121   2              /* IMO - save enabled state */
 122   2              cyPmClockBackup.imoEnable = CY_PM_ENABLED;
 123   2          }
 124   1          else
 125   1          {
 126   2              /* IMO - save disabled state */
 127   2              cyPmClockBackup.imoEnable = CY_PM_DISABLED;
 128   2      
 129   2              /* IMO - enable */
 130   2              CyIMO_Start(CY_PM_IMO_NO_WAIT_TO_SETTLE);
 131   2          }
 132   1      
 133   1          /* IMO - save the current IMOCLK source and set to IMO if not yet */
 134   1          if(0u != (CY_PM_FASTCLK_IMO_CR_REG & CY_PM_FASTCLK_IMO_CR_XCLKEN))
 135   1          {
 136   2              /* DSI or XTAL CLK */
 137   2              cyPmClockBackup.imoClkSrc =
 138   2                  (0u == (CY_PM_CLKDIST_CR_REG & CY_PM_CLKDIST_IMO2X_SRC)) ? CY_IMO_SOURCE_DSI : CY_IMO_SOURCE_X
             -TAL;
 139   2      
 140   2              /* IMO -  set IMOCLK source to MHz OSC */
 141   2              CyIMO_SetSource(CY_IMO_SOURCE_IMO);
 142   2          }
 143   1          else
 144   1          {
 145   2              /* IMO */
 146   2              cyPmClockBackup.imoClkSrc = CY_IMO_SOURCE_IMO;
 147   2          }
 148   1      
 149   1          /* Save clk_imo source */
 150   1          cyPmClockBackup.clkImoSrc = CY_PM_CLKDIST_CR_REG & CY_PM_CLKDIST_IMO_OUT_MASK;
 151   1      
 152   1          /* If IMOCLK2X or SPC OSC is source for clk_imo, set it to IMOCLK */
 153   1          if(CY_PM_CLKDIST_IMO_OUT_IMO != cyPmClockBackup.clkImoSrc)
 154   1          {
 155   2              /* Set IMOCLK to source for clk_imo */
 156   2              CY_PM_CLKDIST_CR_REG = (CY_PM_CLKDIST_CR_REG & ~CY_PM_CLKDIST_IMO_OUT_MASK) |
 157   2                                      CY_PM_CLKDIST_IMO_OUT_IMO;
 158   2          }    /* Need to change nothing if IMOCLK is source clk_imo */
 159   1      
 160   1          /* IMO doubler - disable it (saved above) */
 161   1          if(0u != (CY_PM_FASTCLK_IMO_CR_REG & CY_PM_FASTCLK_IMO_CR_F2XON))
 162   1          {
 163   2              CyIMO_DisableDoubler();
 164   2          }
 165   1      
 166   1          /* Master clock - save divider and set it to divide-by-one (if no yet) */
 167   1          cyPmClockBackup.clkSyncDiv = CY_PM_CLKDIST_MSTR0_REG;
 168   1          if(CY_PM_DIV_BY_ONE != cyPmClockBackup.clkSyncDiv)
 169   1          {
 170   2              CyMasterClk_SetDivider(CY_PM_DIV_BY_ONE);
 171   2          }    /* Need to change nothing if master clock divider is 1 */
 172   1      
 173   1          /* Master clock - save current source */
 174   1          cyPmClockBackup.masterClkSrc = CY_PM_CLKDIST_MSTR1_REG & CY_PM_MASTER_CLK_SRC_MASK;
 175   1      
 176   1          /* Master clock source - set it to IMO if not yet. */
C51 COMPILER V9.03   CYPM                                                                  04/04/2015 14:09:13 PAGE 4   

 177   1          if(CY_MASTER_SOURCE_IMO != cyPmClockBackup.masterClkSrc)
 178   1          {
 179   2              CyMasterClk_SetSource(CY_MASTER_SOURCE_IMO);
 180   2          }    /* Need to change nothing if master clock source is IMO */
 181   1      
 182   1          /* Bus clock - save divider and set it, if needed, to divide-by-one */
 183   1          cyPmClockBackup.clkBusDiv = ((uint16) CY_PM_CLK_BUS_MSB_DIV_REG << 8u) | CY_PM_CLK_BUS_LSB_DIV_REG;
 184   1          if(CY_PM_BUS_CLK_DIV_BY_ONE != cyPmClockBackup.clkBusDiv)
 185   1          {
 186   2              CyBusClk_SetDivider(CY_PM_BUS_CLK_DIV_BY_ONE);
 187   2          }    /* Do nothing if saved and actual values are equal */
 188   1      
 189   1          /* Set number of wait cycles for the flash according CPU frequency in MHz */
 190   1          CyFlash_SetWaitCycles(CY_PM_GET_CPU_FREQ_MHZ);
 191   1      
 192   1          /* PLL - check enable state, disable if needed */
 193   1          if(0u != (CY_PM_FASTCLK_PLL_CFG0_REG & CY_PM_PLL_CFG0_ENABLE))
 194   1          {
 195   2              /* PLL is enabled - save state and disable */
 196   2              cyPmClockBackup.pllEnableState = CY_PM_ENABLED;
 197   2              CyPLL_OUT_Stop();
 198   2          }
 199   1          else
 200   1          {
 201   2              /* PLL is disabled - save state */
 202   2              cyPmClockBackup.pllEnableState = CY_PM_DISABLED;
 203   2          }
 204   1      
 205   1          /* MHz ECO - check enable state and disable if needed */
 206   1          if(0u != (CY_PM_FASTCLK_XMHZ_CSR_REG & CY_PM_XMHZ_CSR_ENABLE))
 207   1          {
 208   2              /* MHz ECO is enabled - save state and disable */
 209   2              cyPmClockBackup.xmhzEnableState = CY_PM_ENABLED;
 210   2              CyXTAL_Stop();
 211   2          }
 212   1          else
 213   1          {
 214   2              /* MHz ECO is disabled - save state */
 215   2              cyPmClockBackup.xmhzEnableState = CY_PM_DISABLED;
 216   2          }
 217   1      }
 218          
 219          
 220          /*******************************************************************************
 221          * Function Name: CyPmRestoreClocks
 222          ********************************************************************************
 223          *
 224          * Summary:
 225          *  Restores any state that was preserved by the last call to CyPmSaveClocks().
 226          *  The Flash wait state setting is also restored.
 227          *
 228          *  Note If the Master Clock source is routed through the DSI inputs, then it
 229          *  must be set manually to another source before using the
 230          *  CyPmSaveClocks()/CyPmRestoreClocks() functions.
 231          *
 232          *  PSoC3 ES3: The merge region could be used to process state when the megahertz
 233          *  crystal is not ready after the hold-off timeout.
 234          *
 235          *  PSoC5: The 130 ms is given for the megahertz crystal to stabilize. It's
 236          *  readiness is not verified after the hold-off timeout.
 237          *
 238          * Parameters:
C51 COMPILER V9.03   CYPM                                                                  04/04/2015 14:09:13 PAGE 5   

 239          *  None
 240          *
 241          * Return:
 242          *  None
 243          *
 244          *******************************************************************************/
 245          void CyPmRestoreClocks(void) 
 246          {
 247   1          #if !(CY_PSOC5A)
 248   1      
 249   1              cystatus status = CYRET_TIMEOUT;
 250   1              uint16 i;
 251   1      
 252   1          #endif  /* !(CY_PSOC5A) */
 253   1      
 254   1          /* Convertion table between CyIMO_SetFreq() parameters and register's value */
 255   1          const uint8 CYCODE cyPmImoFreqMhz2Reg[7u] = {
 256   1              CY_IMO_FREQ_12MHZ, CY_IMO_FREQ_6MHZ,  CY_IMO_FREQ_24MHZ, CY_IMO_FREQ_3MHZ,
 257   1              CY_IMO_FREQ_48MHZ, 5, 6};
 258   1      
 259   1          /* MHz ECO restore state */
 260   1          if(CY_PM_ENABLED == cyPmClockBackup.xmhzEnableState)
 261   1          {
 262   2              /***********************************************************************
 263   2              * Enabling XMHZ XTAL. The actual CyXTAL_Start() with non zero wait
 264   2              * period uses FTW for period measurement. This could cause a problem
 265   2              * if CTW/FTW is used as a wake up time in the low power modes APIs.
 266   2              * So, the XTAL wait procedure is implemented with a software delay.
 267   2              ***********************************************************************/
 268   2      
 269   2              /* Enable XMHZ XTAL with no wait */
 270   2              (void) CyXTAL_Start(CY_PM_XTAL_MHZ_NO_WAIT);
 271   2      
 272   2              #if(CY_PSOC5A)
              
                          /* Make a 130 milliseconds delay */
                          CyDelayCycles(CY_PM_WAIT_200_US * CY_PM_MHZ_XTAL_WAIT_NUM_OF_200_US * CY_PM_GET_CPU_FREQ_MHZ);
              
                      #else
 278   2      
 279   2                  /* Read XERR bit to clear it */
 280   2                  (void) CY_PM_FASTCLK_XMHZ_CSR_REG;
 281   2      
 282   2                  /* Wait */
 283   2                  for(i = CY_PM_MHZ_XTAL_WAIT_NUM_OF_200_US; i > 0u; i--)
 284   2                  {
 285   3                      /* Make a 200 microseconds delay */
 286   3                      CyDelayCycles(CY_PM_WAIT_200_US * CY_PM_GET_CPU_FREQ_MHZ);
 287   3      
 288   3                      /* High output indicates oscillator failure */
 289   3                      if(0u == (CY_PM_FASTCLK_XMHZ_CSR_REG & CY_PM_XMHZ_CSR_XERR))
 290   3                      {
 291   4                          status = CYRET_SUCCESS;
 292   4                          break;
 293   4                      }
 294   3                  }
 295   2      
 296   2                  if(CYRET_TIMEOUT == status)
 297   2                  {
 298   3                      /*******************************************************************
 299   3                      * Process the situation when megahertz crystal is not ready.
 300   3                      * Time to stabialize value is crystal specific.
C51 COMPILER V9.03   CYPM                                                                  04/04/2015 14:09:13 PAGE 6   

 301   3                      *******************************************************************/
 302   3      
 303   3                      /* `#START_MHZ_ECO_TIMEOUT` */
 304   3      
 305   3                      /* `#END` */
 306   3                  }
 307   2      
 308   2              #endif  /* (CY_PSOC5A) */
 309   2      
 310   2          }   /* (CY_PM_ENABLED == cyPmClockBackup.xmhzEnableState) */
 311   1      
 312   1      
 313   1          /* Temprorary set the maximum flash wait cycles */
 314   1          CyFlash_SetWaitCycles(CY_PM_MAX_FLASH_WAIT_CYCLES);
 315   1      
 316   1          /* The XTAL and DSI clocks are ready to be source for Master clock. */
 317   1          if((CY_PM_MASTER_CLK_SRC_XTAL == cyPmClockBackup.masterClkSrc) ||
 318   1             (CY_PM_MASTER_CLK_SRC_DSI  == cyPmClockBackup.masterClkSrc))
 319   1          {
 320   2              /* Restore Master clock's divider */
 321   2              if(CY_PM_CLKDIST_MSTR0_REG != cyPmClockBackup.clkSyncDiv)
 322   2              {
 323   3                  /* Restore Master clock divider */
 324   3                  CyMasterClk_SetDivider(cyPmClockBackup.clkSyncDiv);
 325   3              }
 326   2      
 327   2              /* Restore Master clock source */
 328   2              CyMasterClk_SetSource(cyPmClockBackup.masterClkSrc);
 329   2          }
 330   1      
 331   1          /* IMO - restore IMO frequency */
 332   1          if((0u != (cyPmClockBackup.imoUsbClk & CY_PM_FASTCLK_IMO_CR_USB)) &&
 333   1              (CY_IMO_FREQ_24MHZ == cyPmImoFreqMhz2Reg[cyPmClockBackup.imoFreq]))
 334   1          {
 335   2              /* Restore IMO frequency (24 MHz) and trim it for USB */
 336   2              CyIMO_SetFreq(CY_IMO_FREQ_USB);
 337   2          }
 338   1          else
 339   1          {
 340   2              /* Restore IMO frequency */
 341   2              CyIMO_SetFreq(cyPmImoFreqMhz2Reg[cyPmClockBackup.imoFreq]);
 342   2      
 343   2              if(0u != (cyPmClockBackup.imoUsbClk & CY_PM_FASTCLK_IMO_CR_USB))
 344   2              {
 345   3                  CY_PM_FASTCLK_IMO_CR_REG |= CY_PM_FASTCLK_IMO_CR_USB;
 346   3              }
 347   2              else
 348   2              {
 349   3                  CY_PM_FASTCLK_IMO_CR_REG &= ~CY_PM_FASTCLK_IMO_CR_USB;
 350   3              }
 351   2          }
 352   1      
 353   1          /* IMO - restore enable state if needed */
 354   1          if((CY_PM_ENABLED == cyPmClockBackup.imoEnable) &&
 355   1             (0u == (CY_PM_ACT_CFG0_IMO & CY_PM_ACT_CFG0_REG)))
 356   1          {
 357   2              /* IMO - restore enabled state */
 358   2              CyIMO_Start(CY_PM_IMO_NO_WAIT_TO_SETTLE);
 359   2          }
 360   1      
 361   1          /* IMO - restore disable state if needed */
 362   1          if((CY_PM_DISABLED == cyPmClockBackup.imoEnable) &&
C51 COMPILER V9.03   CYPM                                                                  04/04/2015 14:09:13 PAGE 7   

 363   1             (0u != (CY_PM_ACT_CFG0_IMO & CY_PM_ACT_CFG0_REG)))
 364   1          {
 365   2              CyIMO_Stop();
 366   2          }
 367   1      
 368   1          /* IMO - restore IMOCLK source */
 369   1          CyIMO_SetSource(cyPmClockBackup.imoClkSrc);
 370   1      
 371   1          /* Restore IMO doubler enable state (turned off by CyPmSaveClocks()) */
 372   1          if(CY_PM_ENABLED == cyPmClockBackup.imo2x)
 373   1          {
 374   2              CyIMO_EnableDoubler();
 375   2          }
 376   1      
 377   1          /* IMO - restore clk_imo source, if needed */
 378   1          if(cyPmClockBackup.clkImoSrc != (CY_PM_CLKDIST_CR_REG & CY_PM_CLKDIST_IMO_OUT_MASK))
 379   1          {
 380   2              CY_PM_CLKDIST_CR_REG = (CY_PM_CLKDIST_CR_REG & ~CY_PM_CLKDIST_IMO_OUT_MASK) |
 381   2                                      cyPmClockBackup.clkImoSrc;
 382   2          }
 383   1      
 384   1          /* PLL restore state */
 385   1          if(CY_PM_ENABLED == cyPmClockBackup.pllEnableState)
 386   1          {
 387   2              /***********************************************************************
 388   2              * Enable PLL. The actual CyPLL_OUT_Start() without wait period uses FTW
 389   2              * for period measurement. This could cause a problem if CTW/FTW is used
 390   2              * as a wakeup time in the low power modes APIs. To omit this issue PLL
 391   2              * wait procedure is implemented with a software delay.
 392   2              ***********************************************************************/
 393   2      
 394   2              /* Enable PLL */
 395   2              (void) CyPLL_OUT_Start(CY_PM_PLL_OUT_NO_WAIT);
 396   2      
 397   2              /* Make a 250 us delay */
 398   2              CyDelayCycles(CY_PM_WAIT_250_US * CY_PM_GET_CPU_FREQ_MHZ);
 399   2          }   /* (CY_PM_ENABLED == cyPmClockBackup.pllEnableState) */
 400   1      
 401   1      
 402   1          /* PLL and IMO is ready to be source for Master clock */
 403   1          if((CY_PM_MASTER_CLK_SRC_IMO == cyPmClockBackup.masterClkSrc) ||
 404   1             (CY_PM_MASTER_CLK_SRC_PLL == cyPmClockBackup.masterClkSrc))
 405   1          {
 406   2              /* Restore Master clock divider */
 407   2              if(CY_PM_CLKDIST_MSTR0_REG != cyPmClockBackup.clkSyncDiv)
 408   2              {
 409   3                  CyMasterClk_SetDivider(cyPmClockBackup.clkSyncDiv);
 410   3              }
 411   2      
 412   2              /* Restore Master clock source */
 413   2              CyMasterClk_SetSource(cyPmClockBackup.masterClkSrc);
 414   2          }
 415   1      
 416   1          /* Bus clock - restore divider, if needed */
 417   1          if(cyPmClockBackup.clkBusDiv != (((uint16) CY_PM_CLK_BUS_MSB_DIV_REG << 8u) | CY_PM_CLK_BUS_LSB_DIV_RE
             -G))
 418   1          {
 419   2              CyBusClk_SetDivider(cyPmClockBackup.clkBusDiv);
 420   2          }
 421   1      
 422   1          /* Restore flash wait cycles */
 423   1          CY_PM_CACHE_CR_REG = ((CY_PM_CACHE_CR_REG & ~CY_PM_CACHE_CR_CYCLES_MASK) |
C51 COMPILER V9.03   CYPM                                                                  04/04/2015 14:09:13 PAGE 8   

 424   1                                 cyPmClockBackup.flashWaitCycles);
 425   1      
 426   1          /* Digital and analog clocks - restore state */
 427   1          CY_PM_ACT_CFG1_REG = cyPmClockBackup.enClkA;
 428   1          CY_PM_ACT_CFG2_REG = cyPmClockBackup.enClkD;
 429   1      }
 430          
 431          
 432          /*******************************************************************************
 433          * Function Name: CyPmAltAct
 434          ********************************************************************************
 435          *
 436          * Summary:
 437          *  Puts the part into the Alternate Active (Standby) state. The Alternate Active
 438          *  state can allow for any of the capabilities of the device to be active, but
 439          *  the operation of this function is dependent on the CPU being disabled during
 440          *  the Alternate Active state. The configuration code and the component APIs
 441          *  will configure the template for the Alternate Active state to be the same as
 442          *  the Active state with the exception that the CPU will be disabled during
 443          *  Alternate Active.
 444          *
 445          *  Note Before calling this function, you must manually configure the power mode
 446          *  of the source clocks for the timer that is used as the wakeup timer.
 447          *
 448          *  PSoC3:
 449          *  Before switching to Alternate Active, if a wakeupTime other than NONE is
 450          *  specified, then the appropriate timer state is configured as specified with
 451          *  the interrupt for that timer disabled.  The wakeup source will be the
 452          *  combination of the values specified in the wakeupSource and any timer
 453          *  specified in the wakeupTime argument.  Once the wakeup condition is
 454          *  satisfied, then all saved state is restored and the function returns in the
 455          *  Active state.
 456          *
 457          *  Note that if the wakeupTime is made with a different value, the period before
 458          *  the wakeup occurs can be significantly shorter than the specified time.  If
 459          *  the next call is made with the same wakeupTime value, then the wakeup will
 460          *  occur the specified period after the previous wakeup occurred.
 461          *
 462          *  If a wakeupTime other than NONE is specified, then upon exit the state of the
 463          *  specified timer will be left as specified by wakeupTime with the timer
 464          *  enabled and the interrupt disabled.  If the CTW, FTW or One PPS is already
 465          *  configured for wakeup, for example with the SleepTimer or RTC components,
 466          *  then specify NONE for the wakeupTime and include the appropriate source for
 467          *  wakeupSource.
 468          *
 469          *  PSoC 5:
 470          *  Neither of the parameters to this function are used for PSoC 5. The device
 471          *  will go into Alternate Active mode until an enabled interrupt occurs.
 472          *
 473          * Parameters:
 474          *  wakeupTime: Specifies a timer wakeup source and the frequency of that
 475          *              source. For PSoC 5 this parameter is ignored.
 476          *
 477          *           Define                      Time
 478          *  PM_ALT_ACT_TIME_NONE             None
 479          *  PM_ALT_ACT_TIME_ONE_PPS          One PPS: 1 second
 480          *  PM_ALT_ACT_TIME_CTW_2MS          CTW: 2 ms
 481          *  PM_ALT_ACT_TIME_CTW_4MS          CTW: 4 ms
 482          *  PM_ALT_ACT_TIME_CTW_8MS          CTW: 8 ms
 483          *  PM_ALT_ACT_TIME_CTW_16MS         CTW: 16 ms
 484          *  PM_ALT_ACT_TIME_CTW_32MS         CTW: 32 ms
 485          *  PM_ALT_ACT_TIME_CTW_64MS         CTW: 64 ms
C51 COMPILER V9.03   CYPM                                                                  04/04/2015 14:09:13 PAGE 9   

 486          *  PM_ALT_ACT_TIME_CTW_128MS        CTW: 128 ms
 487          *  PM_ALT_ACT_TIME_CTW_256MS        CTW: 256 ms
 488          *  PM_ALT_ACT_TIME_CTW_512MS        CTW: 512 ms
 489          *  PM_ALT_ACT_TIME_CTW_1024MS       CTW: 1024 ms
 490          *  PM_ALT_ACT_TIME_CTW_2048MS       CTW: 2048 ms
 491          *  PM_ALT_ACT_TIME_CTW_4096MS       CTW: 4096 ms
 492          *  PM_ALT_ACT_TIME_FTW(1-256)*       FTW: 10us to 2.56 ms
 493          *
 494          *  *Note:   PM_ALT_ACT_TIME_FTW() is a macro that takes an argument that
 495          *           specifies how many increments of 10 us to delay.
 496                      For PSoC3 ES3 silicon the valid range of  values is 1 to 256.
 497          *
 498          *  wakeUpSource:    Specifies a bitwise mask of wakeup sources. In addition, if
 499          *                   a wakeupTime has been specified the associated timer will be
 500          *                   included as a wakeup source. For PSoC 5 this parameter is
 501          *                   ignored.
 502          *
 503          *           Define                      Source
 504          *  PM_ALT_ACT_SRC_NONE              None
 505          *  PM_ALT_ACT_SRC_COMPARATOR0       Comparator 0
 506          *  PM_ALT_ACT_SRC_COMPARATOR1       Comparator 1
 507          *  PM_ALT_ACT_SRC_COMPARATOR2       Comparator 2
 508          *  PM_ALT_ACT_SRC_COMPARATOR3       Comparator 3
 509          *  PM_ALT_ACT_SRC_INTERRUPT         Interrupt
 510          *  PM_ALT_ACT_SRC_PICU              PICU
 511          *  PM_ALT_ACT_SRC_I2C               I2C
 512          *  PM_ALT_ACT_SRC_BOOSTCONVERTER    Boost Converter
 513          *  PM_ALT_ACT_SRC_FTW               Fast Timewheel*
 514          *  PM_ALT_ACT_SRC_VD                High and Low Voltage Detection (HVI, LVI)*
 515          *  PM_ALT_ACT_SRC_CTW               Central Timewheel**
 516          *  PM_ALT_ACT_SRC_ONE_PPS           One PPS**
 517          *  PM_ALT_ACT_SRC_LCD               LCD
 518          *
 519          *  *Note : FTW and HVI/LVI wakeup signals are in the same mask bit.
 520          *  **Note: CTW and One PPS wakeup signals are in the same mask bit.
 521          *
 522          *  When specifying a Comparator as the wakeupSource an instance specific define
 523          *  should be used that will track with the specific comparator that the instance
 524          *  is placed into. As an example, for a Comparator instance named MyComp the
 525          *  value to OR into the mask is: MyComp_ctComp__CMP_MASK.
 526          *
 527          *  When CTW, FTW or One PPS is used as a wakeup source, the CyPmReadStatus()
 528          *  function must be called upon wakeup with corresponding parameter. Please
 529          *  refer to the CyPmReadStatus() API in the System Reference Guide for more
 530          *  information.
 531          *
 532          * Return:
 533          *  None
 534          *
 535          * Reentrant:
 536          *  No
 537          *
 538          * Side Effects:
 539          *  For PSoC5 silicon, the wakeup source is not selectable. In this case the
 540          *  wakeupSource argument is ignored and any of the available wakeup sources will
 541          *  wake the device.
 542          *
 543          *  If a wakeupTime other than NONE is specified, then upon exit the state of the
 544          *  specified timer will be left as specified by wakeupTime with the timer
 545          *  enabled and the interrupt disabled.  Also, the ILO 1 KHz (if CTW timer is
 546          *  used as wakeup time) or ILO 100 KHz (if FTW timer is used as wakeup time)
 547          *  will be left started.
C51 COMPILER V9.03   CYPM                                                                  04/04/2015 14:09:13 PAGE 10  

 548          *
 549          *******************************************************************************/
 550          void CyPmAltAct(uint16 wakeupTime, uint16 wakeupSource) 
 551          {
 552   1          #if(CY_PSOC5A)
              
                      /* Arguments expected to be 0 */
                      CYASSERT((PM_ALT_ACT_TIME_NONE == wakeupTime) &&
                               (PM_ALT_ACT_SRC_NONE  == wakeupSource));
              
                      /* To remove unreferenced local variable warning */
                      wakeupTime = wakeupTime;
                      wakeupSource = wakeupSource;
              
                  #endif /* (CY_PSOC5A) */
 563   1      
 564   1      
 565   1          #if(CY_PSOC3)
 566   1      
 567   1              /* FTW - save current and set new configuration */
 568   1              if((wakeupTime >= PM_ALT_ACT_TIME_FTW(1u)) && (wakeupTime <= PM_ALT_ACT_TIME_FTW(256u)))
 569   1              {
 570   2                  CyPmFtwSetInterval(PM_ALT_ACT_FTW_INTERVAL(wakeupTime));
 571   2      
 572   2                  /* Include associated timer to the wakeupSource */
 573   2                  wakeupSource |= PM_ALT_ACT_SRC_FTW;
 574   2              }
 575   1      
 576   1              /* CTW - save current and set new configuration */
 577   1              if((wakeupTime >= PM_ALT_ACT_TIME_CTW_2MS) && (wakeupTime <= PM_ALT_ACT_TIME_CTW_4096MS))
 578   1              {
 579   2                  /* Save current CTW configuration and set new one */
 580   2                  CyPmCtwSetInterval((wakeupTime - 1u) & CY_PM_CTW_INTERVAL_MASK);
 581   2      
 582   2                  /* Include associated timer to the wakeupSource */
 583   2                  wakeupSource |= PM_ALT_ACT_SRC_CTW;
 584   2              }
 585   1      
 586   1              /* 1PPS - save current and set new configuration */
 587   1              if(PM_ALT_ACT_TIME_ONE_PPS == wakeupTime)
 588   1              {
 589   2                  /* Save current 1PPS configuration and set new one */
 590   2                  CyPmOppsSet();
 591   2      
 592   2                  /* Include associated timer to the wakeupSource */
 593   2                  wakeupSource |= PM_ALT_ACT_SRC_ONE_PPS;
 594   2              }
 595   1      
 596   1          #endif /* (CY_PSOC3) */
 597   1      
 598   1          #if(CY_PSOC3 || CY_PSOC5LP)
 599   1      
 600   1              /* Save and set new wake up configuration */
 601   1      
 602   1              /* Interrupt, PICU, I2C, Boost converter, CTW/1PPS */
 603   1              cyPmBackup.wakeupCfg0 = CY_PM_WAKEUP_CFG0_REG;
 604   1              CY_PM_WAKEUP_CFG0_REG = (uint8) (wakeupSource >> 4u);
 605   1      
 606   1              /* Comparators */
 607   1              cyPmBackup.wakeupCfg1 = CY_PM_WAKEUP_CFG1_REG;
 608   1              CY_PM_WAKEUP_CFG1_REG = (((uint8) wakeupSource) & CY_PM_WAKEUP_SRC_CMPS_MASK);
 609   1      
C51 COMPILER V9.03   CYPM                                                                  04/04/2015 14:09:13 PAGE 11  

 610   1              /* LCD */
 611   1              cyPmBackup.wakeupCfg2 = CY_PM_WAKEUP_CFG2_REG;
 612   1              CY_PM_WAKEUP_CFG2_REG = ((uint8) ((wakeupSource >> 12u) & 0x01u));
 613   1      
 614   1          #endif  /* (CY_PSOC3 || CY_PSOC5LP) */
 615   1      
 616   1          /* Switch to the Alternate Active mode */
 617   1          CY_PM_MODE_CSR_REG = ((CY_PM_MODE_CSR_REG & ~CY_PM_MODE_CSR_MASK) | CY_PM_MODE_CSR_ALT_ACT);
 618   1      
 619   1          /* Recommended readback. */
 620   1          (void) CY_PM_MODE_CSR_REG;
 621   1      
 622   1          /* Two recommended NOPs to get into the mode. */
 623   1          CY_NOP;
 624   1          CY_NOP;
 625   1      
 626   1          /* Execute WFI instruction (for PSoC5 devices only) */
 627   1          CY_PM_WFI;
 628   1      
 629   1          /* Point of return from Alternate Active Mode */
 630   1      
 631   1          /* Device is PSoC 3 and the revision is ES3 or later. */
 632   1          #if(CY_PSOC3 || CY_PSOC5LP)
 633   1      
 634   1              /* Restore wake up configuration */
 635   1              CY_PM_WAKEUP_CFG0_REG = cyPmBackup.wakeupCfg0;
 636   1              CY_PM_WAKEUP_CFG1_REG = cyPmBackup.wakeupCfg1;
 637   1              CY_PM_WAKEUP_CFG2_REG = cyPmBackup.wakeupCfg2;
 638   1      
 639   1          #endif  /* (CY_PSOC3 || CY_PSOC5LP) */
 640   1      }
 641          
 642          
 643          /*******************************************************************************
 644          * Function Name: CyPmSleep
 645          ********************************************************************************
 646          *
 647          * Summary:
 648          *  Puts the part into the Sleep state.
 649          *
 650          *  Note Before calling this function, you must manually configure the power
 651          *  mode of the source clocks for the timer that is used as wakeup timer.
 652          *
 653          *  PSoC3:
 654          *  Before switching to Sleep, if a wakeupTime other than NONE is specified,
 655          *  then the appropriate timer state is configured as specified with the
 656          *  interrupt for that timer disabled.  The wakeup source will be the combination
 657          *  of the values specified in the wakeupSource and any timer specified in the
 658          *  wakeupTime argument.  Once the wakeup condition is satisfied, then all saved
 659          *  state is restored and the function returns in the Active state.
 660          *
 661          *  Note that if the wakeupTime is made with a different value, the period before
 662          *  the wakeup occurs can be significantly shorter than the specified time.  If
 663          *  the next call is made with the same wakeupTime value, then the wakeup will
 664          *  occur the specified period after the previous wakeup occurred.
 665          *
 666          *  If a wakeupTime other than NONE is specified, then upon exit the state of the
 667          *  specified timer will be left as specified by wakeupTime with the timer
 668          *  enabled and the interrupt disabled.  If the CTW or One PPS is already
 669          *  configured for wakeup, for example with the SleepTimer or RTC components,
 670          *  then specify NONE for the wakeupTime and include the appropriate source for
 671          *  wakeupSource.
C51 COMPILER V9.03   CYPM                                                                  04/04/2015 14:09:13 PAGE 12  

 672          *
 673          *  PSoC 5:
 674          *  Neither parameter to this function is used for PSoC 5. The device will go
 675          *  into Sleep mode until it is woken by an interrupt from the Central Time Wheel
 676          *  (CTW). The CTW must already be configured to generate an interrupt. It is
 677          *  configured using the SleepTimer component.  Only the CTW can be used to wake
 678          *  the device from sleep mode.  The other wakeup sources, Once per second or
 679          *  Port Interrupt Controller (PICU), cannot be used reliably with PSoC 5. This
 680          *  function automatically disables these interrupt sources and then restores
 681          *  them after the devices is woken by the CTW.
 682          *
 683          *  The duration of sleep needs to be controlled so that the device doesn't wake
 684          *  up too soon after going to sleep or remain asleep for too long.  Reliable
 685          *  sleep times of between 1ms and 8ms can be supported.  This requirement is
 686          *  satisfied with CTW settings of 4, 8 or 16 ms.  To control the sleep time the
 687          *  CTW is reset automatically just before putting the device to sleep.  The
 688          *  resulting wakeup time is half the duration programmed into the CTW with an
 689          *  uncertainty of 1 ms due to the arrival time of the first ILO clock edge.
 690          *  For example, the setting of 4 ms will result in a sleep time between 1 ms and
 691          *  2 ms.
 692          *
 693          * Parameters:
 694          *  wakeupTime:      Specifies a timer wakeup source and the frequency of that
 695          *                   source. For PSoC 5, this parameter is ignored.
 696          *
 697          *           Define                      Time
 698          *  PM_SLEEP_TIME_NONE               None
 699          *  PM_SLEEP_TIME_ONE_PPS            One PPS: 1 second
 700          *  PM_SLEEP_TIME_CTW_2MS            CTW: 2 ms
 701          *  PM_SLEEP_TIME_CTW_4MS            CTW: 4 ms
 702          *  PM_SLEEP_TIME_CTW_8MS            CTW: 8 ms
 703          *  PM_SLEEP_TIME_CTW_16MS           CTW: 16 ms
 704          *  PM_SLEEP_TIME_CTW_32MS           CTW: 32 ms
 705          *  PM_SLEEP_TIME_CTW_64MS           CTW: 64 ms
 706          *  PM_SLEEP_TIME_CTW_128MS          CTW: 128 ms
 707          *  PM_SLEEP_TIME_CTW_256MS          CTW: 256 ms
 708          *  PM_SLEEP_TIME_CTW_512MS          CTW: 512 ms
 709          *  PM_SLEEP_TIME_CTW_1024MS         CTW: 1024 ms
 710          *  PM_SLEEP_TIME_CTW_2048MS         CTW: 2048 ms
 711          *  PM_SLEEP_TIME_CTW_4096MS         CTW: 4096 ms
 712          *
 713          *  wakeUpSource:    Specifies a bitwise mask of wakeup sources. In addition, if
 714          *                   a wakeupTime has been specified the associated timer will be
 715          *                   included as a wakeup source. For PSoC 5 this parameter is
 716          *                   ignored.
 717          *
 718          *           Define                      Source
 719          *  PM_SLEEP_SRC_NONE                None
 720          *  PM_SLEEP_SRC_COMPARATOR0         Comparator 0
 721          *  PM_SLEEP_SRC_COMPARATOR1         Comparator 1
 722          *  PM_SLEEP_SRC_COMPARATOR2         Comparator 2
 723          *  PM_SLEEP_SRC_COMPARATOR3         Comparator 3
 724          *  PM_SLEEP_SRC_PICU                PICU
 725          *  PM_SLEEP_SRC_I2C                 I2C
 726          *  PM_SLEEP_SRC_BOOSTCONVERTER      Boost Converter
 727          *  PM_SLEEP_SRC_VD                  High and Low Voltage Detection (HVI, LVI)
 728          *  PM_SLEEP_SRC_CTW                 Central Timewheel*
 729          *  PM_SLEEP_SRC_ONE_PPS             One PPS*
 730          *  PM_SLEEP_SRC_LCD                 LCD
 731          *
 732          *  *Note:   CTW and One PPS wakeup signals are in the same mask bit.
 733          *           For PSoC 5, these are in a different bit (value 1024).
C51 COMPILER V9.03   CYPM                                                                  04/04/2015 14:09:13 PAGE 13  

 734          *
 735          *  When specifying a Comparator as the wakeupSource an instance specific define
 736          *  should be used that will track with the specific comparator that the instance
 737          *  is placed into. As an example for a Comparator instance named MyComp the
 738          *  value to OR into the mask is: MyComp_ctComp__CMP_MASK.
 739          *
 740          *  When CTW or One PPS is used as a wakeup source, the CyPmReadStatus()
 741          *  function must be called upon wakeup with corresponding parameter. Please
 742          *  refer to the CyPmReadStatus() API in the System Reference Guide for more
 743          *  information.
 744          *
 745          * Return:
 746          *  None
 747          *
 748          * Reentrant:
 749          *  No
 750          *
 751          * Side Effects:
 752          *  For PSoC 5 silicon the wakeup source is not selectable. In this case the
 753          *  wakeupSource argument is ignored and any of the available wakeup sources will
 754          *  wake the device.
 755          *
 756          *  If a wakeupTime other than NONE is specified, then upon exit the state of the
 757          *  specified timer will be left as specified by wakeupTime with the timer
 758          *  enabled and the interrupt disabled. Also, the ILO 1 KHz (if CTW timer is
 759          *  used as wake up time) will be left started.
 760          *
 761          *  The 1 kHz ILO clock is expected to be enabled for PSoC3 silicon to
 762          *  measure Hibernate/Sleep regulator settling time after a reset. The holdoff
 763          *  delay is measured using rising edges of the 1 kHz ILO.
 764          *
 765          *******************************************************************************/
 766          void CyPmSleep(uint8 wakeupTime, uint16 wakeupSource) 
 767          {
 768   1          uint8 interruptState;
 769   1      
 770   1          /* Save current global interrupt enable and disable it */
 771   1          interruptState = CyEnterCriticalSection();
 772   1      
 773   1          /* Device is PSoC 3 and the revision is ES3 or later */
 774   1          #if(CY_PSOC3)
 775   1      
 776   1              /* Hardware buzz expected to be disabled below for TO6 */
 777   1              if(CYDEV_CHIP_REV_ACTUAL < 5u)
 778   1              {
 779   2                  CYASSERT(0u == (CY_PM_PWRSYS_WAKE_TR2_REG & CY_PM_PWRSYS_WAKE_TR2_EN_BUZZ));
 780   2              }
 781   1      
 782   1              /***********************************************************************
 783   1              * The Hibernate/Sleep regulator has a settling time after a reset.
 784   1              * During this time, the system ignores requests to enter Sleep and
 785   1              * Hibernate modes. The holdoff delay is measured using rising edges of
 786   1              * the 1 kHz ILO.
 787   1              ***********************************************************************/
 788   1              if(0u == (CY_PM_MODE_CSR_REG & CY_PM_MODE_CSR_PWRUP_PULSE_Q))
 789   1              {
 790   2                  /* Disable hold off - no action on restore */
 791   2                  CY_PM_PWRSYS_SLP_TR_REG &= CY_PM_PWRSYS_SLP_TR_HIBSLP_HOLDOFF_MASK;
 792   2              }
 793   1              else
 794   1              {
 795   2                  /* Abort, device is not ready for low power mode entry */
C51 COMPILER V9.03   CYPM                                                                  04/04/2015 14:09:13 PAGE 14  

 796   2                  return;
 797   2              }
 798   1      
 799   1          #endif /* (CY_PSOC3) */
 800   1      
 801   1      
 802   1          /* Verify correctness of the parameters */
 803   1          #if(CY_PSOC5A)
              
                      /* Arguments expected to be 0 */
                      CYASSERT((PM_SLEEP_TIME_NONE == wakeupTime) &&
                               (PM_SLEEP_SRC_NONE  == wakeupSource));
              
                      /* To remove unreferenced local variable warning */
                      wakeupTime = wakeupTime;
                      wakeupSource = wakeupSource;
              
                  #endif /* (CY_PSOC5A) */
 814   1      
 815   1      
 816   1          /* Prepare hardware for Sleep mode */
 817   1          CyPmSlpSaveSet();
 818   1      
 819   1      
 820   1          #if(CY_PSOC3)
 821   1      
 822   1              /* CTW - save current and set new configuration */
 823   1              if((wakeupTime >= PM_SLEEP_TIME_CTW_2MS) && (wakeupTime <= PM_SLEEP_TIME_CTW_4096MS))
 824   1              {
 825   2                  /* Save current and set new configuration of the CTW */
 826   2                  CyPmCtwSetInterval((wakeupTime - 1u) & CY_PM_CTW_INTERVAL_MASK);
 827   2      
 828   2                  /* Include associated timer to the wakeupSource */
 829   2                  wakeupSource |= PM_SLEEP_SRC_CTW;
 830   2              }
 831   1      
 832   1              /* 1PPS - save current and set new configuration */
 833   1              if(PM_SLEEP_TIME_ONE_PPS == wakeupTime)
 834   1              {
 835   2                  /* Save current and set new configuration of the 1PPS */
 836   2                  CyPmOppsSet();
 837   2      
 838   2                  /* Include associated timer to the wakeupSource */
 839   2                  wakeupSource |= PM_SLEEP_SRC_ONE_PPS;
 840   2              }
 841   1      
 842   1          #endif /* (CY_PSOC3) */
 843   1      
 844   1      
 845   1          #if(CY_PSOC3 || CY_PSOC5LP)
 846   1      
 847   1              /* Save and set new wake up configuration */
 848   1      
 849   1              /* Interrupt, PICU, I2C, Boost converter, CTW/1PPS */
 850   1              cyPmBackup.wakeupCfg0 = CY_PM_WAKEUP_CFG0_REG;
 851   1              CY_PM_WAKEUP_CFG0_REG = (uint8) (wakeupSource >> 4u);
 852   1      
 853   1              /* Comparators */
 854   1              cyPmBackup.wakeupCfg1 = CY_PM_WAKEUP_CFG1_REG;
 855   1              CY_PM_WAKEUP_CFG1_REG = (((uint8) wakeupSource) & CY_PM_WAKEUP_SRC_CMPS_MASK);
 856   1      
 857   1              /* LCD */
C51 COMPILER V9.03   CYPM                                                                  04/04/2015 14:09:13 PAGE 15  

 858   1              cyPmBackup.wakeupCfg2 = CY_PM_WAKEUP_CFG2_REG;
 859   1              CY_PM_WAKEUP_CFG2_REG = ((uint8) ((wakeupSource >> 12u) & 0x01u));
 860   1      
 861   1          #endif /* (CY_PSOC3 || CY_PSOC5LP) */
 862   1      
 863   1      
 864   1          /* Last moment IMO frequency change */
 865   1          if(0u == (CY_PM_FASTCLK_IMO_CR_REG & CY_PM_FASTCLK_IMO_CR_FREQ_MASK))
 866   1          {
 867   2              /* IMO frequency is 12 MHz */
 868   2              cyPmBackup.imoActFreq12Mhz = CY_PM_ENABLED;
 869   2          }
 870   1          else
 871   1          {
 872   2              /* IMO frequency is not 12 MHz */
 873   2              cyPmBackup.imoActFreq12Mhz = CY_PM_DISABLED;
 874   2      
 875   2              /* Save IMO frequency */
 876   2              cyPmBackup.imoActFreq = CY_PM_FASTCLK_IMO_CR_REG & CY_PM_FASTCLK_IMO_CR_FREQ_MASK;
 877   2      
 878   2              /* Set IMO frequency to 12 MHz */
 879   2              CY_PM_FASTCLK_IMO_CR_REG &= ~CY_PM_FASTCLK_IMO_CR_FREQ_MASK;
 880   2          }
 881   1      
 882   1          /* Switch to the Sleep mode */
 883   1          CY_PM_MODE_CSR_REG = ((CY_PM_MODE_CSR_REG & ~CY_PM_MODE_CSR_MASK) | CY_PM_MODE_CSR_SLEEP);
 884   1      
 885   1          /* Recommended readback. */
 886   1          (void) CY_PM_MODE_CSR_REG;
 887   1      
 888   1          /* Two recommended NOPs to get into the mode. */
 889   1          CY_NOP;
 890   1          CY_NOP;
 891   1      
 892   1          /* Execute WFI instruction (for PSoC5 devices only) */
 893   1          CY_PM_WFI;
 894   1      
 895   1          /* Point of return from Sleep Mode */
 896   1      
 897   1          /* Restore last moment IMO frequency change */
 898   1          if(CY_PM_ENABLED != cyPmBackup.imoActFreq12Mhz)
 899   1          {
 900   2              CY_PM_FASTCLK_IMO_CR_REG  = (CY_PM_FASTCLK_IMO_CR_REG & ~CY_PM_FASTCLK_IMO_CR_FREQ_MASK) |
 901   2                                          cyPmBackup.imoActFreq;
 902   2          }
 903   1      
 904   1      
 905   1          /* Restore hardware configuration */
 906   1          CyPmSlpRestore();
 907   1      
 908   1      
 909   1          /* Device is PSoC 3 and the revision is ES3 or later. */
 910   1          #if(CY_PSOC3 || CY_PSOC5LP)
 911   1      
 912   1              /* Restore current wake up configuration */
 913   1              CY_PM_WAKEUP_CFG0_REG = cyPmBackup.wakeupCfg0;
 914   1              CY_PM_WAKEUP_CFG1_REG = cyPmBackup.wakeupCfg1;
 915   1              CY_PM_WAKEUP_CFG2_REG = cyPmBackup.wakeupCfg2;
 916   1      
 917   1          #endif /* (CY_PSOC3 || CY_PSOC5LP) */
 918   1      
 919   1          /* Restore global interrupt enable state */
C51 COMPILER V9.03   CYPM                                                                  04/04/2015 14:09:13 PAGE 16  

 920   1          CyExitCriticalSection(interruptState);
 921   1      }
 922          
 923          
 924          /*******************************************************************************
 925          * Function Name: CyPmHibernate
 926          ********************************************************************************
 927          *
 928          * Summary:
 929          *  Puts the part into the Hibernate state.
 930          *
 931          *  PSoC3:
 932          *  Before switching to Hibernate, the current status of the PICU wakeup source
 933          *  bit is saved and then set. This configures the device to wake up from the
 934          *  PICU. Make sure you have at least one pin configured to generate a PICU
 935          *  interrupt. For pin Px.y, the register "PICU_INTTYPE_PICUx_INTTYPEy" controls
 936          *  the PICU behavior. In the TRM, this register is "PICU[0..15]_INTTYPE[0..7]."
 937          *  In the Pins component datasheet, this register is referred to as the IRQ
 938          *  option. Once the wakeup occurs, the PICU wakeup source bit is restored and
 939          *  the PSoC returns to the Active state.
 940          *
 941          *  PSoC 5:
 942          *  The only method supported for waking up from the Hibernate state is a
 943          *  hardware reset of the device.  The PICU wakeup source cannot be used
 944          *  reliably, so the PICU interrupt sources are automatically disabled by this
 945          *  function before putting the device into the Hibernate state.
 946          *
 947          * Parameters:
 948          *  None
 949          *
 950          * Return:
 951          *  None
 952          *
 953          * Reentrant:
 954          *  No
 955          *
 956          * Side Effects:
 957          *  Applications must wait 20 us before re-entering hibernate or sleep after
 958          *  waking up from hibernate. The 20 us allows the sleep regulator time to
 959          *  stabilize before the next hibernate / sleep event occurs. The 20 us
 960          *  requirement begins when the device wakes up. There is no hardware check that
 961          *  this requirement is met. The specified delay should be done on ISR entry.
 962          *
 963          *  After wakeup PICU interrupt occurs, the Pin_ClearInterrupt() (where Pin is
 964          *  instance name of the Pins component) function must be called to clear the
 965          *  latched pin events to allow proper Hibernate mode entry andd to enable
 966          *  detection of future events.
 967          *
 968          *  The 1 kHz ILO clock is expected to be enabled for PSoC3 ES3 silicon to
 969          *  measure Hibernate/Sleep regulator settling time after a reset. The holdoff
 970          *  delay is measured using rising edges of the 1 kHz ILO.
 971          *
 972          *******************************************************************************/
 973          void CyPmHibernate(void) 
 974          {
 975   1          uint8 interruptState;
 976   1      
 977   1          /* Save current global interrupt enable and disable it */
 978   1          interruptState = CyEnterCriticalSection();
 979   1      
 980   1          /* Device is PSoC 3 and the revision is ES3 or later */
 981   1          #if(CY_PSOC3)
C51 COMPILER V9.03   CYPM                                                                  04/04/2015 14:09:13 PAGE 17  

 982   1      
 983   1              /***********************************************************************
 984   1              * The Hibernate/Sleep regulator has a settling time after a reset.
 985   1              * During this time, the system ignores requests to enter Sleep and
 986   1              * Hibernate modes. The holdoff delay is measured using rising edges of
 987   1              * the 1 kHz ILO.
 988   1              ***********************************************************************/
 989   1              if(0u == (CY_PM_MODE_CSR_REG & CY_PM_MODE_CSR_PWRUP_PULSE_Q))
 990   1              {
 991   2                  /* Disable hold off - no action on restore */
 992   2                  CY_PM_PWRSYS_SLP_TR_REG &= CY_PM_PWRSYS_SLP_TR_HIBSLP_HOLDOFF_MASK;
 993   2              }
 994   1              else
 995   1              {
 996   2                  /* Abort, device is not ready for low power mode entry */
 997   2                  return;
 998   2              }
 999   1      
1000   1          #endif /* (CY_PSOC3) */
1001   1      
1002   1          /* Prepare device for proper Hibernate mode entry */
1003   1          CyPmHibSaveSet();
1004   1      
1005   1          /* Device is PSoC 3 and the revision is ES3 or later. */
1006   1          #if(CY_PSOC3 || CY_PSOC5LP)
1007   1      
1008   1              /* Save and enable only wakeup on PICU */
1009   1              cyPmBackup.wakeupCfg0 = CY_PM_WAKEUP_CFG0_REG;
1010   1              CY_PM_WAKEUP_CFG0_REG = CY_PM_WAKEUP_PICU;
1011   1      
1012   1              cyPmBackup.wakeupCfg1 = CY_PM_WAKEUP_CFG1_REG;
1013   1              CY_PM_WAKEUP_CFG1_REG = 0x00u;
1014   1      
1015   1              cyPmBackup.wakeupCfg2 = CY_PM_WAKEUP_CFG2_REG;
1016   1              CY_PM_WAKEUP_CFG2_REG = 0x00u;
1017   1      
1018   1          #endif  /* (CY_PSOC3 || CY_PSOC5LP) */
1019   1      
1020   1      
1021   1          /* Last moment IMO frequency change */
1022   1          if(0u == (CY_PM_FASTCLK_IMO_CR_REG & CY_PM_FASTCLK_IMO_CR_FREQ_MASK))
1023   1          {
1024   2              /* IMO frequency is 12 MHz */
1025   2              cyPmBackup.imoActFreq12Mhz = CY_PM_ENABLED;
1026   2          }
1027   1          else
1028   1          {
1029   2              /* IMO frequency is not 12 MHz */
1030   2              cyPmBackup.imoActFreq12Mhz = CY_PM_DISABLED;
1031   2      
1032   2              /* Save IMO frequency */
1033   2              cyPmBackup.imoActFreq = CY_PM_FASTCLK_IMO_CR_REG & CY_PM_FASTCLK_IMO_CR_FREQ_MASK;
1034   2      
1035   2              /* Set IMO frequency to 12 MHz */
1036   2              CY_PM_FASTCLK_IMO_CR_REG &= ~CY_PM_FASTCLK_IMO_CR_FREQ_MASK;
1037   2          }
1038   1      
1039   1      
1040   1          /* Switch to Hibernate Mode */
1041   1          CY_PM_MODE_CSR_REG = ((CY_PM_MODE_CSR_REG & ~CY_PM_MODE_CSR_MASK) | CY_PM_MODE_CSR_HIBERNATE);
1042   1      
1043   1          /* Recommended readback. */
C51 COMPILER V9.03   CYPM                                                                  04/04/2015 14:09:13 PAGE 18  

1044   1          (void) CY_PM_MODE_CSR_REG;
1045   1      
1046   1          /* Two recommended NOPs to get into the mode. */
1047   1          CY_NOP;
1048   1          CY_NOP;
1049   1      
1050   1          /* Execute WFI instruction (for PSoC5 devices only) */
1051   1          CY_PM_WFI;
1052   1      
1053   1          /* Point of return from Hibernate mode */
1054   1      
1055   1      
1056   1          /* Restore last moment IMO frequency change */
1057   1          if(CY_PM_ENABLED != cyPmBackup.imoActFreq12Mhz)
1058   1          {
1059   2              CY_PM_FASTCLK_IMO_CR_REG  = (CY_PM_FASTCLK_IMO_CR_REG & ~CY_PM_FASTCLK_IMO_CR_FREQ_MASK) |
1060   2                                          cyPmBackup.imoActFreq;
1061   2          }
1062   1      
1063   1      
1064   1          /* Restore device for proper Hibernate mode exit*/
1065   1          CyPmHibRestore();
1066   1      
1067   1          /* Device is PSoC 3 and the revision is ES3 or later. */
1068   1          #if(CY_PSOC3 || CY_PSOC5LP)
1069   1      
1070   1              /* Restore current wake up configuration */
1071   1              CY_PM_WAKEUP_CFG0_REG = cyPmBackup.wakeupCfg0;
1072   1              CY_PM_WAKEUP_CFG1_REG = cyPmBackup.wakeupCfg1;
1073   1              CY_PM_WAKEUP_CFG2_REG = cyPmBackup.wakeupCfg2;
1074   1      
1075   1          #endif /* (CY_PSOC3 || CY_PSOC5LP) */
1076   1      
1077   1          /* Restore global interrupt enable state */
1078   1          CyExitCriticalSection(interruptState);
1079   1      }
1080          
1081          
1082          /*******************************************************************************
1083          * Function Name: CyPmReadStatus
1084          ********************************************************************************
1085          *
1086          * Summary:
1087          *  Manages the Power Manager Interrupt Status Register.  This register has the
1088          *  interrupt status for the one pulse per second, central timewheel and fast
1089          *  timewheel timers.  This hardware register clears on read.  To allow for only
1090          *  clearing the bits of interest and preserving the other bits, this function
1091          *  uses a shadow register that retains the state.  This function reads the
1092          *  status register and ORs that value with the shadow register.  That is the
1093          *  value that is returned.  Then the bits in the mask that are set are cleared
1094          *  from this value and written back to the shadow register.
1095          *
1096          *  Note You must call this function within 1 ms (1 clock cycle of the ILO)
1097          *  after a CTW event has occurred.
1098          *
1099          * Parameters:
1100          *  mask: Bits in the shadow register to clear.
1101          *
1102          *       Define                      Source
1103          *  CY_PM_FTW_INT                Fast Timewheel
1104          *  CY_PM_CTW_INT                Central Timewheel
1105          *  CY_PM_ONEPPS_INT             One Pulse Per Second
C51 COMPILER V9.03   CYPM                                                                  04/04/2015 14:09:13 PAGE 19  

1106          *
1107          * Return:
1108          *  Status.  Same bits values as the mask parameter.
1109          *
1110          *******************************************************************************/
1111          uint8 CyPmReadStatus(uint8 mask) 
1112          {
1113   1          static uint8 interruptStatus;
1114   1          uint8 interruptState;
1115   1          uint8 tmpStatus;
1116   1      
1117   1          /* Enter critical section */
1118   1          interruptState = CyEnterCriticalSection();
1119   1      
1120   1          /* Save value of the register, copy it and clear desired bit */
1121   1          interruptStatus |= CY_PM_INT_SR_REG;
1122   1          tmpStatus = interruptStatus;
1123   1          interruptStatus &= ~mask;
1124   1      
1125   1          /* Exit critical section */
1126   1          CyExitCriticalSection(interruptState);
1127   1      
1128   1          return(tmpStatus);
1129   1      }
1130          
1131          
1132          /*******************************************************************************
1133          * Function Name: CyPmHibSaveSet
1134          ********************************************************************************
1135          *
1136          * Summary:
1137          *  Prepare device for proper Hibernate low power mode entry:
1138          *  - Disables I2C backup regulator
1139          *  - Saves ILO power down mode state and enable it (PSoC3 ES3)
1140          *  - Saves enable state of 1 kHz and 100 kHz ILO and disable them (PSoC3 ES3)
1141          *  - Disables sleep regulator and shorts vccd to vpwrsleep (PSoC3 ES3)
1142          *  - CyPmHibSlpSaveSet() function is called
1143          *
1144          * Parameters:
1145          *  None
1146          *
1147          * Return:
1148          *  None
1149          *
1150          * Reentrant:
1151          *  No
1152          *
1153          *******************************************************************************/
1154          static void CyPmHibSaveSet(void) 
1155          {
1156   1          /* I2C backup reg must be off when the sleep regulator is unavailable */
1157   1          if(0u != (CY_PM_PWRSYS_CR1_REG & CY_PM_PWRSYS_CR1_I2CREG_BACKUP))
1158   1          {
1159   2              /***********************************************************************
1160   2              * If I2C backup regulator is enabled, all the fixed-function registers
1161   2              * store their values while device is in low power mode, otherwise their
1162   2              * configuration is lost. The I2C API makes a decision to restore or not
1163   2              * to restore I2C registers based on this. If this regulator will be
1164   2              * disabled and then enabled, I2C API will suppose that I2C block
1165   2              * registers preserved their values, while this is not true. So, the
1166   2              * backup regulator is disabled. And its value is restored only for
1167   2              * and PSoC5 devices. The I2C sleep APIs is responsible for restoration.
C51 COMPILER V9.03   CYPM                                                                  04/04/2015 14:09:13 PAGE 20  

1168   2              ***********************************************************************/
1169   2      
1170   2              #if(CY_PSOC5A)
              
                          cyPmBackup.i2cRegBackup = CY_PM_ENABLED;
              
                      #endif /* (CY_PSOC5A) */
1175   2      
1176   2              /* Disable I2C backup register */
1177   2              CY_PM_PWRSYS_CR1_REG &= ~CY_PM_PWRSYS_CR1_I2CREG_BACKUP;
1178   2          }
1179   1          else
1180   1          {
1181   2              #if(CY_PSOC5A)
              
                          /* Save disabled state of the I2C backup regulator */
                          cyPmBackup.i2cRegBackup = CY_PM_DISABLED;
              
                      #endif /* (CY_PSOC5A) */
1187   2          }
1188   1      
1189   1          /* Device is PSoC 3 and the revision is ES3 or later */
1190   1          #if(CY_PSOC3)
1191   1      
1192   1              /* Save current ILO power mode and ensure low power mode */
1193   1              cyPmBackup.iloPowerMode = CyILO_SetPowerMode(CY_PM_POWERDOWN_MODE);
1194   1      
1195   1              /* Save current 1kHz ILO enable state. Disabled automatically. */
1196   1              cyPmBackup.ilo1kEnable = (0u == (CY_PM_SLOWCLK_ILO_CR0_REG & CY_PM_ILO_CR0_EN_1K)) ?
1197   1                                          CY_PM_DISABLED : CY_PM_ENABLED;
1198   1      
1199   1              /* Save current 100kHz ILO enable state. Disabled automatically. */
1200   1              cyPmBackup.ilo100kEnable = (0u == (CY_PM_SLOWCLK_ILO_CR0_REG & CY_PM_ILO_CR0_EN_100K)) ?
1201   1                                          CY_PM_DISABLED : CY_PM_ENABLED;
1202   1      
1203   1      
1204   1              if(0u == (CY_PM_PWRSYS_SLP_TR_REG & CY_PM_PWRSYS_SLP_TR_BYPASS))
1205   1              {
1206   2                  /* Save current bypass state */
1207   2                  cyPmBackup.slpTrBypass = CY_PM_DISABLED;
1208   2      
1209   2                  /* Disables the sleep regulator and shorts vccd to vpwrsleep */
1210   2                  CY_PM_PWRSYS_SLP_TR_REG |= CY_PM_PWRSYS_SLP_TR_BYPASS;
1211   2              }
1212   1              else
1213   1              {
1214   2                  /* Save current bypass state */
1215   2                  cyPmBackup.slpTrBypass = CY_PM_ENABLED;
1216   2              }
1217   1      
1218   1              /* LPCOMPs are always enabled (even when BOTH ext_vccd=1 and ext_vcca=1)*/
1219   1      
1220   1          #endif /* (CY_PSOC3) */
1221   1      
1222   1      
1223   1          /* Device is PSoC 5 and the revision is ES1 or earlier. */
1224   1          #if(CY_PSOC5A)
              
                      /* Disable all the PICU interrupts */
                      CyPmDisablePicuInterrupts();
              
                  #endif  /* (CY_PSOC5A) */
C51 COMPILER V9.03   CYPM                                                                  04/04/2015 14:09:13 PAGE 21  

1230   1      
1231   1      
1232   1          /***************************************************************************
1233   1          * LVI/HVI must be disabled in Hibernate
1234   1          ***************************************************************************/
1235   1      
1236   1          /* Save LVI/HVI configuration */
1237   1          cyPmBackup.lviaLvidHvi = (CY_PM_RESET_CR1_REG & CY_PM_RESET_CR1_HVI_LVI_EN_MASK);
1238   1      
1239   1          /* Disable LVI/HVI */
1240   1          CY_PM_RESET_CR1_REG &= ~CY_PM_RESET_CR1_HVI_LVI_EN_MASK;
1241   1      
1242   1      
1243   1          /* Make the same preparations for Hibernate and Sleep modes */
1244   1          CyPmHibSlpSaveSet();
1245   1      }
1246          
1247          
1248          /*******************************************************************************
1249          * Function Name: CyPmHibRestore
1250          ********************************************************************************
1251          *
1252          * Summary:
1253          *  Restore device for proper Hibernate mode exit:
1254          *  - Restore LVI/HVI configuration
1255          *  - CyPmHibSlpSaveRestore() function is called
1256          *  - Restores state of I2C backup regulator (PSoC5 ES1)
1257          *  - Restores ILO power down mode state and enable it (PSoC3 ES3)
1258          *  - Restores enable state of 1 kHz and 100 kHz ILO and disable them (PSoC3 ES3)
1259          *  - Restores sleep regulator settings (PSoC3 ES3)
1260          *
1261          * Parameters:
1262          *  None
1263          *
1264          * Return:
1265          *  None
1266          *
1267          *******************************************************************************/
1268          static void CyPmHibRestore(void) 
1269          {
1270   1      
1271   1          /* Restore LVI/HVI configuration */
1272   1          CY_PM_RESET_CR1_REG |= cyPmBackup.lviaLvidHvi;
1273   1      
1274   1          /* Restore the same configuration for Hibernate and Sleep modes */
1275   1          CyPmHibSlpRestore();
1276   1      
1277   1          #if(CY_PSOC5A)
              
                      /* Restore I2C backup regulator configuration */
                      if(CY_PM_ENABLED == cyPmBackup.i2cRegBackup)
                      {
                          /* Enable I2C backup regulator state */
                          CY_PM_PWRSYS_CR1_REG |= CY_PM_PWRSYS_CR1_I2CREG_BACKUP;
                      }
              
                  #endif /* (CY_PSOC5A) */
1287   1      
1288   1          /* Device is PSoC 3 and the revision is ES3 or later */
1289   1          #if(CY_PSOC3)
1290   1      
1291   1              /* Restore 1kHz ILO enable state */
C51 COMPILER V9.03   CYPM                                                                  04/04/2015 14:09:13 PAGE 22  

1292   1              if(CY_PM_ENABLED == cyPmBackup.ilo1kEnable)
1293   1              {
1294   2                  /* Enable 1kHz ILO */
1295   2                  CyILO_Start1K();
1296   2              }
1297   1      
1298   1              /* Restore 100kHz ILO enable state */
1299   1              if(CY_PM_ENABLED == cyPmBackup.ilo100kEnable)
1300   1              {
1301   2                  /* Enable 100kHz ILO */
1302   2                  CyILO_Start100K();
1303   2              }
1304   1      
1305   1              /* Restore ILO power mode */
1306   1              (void) CyILO_SetPowerMode(cyPmBackup.iloPowerMode);
1307   1      
1308   1      
1309   1              if(CY_PM_DISABLED == cyPmBackup.slpTrBypass)
1310   1              {
1311   2                  /* Enable the sleep regulator */
1312   2                  CY_PM_PWRSYS_SLP_TR_REG &= ~CY_PM_PWRSYS_SLP_TR_BYPASS;
1313   2              }
1314   1      
1315   1          #endif /* (CY_PSOC3) */
1316   1      }
1317          
1318          
1319          /*******************************************************************************
1320          * Function Name: CyPmCtwSetInterval
1321          ********************************************************************************
1322          *
1323          * Summary:
1324          *  Performs CTW configuration:
1325          *  - Disables CTW interrupt
1326          *  - Enables 1 kHz ILO
1327          *  - Sets new CTW interval
1328          *
1329          * Parameters:
1330          *  ctwInterval: the CTW interval to be set.
1331          *
1332          * Return:
1333          *  None
1334          *
1335          * Side Effects:
1336          *  Enables ILO 1 KHz clock and leaves it enabled.
1337          *
1338          *******************************************************************************/
1339          void CyPmCtwSetInterval(uint8 ctwInterval) 
1340          {
1341   1          /* Disable CTW interrupt enable */
1342   1          CY_PM_TW_CFG2_REG &= ~CY_PM_CTW_IE;
1343   1      
1344   1          /* Enable 1kHz ILO (required for CTW operation) */
1345   1          CyILO_Start1K();
1346   1      
1347   1          /* Interval could be set only while CTW is disabled */
1348   1          if(0u != (CY_PM_TW_CFG2_REG & CY_PM_CTW_EN))
1349   1          {
1350   2              /* Set CTW interval if needed */
1351   2              if(CY_PM_TW_CFG1_REG != ctwInterval)
1352   2              {
1353   3                  /* Disable the CTW, set new CTW interval and enable it again */
C51 COMPILER V9.03   CYPM                                                                  04/04/2015 14:09:13 PAGE 23  

1354   3                  CY_PM_TW_CFG2_REG &= ~CY_PM_CTW_EN;
1355   3                  CY_PM_TW_CFG1_REG = ctwInterval;
1356   3                  CY_PM_TW_CFG2_REG |= CY_PM_CTW_EN;
1357   3              }   /* Required interval is already set */
1358   2          }
1359   1          else
1360   1          {
1361   2              /* Set CTW interval if needed */
1362   2              if(CY_PM_TW_CFG1_REG != ctwInterval)
1363   2              {
1364   3                  /* Set the new CTW interval. Could be changed if CTW is disabled */
1365   3                  CY_PM_TW_CFG1_REG = ctwInterval;
1366   3              }   /* Required interval is already set */
1367   2      
1368   2              /* Enable the CTW */
1369   2              CY_PM_TW_CFG2_REG |= CY_PM_CTW_EN;
1370   2          }
1371   1      }
1372          
1373          
1374          /*******************************************************************************
1375          * Function Name: CyPmOppsSet
1376          ********************************************************************************
1377          *
1378          * Summary:
1379          *  Performs 1PPS configuration:
1380          *  - Starts 32 KHz XTAL
1381          *  - Disables 1PPS interupts
1382          *  - Enables 1PPS
1383          *
1384          * Parameters:
1385          *  None
1386          *
1387          * Return:
1388          *  None
1389          *
1390          *******************************************************************************/
1391          void CyPmOppsSet(void) 
1392          {
1393   1          /* Enable 32kHz XTAL if needed */
1394   1          if(0u == (CY_PM_SLOWCLK_X32_CR_REG & CY_PM_X32_CR_X32EN))
1395   1          {
1396   2              /* Enable 32kHz XTAL */
1397   2              CyXTAL_32KHZ_Start();
1398   2          }
1399   1      
1400   1          /* Disable 1PPS interrupt enable */
1401   1          CY_PM_TW_CFG2_REG &= ~CY_PM_1PPS_IE;
1402   1      
1403   1          /* Enable 1PPS operation */
1404   1          CY_PM_TW_CFG2_REG |= CY_PM_1PPS_EN;
1405   1      }
1406          
1407          
1408          /*******************************************************************************
1409          * Function Name: CyPmFtwSetInterval
1410          ********************************************************************************
1411          *
1412          * Summary:
1413          *  Performs FTW configuration:
1414          *  - Disables FTW interrupt
1415          *  - Enables 100 kHz ILO
C51 COMPILER V9.03   CYPM                                                                  04/04/2015 14:09:13 PAGE 24  

1416          *  - Sets new FTW interval.
1417          *
1418          * Parameters:
1419          *  ftwInterval - FTW counter interval.
1420          *
1421          * Return:
1422          *  None
1423          *
1424          * Side Effects:
1425          *  Enables ILO 100 KHz clock and leaves it enabled.
1426          *
1427          *******************************************************************************/
1428          void CyPmFtwSetInterval(uint8 ftwInterval) 
1429          {
1430   1          /* Disable FTW interrupt enable */
1431   1          CY_PM_TW_CFG2_REG &= ~CY_PM_FTW_IE;
1432   1      
1433   1          /* Enable 100kHz ILO */
1434   1          CyILO_Start100K();
1435   1      
1436   1          /* Iterval could be set only while FTW is disabled */
1437   1          if(0u != (CY_PM_TW_CFG2_REG & CY_PM_FTW_EN))
1438   1          {
1439   2              /* Disable FTW, set new FTW interval if needed and enable it again */
1440   2              if(CY_PM_TW_CFG0_REG != ftwInterval)
1441   2              {
1442   3                  /* Disable the CTW, set new CTW interval and enable it again */
1443   3                  CY_PM_TW_CFG2_REG &= ~CY_PM_FTW_EN;
1444   3                  CY_PM_TW_CFG0_REG = ftwInterval;
1445   3                  CY_PM_TW_CFG2_REG |= CY_PM_FTW_EN;
1446   3              }   /* Required interval is already set */
1447   2          }
1448   1          else
1449   1          {
1450   2              /* Set new FTW counter interval if needed. FTW is disabled. */
1451   2              if(CY_PM_TW_CFG0_REG != ftwInterval)
1452   2              {
1453   3                  /* Set the new CTW interval. Could be changed if CTW is disabled */
1454   3                  CY_PM_TW_CFG0_REG = ftwInterval;
1455   3              }   /* Required interval is already set */
1456   2      
1457   2              /* Enable the FTW */
1458   2              CY_PM_TW_CFG2_REG |= CY_PM_FTW_EN;
1459   2          }
1460   1      }
1461          
1462          
1463          #if(CY_PSOC5A)
              
                  /*******************************************************************************
                  * Function Name: CyPmSavePicuInterrupts
                  ********************************************************************************
                  *
                  * Summary:
                  *  Saves PICU interrupt type registers to the backup structure.
                  *
                  * Parameters:
                  *  None
                  *
                  * Return:
                  *  None
                  *
C51 COMPILER V9.03   CYPM                                                                  04/04/2015 14:09:13 PAGE 25  

                  * Reentrant:
                  *  No
                  *
                  *******************************************************************************/
                  static void CyPmSavePicuInterrupts(void) 
                  {
                      /* Save all the PICU interrupt type */
                      memcpy((void *) &cyPmBackup.picuIntType[0u],
                             (void *) CY_PM_PICU_0_6_INT_BASE,
                             CY_PM_PICU_0_6_INT_SIZE);
              
                      memcpy((void *) &cyPmBackup.picuIntType[CY_PM_PICU_0_6_INT_SIZE],
                             (void *) CY_PM_PICU_12_INT_BASE,
                             CY_PM_PICU_12_INT_SIZE);
              
                      memcpy((void *) &cyPmBackup.picuIntType[CY_PM_PICU_0_6_INT_SIZE + CY_PM_PICU_12_INT_SIZE],
                             (void *) CY_PM_PICU_15_INT_BASE,
                             CY_PM_PICU_15_INT_SIZE);
              
                  }
              
              
                  /*******************************************************************************
                  * Function Name: CyPmDisablePicuInterrupts
                  ********************************************************************************
                  *
                  * Summary:
                  *  Disableds PICU interrupts.
                  *
                  * Parameters:
                  *  None
                  *
                  * Return:
                  *  None
                  *
                  *******************************************************************************/
                  static void CyPmDisablePicuInterrupts(void) 
                  {
                      /* Disable all the PICU interrupts */
                      memset((void *) CY_PM_PICU_0_6_INT_BASE, 0, CY_PM_PICU_0_6_INT_SIZE);
                      memset((void *) CY_PM_PICU_12_INT_BASE,  0, CY_PM_PICU_12_INT_SIZE );
                      memset((void *) CY_PM_PICU_15_INT_BASE,  0, CY_PM_PICU_15_INT_SIZE );
                  }
              
              
                  /*******************************************************************************
                  * Function Name: CyPmRestorePicuInterrupts
                  ********************************************************************************
                  *
                  * Summary:
                  *  Restores PICU interrupt type registers from the backup structure.
                  *
                  * Parameters:
                  *  None
                  *
                  * Return:
                  *  None
                  *
                  *******************************************************************************/
                  static void CyPmRestorePicuInterrupts(void) 
                  {
                      /* Save all the PICU interrupt type */
C51 COMPILER V9.03   CYPM                                                                  04/04/2015 14:09:13 PAGE 26  

                      memcpy((void *) CY_PM_PICU_0_6_INT_BASE,
                             (void *) &cyPmBackup.picuIntType[0u],
                             CY_PM_PICU_0_6_INT_SIZE);
              
                      memcpy((void *) CY_PM_PICU_12_INT_BASE,
                             (void *) &cyPmBackup.picuIntType[CY_PM_PICU_0_6_INT_SIZE],
                             CY_PM_PICU_12_INT_SIZE);
              
                      memcpy((void *) CY_PM_PICU_15_INT_BASE,
                             (void *) &cyPmBackup.picuIntType[CY_PM_PICU_0_6_INT_SIZE + CY_PM_PICU_12_INT_SIZE],
                             CY_PM_PICU_15_INT_SIZE);
              
                  }
              
              #endif  /* (CY_PSOC5A) */
1555          
1556          
1557          /*******************************************************************************
1558          * Function Name: CyPmSlpSaveSet
1559          ********************************************************************************
1560          *
1561          * Summary:
1562          *  Prepare device for proper Sleep low power mode entry:
1563          *  - Prepare CTW for Sleep mode entry (PSoC5)
1564          *    * Save timewheels configuration
1565          *    * Disable FTW and 1PPS (enable and interrupt)
1566          *    * Reset CTW
1567          *    * Save and disable PICU interrupts (PSoC5)
1568          *    * Save and disable PRES-A and PRES-D (PSoC5)
1569          *  - Save and disable LVI/HVI configuration (PSoC5)
1570          *  - Save and set to max buzz interval (PSoC5)
1571          *  - If LVI/HVI is enabled than hardware buzz in required (PSoC3):
1572          *    * Prepare wake trim registers
1573          *    * Disable LDO-A in proper way
1574          *  - If LVI/HVI is disabled than hardware buzz in not required (PSoC3):
1575          *    * Disabled hardware buzz
1576          *  - CyPmHibSlpSaveSet() function is called
1577          *
1578          * Parameters:
1579          *  None
1580          *
1581          * Return:
1582          *  None
1583          *
1584          * Reentrant:
1585          *  No
1586          *
1587          *******************************************************************************/
1588          static void CyPmSlpSaveSet(void) 
1589          {
1590   1          #if(CY_PSOC5A)
              
                      /* Preserve the Timewheel Configuration Register 2 */
                      cyPmBackup.pmTwCfg2 = CY_PM_TW_CFG2_REG;
              
                      /*  Clear the enable and interrupt enables for the FTW and ONEPPS */
                      CY_PM_TW_CFG2_REG &= ~(CY_PM_FTW_IE | CY_PM_FTW_EN | CY_PM_1PPS_EN | CY_PM_1PPS_IE);
              
                      /* Reset free-running CTW counter to 0 and held it there */
                      CY_PM_WDT_CFG_REG |= CY_PM_WDT_CFG_CTW_RESET;
              
                      /* Exit CTW counter reset state */
C51 COMPILER V9.03   CYPM                                                                  04/04/2015 14:09:13 PAGE 27  

                      CY_PM_WDT_CFG_REG &= ~CY_PM_WDT_CFG_CTW_RESET;
              
                      /* Save and disable PICU interrupts  */
                      CyPmSavePicuInterrupts();
                      CyPmDisablePicuInterrupts();
              
                      /* Save and disable PRES-A and PRES-D */
                      cyPmBackup.pres1 = CY_PM_RESET_CR1_REG & CY_PM_RESET_CR1_DIS_PRES1;
                      cyPmBackup.pres2 = CY_PM_RESET_CR3_REG & CY_PM_RESET_CR3_DIS_PRES2;
                      CY_PM_RESET_CR1_REG &= ~CY_PM_RESET_CR1_DIS_PRES1;
                      CY_PM_RESET_CR3_REG &= ~CY_PM_RESET_CR3_DIS_PRES2;
              
                  #endif /* (CY_PSOC5A) */
1615   1      
1616   1      
1617   1          #if(CY_PSOC5A)
              
                      /***************************************************************************
                      * LVI/HVI must be disabled as it doesn't work during buzzing.
                      *
                      * Using hardware buzz in conjunction with other device wakeup sources
                      * can cause the device to lockup, halting further code execution. The
                      * hardware buzz provides power supply supervising capability in sleep.
                      * It is enabled by default and there is no way to disable it. So the buzz
                      * interval is set to maximum (512 ms). The CTW must be configured to wake up
                      * at a rate less than hardware buzz interval.
                      ***************************************************************************/
              
                      /* Save LVI/HVI configuration */
                      cyPmBackup.lviaLvidHvi = (CY_PM_RESET_CR1_REG & CY_PM_RESET_CR1_HVI_LVI_EN_MASK);
              
                      /* Disable LVI/HVI */
                      CY_PM_RESET_CR1_REG &= ~CY_PM_RESET_CR1_HVI_LVI_EN_MASK;
              
                      /* Save buzz trim value */
                      cyPmBackup.buzzSleepTrim = CY_PM_PWRSYS_BUZZ_TR_REG & ~CY_PM_PWRSYS_BUZZ_TR_MASK;
              
                      /* Set buzz interval to maximum */
                      CY_PM_PWRSYS_BUZZ_TR_REG = CY_PM_PWRSYS_BUZZ_TR_512_TICKS |
                                                (CY_PM_PWRSYS_BUZZ_TR_REG & CY_PM_PWRSYS_BUZZ_TR_MASK);
              
                  #endif  /* (CY_PSOC5A) */
1644   1      
1645   1      
1646   1          #if(CY_PSOC3)
1647   1      
1648   1              /***************************************************************************
1649   1              * If LVI/HVI is enabled than hardware buzz in required:
1650   1              *  - Prepare wake trim registers
1651   1              *  - Disable LDO-A in proper way
1652   1              *
1653   1              * If LVI/HVI is disabled than hardware buzz in not required:
1654   1              *  - Disabled hardware buzz
1655   1              ***************************************************************************/
1656   1      
1657   1              cyPmBackup.wakeTr2 = CY_PM_PWRSYS_WAKE_TR2_REG;
1658   1      
1659   1              /* Reconfigure power mode wakeup trim registers */
1660   1              if(0u != (CY_PM_RESET_CR1_REG & (CY_PM_RESET_CR1_HVIA_EN |
1661   1                        CY_PM_RESET_CR1_LVIA_EN | CY_PM_RESET_CR1_LVID_EN)))
1662   1              {
1663   2                  /* HVI/LVI is enabled - hardware buzz is required */
C51 COMPILER V9.03   CYPM                                                                  04/04/2015 14:09:13 PAGE 28  

1664   2                  if(CYDEV_CHIP_REV_ACTUAL < 5u)
1665   2                  {
1666   3                      /* Update entire register */
1667   3                      CY_PM_PWRSYS_WAKE_TR2_REG = 0x3Bu;
1668   3                      
1669   3                      /* Prepares for disabling LDO-A by moving bandgap reference to VCCD */
1670   3                      CY_PM_PWRSYS_CR1_REG = 0x01u;
1671   3      
1672   3                      /* Disables LDO-A */
1673   3                      CY_PM_PWRSYS_CR1_REG |= 0x02u;                
1674   3                  }
1675   2                  else
1676   2                  {
1677   3                      /* For later revisions, just enable buzz */
1678   3                      CY_PM_PWRSYS_WAKE_TR2_REG |= CY_PM_PWRSYS_WAKE_TR2_EN_BUZZ;
1679   3                  }
1680   2              }
1681   1              else
1682   1              {
1683   2                  /* HVI/LVI is disabled - hardware buzz is not required */
1684   2                  if(CYDEV_CHIP_REV_ACTUAL < 5u)
1685   2                  {
1686   3                      /* Update entire register */
1687   3                      CY_PM_PWRSYS_WAKE_TR2_REG = 0x3Au;
1688   3                  }
1689   2              }
1690   1      
1691   1          #endif  /* (CY_PSOC3) */
1692   1      
1693   1          /* Apply configuration that are same for Sleep and Hibernate */
1694   1          CyPmHibSlpSaveSet();
1695   1      }
1696          
1697          
1698          /*******************************************************************************
1699          * Function Name: CyPmSlpRestore
1700          ********************************************************************************
1701          *
1702          * Summary:
1703          *  Restore device for proper Sleep mode exit:
1704          *  - Restore timewheel configuration (PSoC5)
1705          *  - Restore PRES-A and PRES-D (PSoC5)
1706          *  - Restore PICU interrupts (PSoC5)
1707          *  - Restore LVI/HVI configuration (PSoC5)
1708          *  - Restore buzz sleep trim value (PSoC5)
1709          *  - Call to CyPmHibSlpSaveRestore()
1710          *
1711          * Parameters:
1712          *  None
1713          *
1714          * Return:
1715          *  None
1716          *
1717          *******************************************************************************/
1718          static void CyPmSlpRestore(void) 
1719          {
1720   1          #if(CY_PSOC5A)
              
                      /* Restore the Timewheel Configuration Register 2 */
                      CY_PM_TW_CFG2_REG = cyPmBackup.pmTwCfg2;
              
                      /* Restore PICU interrupts */
C51 COMPILER V9.03   CYPM                                                                  04/04/2015 14:09:13 PAGE 29  

                      CyPmRestorePicuInterrupts();
              
                      /* Restore PRES-A and PRES-D (assumed they were disabled) */
                      CY_PM_RESET_CR1_REG |= cyPmBackup.pres1;
                      CY_PM_RESET_CR3_REG |= cyPmBackup.pres2;
              
                  #endif /* (CY_PSOC5A) */
1733   1      
1734   1      
1735   1          #if(CY_PSOC5A)
              
                      /* Restore LVI/HVI configuration */
                      CY_PM_RESET_CR1_REG |= cyPmBackup.lviaLvidHvi;
              
                      /* Restore buzz sleep trim value */
                      CY_PM_PWRSYS_BUZZ_TR_REG = cyPmBackup.buzzSleepTrim |
                                                (CY_PM_PWRSYS_BUZZ_TR_REG & CY_PM_PWRSYS_BUZZ_TR_MASK);
              
                  #endif  /* (CY_PSOC5A) */
1745   1      
1746   1      
1747   1          #if(CY_PSOC3)
1748   1      
1749   1              CY_PM_PWRSYS_WAKE_TR2_REG = cyPmBackup.wakeTr2;
1750   1      
1751   1              /* HVI/LVI is enabled - hardware buzz is required */
1752   1              if(CYDEV_CHIP_REV_ACTUAL < 5u)
1753   1              {
1754   2                  /* Reconfigure power mode wakeup trim registers */
1755   2                  if(0u != (CY_PM_RESET_CR1_REG & (CY_PM_RESET_CR1_HVIA_EN |
1756   2                            CY_PM_RESET_CR1_LVIA_EN | CY_PM_RESET_CR1_LVID_EN)))
1757   2                  {
1758   3                      /* Enables LDO-A */
1759   3                      CY_PM_PWRSYS_CR1_REG &= ~0x02u;
1760   3      
1761   3                      /* Moves bandgap reference back to VCCA */
1762   3                      CY_PM_PWRSYS_CR1_REG &= ~0x01u;
1763   3                  }
1764   2              }
1765   1      
1766   1          #endif  /* (CY_PSOC3) */
1767   1      
1768   1      
1769   1          /* Restore configuration that are same for Sleep and Hibernate */
1770   1          CyPmHibSlpRestore();
1771   1      }
1772          
1773          
1774          /*******************************************************************************
1775          * Function Name: CyPmHibSlpSaveSet
1776          ********************************************************************************
1777          *
1778          * Summary:
1779          *  This API is used for preparing device for Sleep and Hibernate low power
1780          *  modes entry:
1781          *  - Saves COMP, VIDAC, DSM and SAR routing connections (PSoC5)
1782          *  - Saves SC/CT routing connections (PSoC and PSoC3)
1783          *  - Disables Serial Wire Viewer (SWV) (PSoC3)
1784          *  - Saves enable state of delay between the system bus and analog clocks
1785          *
1786          * Parameters:
1787          *  None
C51 COMPILER V9.03   CYPM                                                                  04/04/2015 14:09:13 PAGE 30  

1788          *
1789          * Return:
1790          *  None
1791          *
1792          * Reentrant:
1793          *  No
1794          *
1795          *******************************************************************************/
1796          static void CyPmHibSlpSaveSet(void) 
1797          {
1798   1          #if(CY_PSOC5A)
              
                      /* Save CMP routing registers */
                      cyPmBackup.cmpData[0u]  = CY_GET_REG8(CYREG_CMP0_SW0);
                      cyPmBackup.cmpData[1u]  = CY_GET_REG8(CYREG_CMP0_SW2);
                      cyPmBackup.cmpData[2u]  = CY_GET_REG8(CYREG_CMP0_SW3);
                      cyPmBackup.cmpData[3u]  = CY_GET_REG8(CYREG_CMP0_SW4);
                      cyPmBackup.cmpData[4u]  = CY_GET_REG8(CYREG_CMP0_SW6);
              
                      cyPmBackup.cmpData[5u]  = CY_GET_REG8(CYREG_CMP1_SW0);
                      cyPmBackup.cmpData[6u]  = CY_GET_REG8(CYREG_CMP1_SW2);
                      cyPmBackup.cmpData[7u]  = CY_GET_REG8(CYREG_CMP1_SW3);
                      cyPmBackup.cmpData[8u]  = CY_GET_REG8(CYREG_CMP1_SW4);
                      cyPmBackup.cmpData[9u]  = CY_GET_REG8(CYREG_CMP1_SW6);
              
                      cyPmBackup.cmpData[10u] = CY_GET_REG8(CYREG_CMP2_SW0);
                      cyPmBackup.cmpData[11u] = CY_GET_REG8(CYREG_CMP2_SW2);
                      cyPmBackup.cmpData[12u] = CY_GET_REG8(CYREG_CMP2_SW3);
                      cyPmBackup.cmpData[13u] = CY_GET_REG8(CYREG_CMP2_SW4);
                      cyPmBackup.cmpData[14u] = CY_GET_REG8(CYREG_CMP2_SW6);
              
                      cyPmBackup.cmpData[15u] = CY_GET_REG8(CYREG_CMP3_SW0);
                      cyPmBackup.cmpData[16u] = CY_GET_REG8(CYREG_CMP3_SW2);
                      cyPmBackup.cmpData[17u] = CY_GET_REG8(CYREG_CMP3_SW3);
                      cyPmBackup.cmpData[18u] = CY_GET_REG8(CYREG_CMP3_SW4);
                      cyPmBackup.cmpData[19u] = CY_GET_REG8(CYREG_CMP3_SW6);
              
              
                      /* Clear CMP routing registers */
                      CY_SET_REG8(CYREG_CMP0_SW0 , 0u);
                      CY_SET_REG8(CYREG_CMP0_SW2 , 0u);
                      CY_SET_REG8(CYREG_CMP0_SW3 , 0u);
                      CY_SET_REG8(CYREG_CMP0_SW4 , 0u);
                      CY_SET_REG8(CYREG_CMP0_SW6 , 0u);
              
                      CY_SET_REG8(CYREG_CMP1_SW0 , 0u);
                      CY_SET_REG8(CYREG_CMP1_SW2 , 0u);
                      CY_SET_REG8(CYREG_CMP1_SW3 , 0u);
                      CY_SET_REG8(CYREG_CMP1_SW4 , 0u);
                      CY_SET_REG8(CYREG_CMP1_SW6 , 0u);
              
                      CY_SET_REG8(CYREG_CMP2_SW0 , 0u);
                      CY_SET_REG8(CYREG_CMP2_SW2 , 0u);
                      CY_SET_REG8(CYREG_CMP2_SW3 , 0u);
                      CY_SET_REG8(CYREG_CMP2_SW4 , 0u);
                      CY_SET_REG8(CYREG_CMP2_SW6 , 0u);
              
                      CY_SET_REG8(CYREG_CMP3_SW0 , 0u);
                      CY_SET_REG8(CYREG_CMP3_SW2 , 0u);
                      CY_SET_REG8(CYREG_CMP3_SW3 , 0u);
                      CY_SET_REG8(CYREG_CMP3_SW4 , 0u);
                      CY_SET_REG8(CYREG_CMP3_SW6 , 0u);
C51 COMPILER V9.03   CYPM                                                                  04/04/2015 14:09:13 PAGE 31  

              
              
                      /* Save DAC routing registers */
                      cyPmBackup.dacData[0u]  = CY_GET_REG8(CYREG_DAC0_SW0);
                      cyPmBackup.dacData[1u]  = CY_GET_REG8(CYREG_DAC0_SW2);
                      cyPmBackup.dacData[2u]  = CY_GET_REG8(CYREG_DAC0_SW3);
                      cyPmBackup.dacData[3u]  = CY_GET_REG8(CYREG_DAC0_SW4);
              
                      cyPmBackup.dacData[4u]  = CY_GET_REG8(CYREG_DAC1_SW0);
                      cyPmBackup.dacData[5u]  = CY_GET_REG8(CYREG_DAC1_SW2);
                      cyPmBackup.dacData[6u]  = CY_GET_REG8(CYREG_DAC1_SW3);
                      cyPmBackup.dacData[7u]  = CY_GET_REG8(CYREG_DAC1_SW4);
              
                      cyPmBackup.dacData[8u]  = CY_GET_REG8(CYREG_DAC2_SW0);
                      cyPmBackup.dacData[9u]  = CY_GET_REG8(CYREG_DAC2_SW2);
                      cyPmBackup.dacData[10u] = CY_GET_REG8(CYREG_DAC2_SW3);
                      cyPmBackup.dacData[11u] = CY_GET_REG8(CYREG_DAC2_SW4);
              
                      cyPmBackup.dacData[12u] = CY_GET_REG8(CYREG_DAC3_SW0);
                      cyPmBackup.dacData[13u] = CY_GET_REG8(CYREG_DAC3_SW2);
                      cyPmBackup.dacData[14u] = CY_GET_REG8(CYREG_DAC3_SW3);
                      cyPmBackup.dacData[15u] = CY_GET_REG8(CYREG_DAC3_SW4);
              
                      /* Clear DAC routing registers */
                      CY_SET_REG8(CYREG_DAC0_SW0 , 0u);
                      CY_SET_REG8(CYREG_DAC0_SW2 , 0u);
                      CY_SET_REG8(CYREG_DAC0_SW3 , 0u);
                      CY_SET_REG8(CYREG_DAC0_SW4 , 0u);
              
                      CY_SET_REG8(CYREG_DAC1_SW0 , 0u);
                      CY_SET_REG8(CYREG_DAC1_SW2 , 0u);
                      CY_SET_REG8(CYREG_DAC1_SW3 , 0u);
                      CY_SET_REG8(CYREG_DAC1_SW4 , 0u);
              
                      CY_SET_REG8(CYREG_DAC2_SW0 , 0u);
                      CY_SET_REG8(CYREG_DAC2_SW2 , 0u);
                      CY_SET_REG8(CYREG_DAC2_SW3 , 0u);
                      CY_SET_REG8(CYREG_DAC2_SW4 , 0u);
              
                      CY_SET_REG8(CYREG_DAC3_SW0 , 0u);
                      CY_SET_REG8(CYREG_DAC3_SW2 , 0u);
                      CY_SET_REG8(CYREG_DAC3_SW3 , 0u);
                      CY_SET_REG8(CYREG_DAC3_SW4 , 0u);
              
              
                      /* Save DSM routing registers */
                      cyPmBackup.dsmData[0u]  = CY_GET_REG8(CYREG_DSM0_SW0);
                      cyPmBackup.dsmData[1u]  = CY_GET_REG8(CYREG_DSM0_SW2);
                      cyPmBackup.dsmData[2u]  = CY_GET_REG8(CYREG_DSM0_SW3);
                      cyPmBackup.dsmData[3u]  = CY_GET_REG8(CYREG_DSM0_SW4);
                      cyPmBackup.dsmData[4u]  = CY_GET_REG8(CYREG_DSM0_SW6);
              
                      /* Clear DSM routing registers */
                      CY_SET_REG8(CYREG_DSM0_SW0 , 0u);
                      CY_SET_REG8(CYREG_DSM0_SW2 , 0u);
                      CY_SET_REG8(CYREG_DSM0_SW3 , 0u);
                      CY_SET_REG8(CYREG_DSM0_SW4 , 0u);
                      CY_SET_REG8(CYREG_DSM0_SW6 , 0u);
              
              
                      /* Save SAR routing registers */
                      cyPmBackup.sarData[0u]  = CY_GET_REG8(CYREG_SAR0_SW0);
C51 COMPILER V9.03   CYPM                                                                  04/04/2015 14:09:13 PAGE 32  

                      cyPmBackup.sarData[1u]  = CY_GET_REG8(CYREG_SAR0_SW2);
                      cyPmBackup.sarData[2u]  = CY_GET_REG8(CYREG_SAR0_SW3);
                      cyPmBackup.sarData[3u]  = CY_GET_REG8(CYREG_SAR0_SW4);
                      cyPmBackup.sarData[4u]  = CY_GET_REG8(CYREG_SAR0_SW6);
              
                      cyPmBackup.sarData[5u]  = CY_GET_REG8(CYREG_SAR1_SW0);
                      cyPmBackup.sarData[6u]  = CY_GET_REG8(CYREG_SAR1_SW2);
                      cyPmBackup.sarData[7u]  = CY_GET_REG8(CYREG_SAR1_SW3);
                      cyPmBackup.sarData[8u]  = CY_GET_REG8(CYREG_SAR1_SW4);
                      cyPmBackup.sarData[9u]  = CY_GET_REG8(CYREG_SAR1_SW6);
              
              
                      /* Clear SAR routing registers */
                      CY_SET_REG8(CYREG_SAR0_SW0 , 0u);
                      CY_SET_REG8(CYREG_SAR0_SW2 , 0u);
                      CY_SET_REG8(CYREG_SAR0_SW3 , 0u);
                      CY_SET_REG8(CYREG_SAR0_SW4 , 0u);
                      CY_SET_REG8(CYREG_SAR0_SW6 , 0u);
              
                      CY_SET_REG8(CYREG_SAR1_SW0 , 0u);
                      CY_SET_REG8(CYREG_SAR1_SW2 , 0u);
                      CY_SET_REG8(CYREG_SAR1_SW3 , 0u);
                      CY_SET_REG8(CYREG_SAR1_SW4 , 0u);
                      CY_SET_REG8(CYREG_SAR1_SW6 , 0u);
              
                  #endif  /* (CY_PSOC5A) */
1938   1      
1939   1      
1940   1          #if(CY_PSOC3 || CY_PSOC5A)
1941   1      
1942   1              /* Save SC/CT routing registers */
1943   1              cyPmBackup.scctData[0u]   = CY_GET_REG8(CYREG_SC0_SW0 );
1944   1              cyPmBackup.scctData[1u]   = CY_GET_REG8(CYREG_SC0_SW2 );
1945   1              cyPmBackup.scctData[2u]   = CY_GET_REG8(CYREG_SC0_SW3 );
1946   1              cyPmBackup.scctData[3u]   = CY_GET_REG8(CYREG_SC0_SW4 );
1947   1              cyPmBackup.scctData[4u]   = CY_GET_REG8(CYREG_SC0_SW6 );
1948   1              cyPmBackup.scctData[5u]   = CY_GET_REG8(CYREG_SC0_SW8 );
1949   1              cyPmBackup.scctData[6u]   = CY_GET_REG8(CYREG_SC0_SW10);
1950   1      
1951   1              cyPmBackup.scctData[7u]   = CY_GET_REG8(CYREG_SC1_SW0 );
1952   1              cyPmBackup.scctData[8u]   = CY_GET_REG8(CYREG_SC1_SW2 );
1953   1              cyPmBackup.scctData[9u]   = CY_GET_REG8(CYREG_SC1_SW3 );
1954   1              cyPmBackup.scctData[10u]  = CY_GET_REG8(CYREG_SC1_SW4 );
1955   1              cyPmBackup.scctData[11u]  = CY_GET_REG8(CYREG_SC1_SW6 );
1956   1              cyPmBackup.scctData[12u]  = CY_GET_REG8(CYREG_SC1_SW8 );
1957   1              cyPmBackup.scctData[13u]  = CY_GET_REG8(CYREG_SC1_SW10);
1958   1      
1959   1              cyPmBackup.scctData[14u]  = CY_GET_REG8(CYREG_SC2_SW0 );
1960   1              cyPmBackup.scctData[15u]  = CY_GET_REG8(CYREG_SC2_SW2 );
1961   1              cyPmBackup.scctData[16u]  = CY_GET_REG8(CYREG_SC2_SW3 );
1962   1              cyPmBackup.scctData[17u]  = CY_GET_REG8(CYREG_SC2_SW4 );
1963   1              cyPmBackup.scctData[18u]  = CY_GET_REG8(CYREG_SC2_SW6 );
1964   1              cyPmBackup.scctData[19u]  = CY_GET_REG8(CYREG_SC2_SW8 );
1965   1              cyPmBackup.scctData[20u]  = CY_GET_REG8(CYREG_SC2_SW10);
1966   1      
1967   1              cyPmBackup.scctData[21u]  = CY_GET_REG8(CYREG_SC3_SW0 );
1968   1              cyPmBackup.scctData[22u]  = CY_GET_REG8(CYREG_SC3_SW2 );
1969   1              cyPmBackup.scctData[23u]  = CY_GET_REG8(CYREG_SC3_SW3 );
1970   1              cyPmBackup.scctData[24u]  = CY_GET_REG8(CYREG_SC3_SW4 );
1971   1              cyPmBackup.scctData[25u]  = CY_GET_REG8(CYREG_SC3_SW6 );
1972   1              cyPmBackup.scctData[26u]  = CY_GET_REG8(CYREG_SC3_SW8 );
1973   1              cyPmBackup.scctData[27u]  = CY_GET_REG8(CYREG_SC3_SW10);
C51 COMPILER V9.03   CYPM                                                                  04/04/2015 14:09:13 PAGE 33  

1974   1      
1975   1              CY_SET_REG8(CYREG_SC0_SW0 , 0u);
1976   1              CY_SET_REG8(CYREG_SC0_SW2 , 0u);
1977   1              CY_SET_REG8(CYREG_SC0_SW3 , 0u);
1978   1              CY_SET_REG8(CYREG_SC0_SW4 , 0u);
1979   1              CY_SET_REG8(CYREG_SC0_SW6 , 0u);
1980   1              CY_SET_REG8(CYREG_SC0_SW8 , 0u);
1981   1              CY_SET_REG8(CYREG_SC0_SW10, 0u);
1982   1      
1983   1              CY_SET_REG8(CYREG_SC1_SW0 , 0u);
1984   1              CY_SET_REG8(CYREG_SC1_SW2 , 0u);
1985   1              CY_SET_REG8(CYREG_SC1_SW3 , 0u);
1986   1              CY_SET_REG8(CYREG_SC1_SW4 , 0u);
1987   1              CY_SET_REG8(CYREG_SC1_SW6 , 0u);
1988   1              CY_SET_REG8(CYREG_SC1_SW8 , 0u);
1989   1              CY_SET_REG8(CYREG_SC1_SW10, 0u);
1990   1      
1991   1              CY_SET_REG8(CYREG_SC2_SW0 , 0u);
1992   1              CY_SET_REG8(CYREG_SC2_SW2 , 0u);
1993   1              CY_SET_REG8(CYREG_SC2_SW3 , 0u);
1994   1              CY_SET_REG8(CYREG_SC2_SW4 , 0u);
1995   1              CY_SET_REG8(CYREG_SC2_SW6 , 0u);
1996   1              CY_SET_REG8(CYREG_SC2_SW8 , 0u);
1997   1              CY_SET_REG8(CYREG_SC2_SW10, 0u);
1998   1      
1999   1              CY_SET_REG8(CYREG_SC3_SW0 , 0u);
2000   1              CY_SET_REG8(CYREG_SC3_SW2 , 0u);
2001   1              CY_SET_REG8(CYREG_SC3_SW3 , 0u);
2002   1              CY_SET_REG8(CYREG_SC3_SW4 , 0u);
2003   1              CY_SET_REG8(CYREG_SC3_SW6 , 0u);
2004   1              CY_SET_REG8(CYREG_SC3_SW8 , 0u);
2005   1              CY_SET_REG8(CYREG_SC3_SW10, 0u);
2006   1      
2007   1          #endif  /* (CY_PSOC3 || CY_PSOC5A) */
2008   1      
2009   1          /* Device is PSoC 3 and the revision is ES3 or later */
2010   1          #if(CY_PSOC3)
2011   1      
2012   1              /* Serial Wire Viewer (SWV) workaround */
2013   1      
2014   1              /* Disable SWV before entering low power mode */
2015   1              if(0u != (CY_PM_MLOGIC_DBG_REG & CY_PM_MLOGIC_DBG_SWV_CLK_EN))
2016   1              {
2017   2                  /* Save SWV clock enabled state */
2018   2                  cyPmBackup.swvClkEnabled = CY_PM_ENABLED;
2019   2      
2020   2                  /* Save current ports drive mode settings */
2021   2                  cyPmBackup.prt1Dm = CY_PM_PRT1_PC3_REG & ~CY_PM_PRT1_PC3_DM_MASK;
2022   2      
2023   2                  /* Set drive mode to strong output */
2024   2                  CY_PM_PRT1_PC3_REG = (CY_PM_PRT1_PC3_REG & CY_PM_PRT1_PC3_DM_MASK) |
2025   2                                      CY_PM_PRT1_PC3_DM_STRONG;
2026   2      
2027   2                  /* Disable SWV clocks */
2028   2                  CY_PM_MLOGIC_DBG_REG &= ~CY_PM_MLOGIC_DBG_SWV_CLK_EN;
2029   2              }
2030   1              else
2031   1              {
2032   2                  /* Save SWV clock disabled state */
2033   2                  cyPmBackup.swvClkEnabled = CY_PM_DISABLED;
2034   2              }
2035   1      
C51 COMPILER V9.03   CYPM                                                                  04/04/2015 14:09:13 PAGE 34  

2036   1          #endif  /* (CY_PSOC3) */
2037   1      
2038   1      
2039   1          /***************************************************************************
2040   1          * Save enable state of delay between the system bus clock and each of the
2041   1          * 4 individual analog clocks. This bit non-retention and it's value should
2042   1          * be restored on wakeup.
2043   1          ***************************************************************************/
2044   1          if(0u != (CY_PM_CLKDIST_DELAY_REG & CY_PM_CLKDIST_DELAY_EN))
2045   1          {
2046   2              cyPmBackup.clkDistDelay = CY_PM_ENABLED;
2047   2          }
2048   1          else
2049   1          {
2050   2              cyPmBackup.clkDistDelay = CY_PM_DISABLED;
2051   2          }
2052   1      }
2053          
2054          
2055          /*******************************************************************************
2056          * Function Name: CyPmHibSlpRestore
2057          ********************************************************************************
2058          *
2059          * Summary:
2060          *  This API is used for restoring device configurations after wakeup from Sleep
2061          *  and Hibernate low power modes:
2062          *  - Restores COMP, VIDAC, DSM and SAR routing connections (PSoC5)
2063          *  - Restores SC/CT routing connections (PSoC5 and PSoC3)
2064          *  - Restores enable state of Serial Wire Viewer (SWV) (PSoC3)
2065          *  - Restores initial buzz rate (PSoC5)
2066          *  - Restores enable state of delay between the system bus and analog clocks
2067          *
2068          * Parameters:
2069          *  None
2070          *
2071          * Return:
2072          *  None
2073          *
2074          *******************************************************************************/
2075          static void CyPmHibSlpRestore(void) 
2076          {
2077   1          /* Device is PSoC 5 and the revision is ES1 */
2078   1          #if(CY_PSOC5A)
              
                      /* Restore COMP routing registers */
                      CY_SET_REG8(CYREG_CMP0_SW0 , cyPmBackup.cmpData[0u] );
                      CY_SET_REG8(CYREG_CMP0_SW2 , cyPmBackup.cmpData[1u] );
                      CY_SET_REG8(CYREG_CMP0_SW3 , cyPmBackup.cmpData[2u] );
                      CY_SET_REG8(CYREG_CMP0_SW4 , cyPmBackup.cmpData[3u] );
                      CY_SET_REG8(CYREG_CMP0_SW6 , cyPmBackup.cmpData[4u] );
              
                      CY_SET_REG8(CYREG_CMP1_SW0 , cyPmBackup.cmpData[5u] );
                      CY_SET_REG8(CYREG_CMP1_SW2 , cyPmBackup.cmpData[6u] );
                      CY_SET_REG8(CYREG_CMP1_SW3 , cyPmBackup.cmpData[7u] );
                      CY_SET_REG8(CYREG_CMP1_SW4 , cyPmBackup.cmpData[8u] );
                      CY_SET_REG8(CYREG_CMP1_SW6 , cyPmBackup.cmpData[9u] );
              
                      CY_SET_REG8(CYREG_CMP2_SW0 , cyPmBackup.cmpData[10u]);
                      CY_SET_REG8(CYREG_CMP2_SW2 , cyPmBackup.cmpData[11u]);
                      CY_SET_REG8(CYREG_CMP2_SW3 , cyPmBackup.cmpData[12u]);
                      CY_SET_REG8(CYREG_CMP2_SW4 , cyPmBackup.cmpData[13u]);
                      CY_SET_REG8(CYREG_CMP2_SW6 , cyPmBackup.cmpData[14u]);
C51 COMPILER V9.03   CYPM                                                                  04/04/2015 14:09:13 PAGE 35  

              
                      CY_SET_REG8(CYREG_CMP3_SW0 , cyPmBackup.cmpData[15u]);
                      CY_SET_REG8(CYREG_CMP3_SW2 , cyPmBackup.cmpData[16u]);
                      CY_SET_REG8(CYREG_CMP3_SW3 , cyPmBackup.cmpData[17u]);
                      CY_SET_REG8(CYREG_CMP3_SW4 , cyPmBackup.cmpData[18u]);
                      CY_SET_REG8(CYREG_CMP3_SW6 , cyPmBackup.cmpData[19u]);
              
                      /* Restore DAC routing registers */
                      CY_SET_REG8(CYREG_DAC0_SW0 , cyPmBackup.dacData[0u] );
                      CY_SET_REG8(CYREG_DAC0_SW2 , cyPmBackup.dacData[1u] );
                      CY_SET_REG8(CYREG_DAC0_SW3 , cyPmBackup.dacData[2u] );
                      CY_SET_REG8(CYREG_DAC0_SW4 , cyPmBackup.dacData[3u] );
              
                      CY_SET_REG8(CYREG_DAC1_SW0 , cyPmBackup.dacData[4u] );
                      CY_SET_REG8(CYREG_DAC1_SW2 , cyPmBackup.dacData[5u] );
                      CY_SET_REG8(CYREG_DAC1_SW3 , cyPmBackup.dacData[6u] );
                      CY_SET_REG8(CYREG_DAC1_SW4 , cyPmBackup.dacData[7u] );
              
                      CY_SET_REG8(CYREG_DAC2_SW0 , cyPmBackup.dacData[8u] );
                      CY_SET_REG8(CYREG_DAC2_SW2 , cyPmBackup.dacData[9u] );
                      CY_SET_REG8(CYREG_DAC2_SW3 , cyPmBackup.dacData[10u]);
                      CY_SET_REG8(CYREG_DAC2_SW4 , cyPmBackup.dacData[11u]);
              
                      CY_SET_REG8(CYREG_DAC3_SW0 , cyPmBackup.dacData[12u]);
                      CY_SET_REG8(CYREG_DAC3_SW2 , cyPmBackup.dacData[13u]);
                      CY_SET_REG8(CYREG_DAC3_SW3 , cyPmBackup.dacData[14u]);
                      CY_SET_REG8(CYREG_DAC3_SW4 , cyPmBackup.dacData[15u]);
              
              
                      /* Restore DSM routing registers */
                      CY_SET_REG8(CYREG_DSM0_SW0 , cyPmBackup.dsmData[0u]);
                      CY_SET_REG8(CYREG_DSM0_SW2 , cyPmBackup.dsmData[1u]);
                      CY_SET_REG8(CYREG_DSM0_SW3 , cyPmBackup.dsmData[2u]);
                      CY_SET_REG8(CYREG_DSM0_SW4 , cyPmBackup.dsmData[3u]);
                      CY_SET_REG8(CYREG_DSM0_SW6 , cyPmBackup.dsmData[4u]);
              
              
                      /* Restore SAR routing registers */
                      CY_SET_REG8(CYREG_SAR0_SW0 , cyPmBackup.sarData[0u]);
                      CY_SET_REG8(CYREG_SAR0_SW2 , cyPmBackup.sarData[1u]);
                      CY_SET_REG8(CYREG_SAR0_SW3 , cyPmBackup.sarData[2u]);
                      CY_SET_REG8(CYREG_SAR0_SW4 , cyPmBackup.sarData[3u]);
                      CY_SET_REG8(CYREG_SAR0_SW6 , cyPmBackup.sarData[4u]);
              
                      CY_SET_REG8(CYREG_SAR1_SW0 , cyPmBackup.sarData[5u]);
                      CY_SET_REG8(CYREG_SAR1_SW2 , cyPmBackup.sarData[6u]);
                      CY_SET_REG8(CYREG_SAR1_SW3 , cyPmBackup.sarData[7u]);
                      CY_SET_REG8(CYREG_SAR1_SW4 , cyPmBackup.sarData[8u]);
                      CY_SET_REG8(CYREG_SAR1_SW6 , cyPmBackup.sarData[9u]);
              
                  #endif  /* (CY_PSOC5A) */
2149   1      
2150   1          /* Device is PSoC 3 and the revision is ES3 or later, or
2151   1          *  device is PSoC 5 and the revision is ES1 or earlier.
2152   1          */
2153   1          #if(CY_PSOC3 || CY_PSOC5A)
2154   1      
2155   1              /* Restore SC/CT routing registers */
2156   1              CY_SET_REG8(CYREG_SC0_SW0 , cyPmBackup.scctData[0u] );
2157   1              CY_SET_REG8(CYREG_SC0_SW2 , cyPmBackup.scctData[1u] );
2158   1              CY_SET_REG8(CYREG_SC0_SW3 , cyPmBackup.scctData[2u] );
2159   1              CY_SET_REG8(CYREG_SC0_SW4 , cyPmBackup.scctData[3u] );
C51 COMPILER V9.03   CYPM                                                                  04/04/2015 14:09:13 PAGE 36  

2160   1              CY_SET_REG8(CYREG_SC0_SW6 , cyPmBackup.scctData[4u] );
2161   1              CY_SET_REG8(CYREG_SC0_SW8 , cyPmBackup.scctData[5u] );
2162   1              CY_SET_REG8(CYREG_SC0_SW10, cyPmBackup.scctData[6u] );
2163   1      
2164   1              CY_SET_REG8(CYREG_SC1_SW0 , cyPmBackup.scctData[7u] );
2165   1              CY_SET_REG8(CYREG_SC1_SW2 , cyPmBackup.scctData[8u] );
2166   1              CY_SET_REG8(CYREG_SC1_SW3 , cyPmBackup.scctData[9u] );
2167   1              CY_SET_REG8(CYREG_SC1_SW4 , cyPmBackup.scctData[10u]);
2168   1              CY_SET_REG8(CYREG_SC1_SW6 , cyPmBackup.scctData[11u]);
2169   1              CY_SET_REG8(CYREG_SC1_SW8 , cyPmBackup.scctData[12u]);
2170   1              CY_SET_REG8(CYREG_SC1_SW10, cyPmBackup.scctData[13u]);
2171   1      
2172   1              CY_SET_REG8(CYREG_SC2_SW0 , cyPmBackup.scctData[14u]);
2173   1              CY_SET_REG8(CYREG_SC2_SW2 , cyPmBackup.scctData[15u]);
2174   1              CY_SET_REG8(CYREG_SC2_SW3 , cyPmBackup.scctData[16u]);
2175   1              CY_SET_REG8(CYREG_SC2_SW4 , cyPmBackup.scctData[17u]);
2176   1              CY_SET_REG8(CYREG_SC2_SW6 , cyPmBackup.scctData[18u]);
2177   1              CY_SET_REG8(CYREG_SC2_SW8 , cyPmBackup.scctData[19u]);
2178   1              CY_SET_REG8(CYREG_SC2_SW10, cyPmBackup.scctData[20u]);
2179   1      
2180   1              CY_SET_REG8(CYREG_SC3_SW0 , cyPmBackup.scctData[21u]);
2181   1              CY_SET_REG8(CYREG_SC3_SW2 , cyPmBackup.scctData[22u]);
2182   1              CY_SET_REG8(CYREG_SC3_SW3 , cyPmBackup.scctData[23u]);
2183   1              CY_SET_REG8(CYREG_SC3_SW4 , cyPmBackup.scctData[24u]);
2184   1              CY_SET_REG8(CYREG_SC3_SW6 , cyPmBackup.scctData[25u]);
2185   1              CY_SET_REG8(CYREG_SC3_SW8 , cyPmBackup.scctData[26u]);
2186   1              CY_SET_REG8(CYREG_SC3_SW10, cyPmBackup.scctData[27u]);
2187   1      
2188   1          #endif  /* (CY_PSOC3 || CY_PSOC5A) */
2189   1      
2190   1      
2191   1          #if(CY_PSOC3)
2192   1      
2193   1              /* Serial Wire Viewer (SWV) workaround */
2194   1              if(CY_PM_ENABLED == cyPmBackup.swvClkEnabled)
2195   1              {
2196   2                  /* Restore ports drive mode */
2197   2                  CY_PM_PRT1_PC3_REG = (CY_PM_PRT1_PC3_REG & CY_PM_PRT1_PC3_DM_MASK) |
2198   2                                          cyPmBackup.prt1Dm;
2199   2      
2200   2                  /* Enable SWV clocks */
2201   2                  CY_PM_MLOGIC_DBG_REG |= CY_PM_MLOGIC_DBG_SWV_CLK_EN;
2202   2              }
2203   1      
2204   1          #endif /* (CY_PSOC3) */
2205   1      
2206   1      
2207   1          #if(CY_PSOC5A)
              
                      /* Restore buzz sleep trim value */
                      CY_PM_PWRSYS_BUZZ_TR_REG = cyPmBackup.buzzSleepTrim | \
                                                (CY_PM_PWRSYS_BUZZ_TR_REG & CY_PM_PWRSYS_BUZZ_TR_MASK);
              
                  #endif  /* (CY_PSOC5A) */
2214   1      
2215   1      
2216   1          /* Restore enable state of delay between the system bus clock and ACLKs. */
2217   1          if(CY_PM_ENABLED == cyPmBackup.clkDistDelay)
2218   1          {
2219   2              /* Delay for both the bandgap and the delay line to settle out */
2220   2              CyDelayCycles(CY_PM_GET_CPU_FREQ_MHZ * (CY_PM_CLK_DELAY_BANDGAP_SETTLE_US + CY_PM_CLK_DELAY_BIAS_S
             -ETTLE_US));
C51 COMPILER V9.03   CYPM                                                                  04/04/2015 14:09:13 PAGE 37  

2221   2              CY_PM_CLKDIST_DELAY_REG |= CY_PM_CLKDIST_DELAY_EN;
2222   2          }
2223   1      }
2224          
2225          
2226          /* [] END OF FILE */
C51 COMPILER V9.03   CYPM                                                                  04/04/2015 14:09:13 PAGE 38  

ASSEMBLY LISTING OF GENERATED OBJECT CODE


             ; FUNCTION CyPmSaveClocks (BEGIN)
                                           ; SOURCE LINE # 87
                                           ; SOURCE LINE # 88
                                           ; SOURCE LINE # 90
0000 9043A1            MOV     DPTR,#043A1H
0003 E0                MOVX    A,@DPTR
0004 FF                MOV     R7,A
0005 EF                MOV     A,R7
0006 540F              ANL     A,#0FH
0008 FF                MOV     R7,A
0009 900000      R     MOV     DPTR,#cyPmClockBackup
000C EF                MOV     A,R7
000D F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 91
000E 9043A2            MOV     DPTR,#043A2H
0011 E0                MOVX    A,@DPTR
0012 FF                MOV     R7,A
0013 900000      R     MOV     DPTR,#cyPmClockBackup+01H
0016 EF                MOV     A,R7
0017 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 92
0018 9043A1            MOV     DPTR,#043A1H
001B E0                MOVX    A,@DPTR
001C FF                MOV     R7,A
001D EF                MOV     A,R7
001E 54F0              ANL     A,#0F0H
0020 FF                MOV     R7,A
0021 EF                MOV     A,R7
0022 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 93
0023 9043A2            MOV     DPTR,#043A2H
0026 E0                MOVX    A,@DPTR
0027 FF                MOV     R7,A
0028 EF                MOV     A,R7
0029 5400              ANL     A,#00H
002B FF                MOV     R7,A
002C EF                MOV     A,R7
002D F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 96
002E 904800            MOV     DPTR,#04800H
0031 E0                MOVX    A,@DPTR
0032 FF                MOV     R7,A
0033 EF                MOV     A,R7
0034 54C0              ANL     A,#0C0H
0036 FF                MOV     R7,A
0037 900000      R     MOV     DPTR,#cyPmClockBackup+05H
003A EF                MOV     A,R7
003B F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 97
003C 7F2D              MOV     R7,#02DH
003E 120000      E     LCALL   _CyFlash_SetWaitCycles
                                           ; SOURCE LINE # 100
0041 904200            MOV     DPTR,#04200H
0044 E0                MOVX    A,@DPTR
0045 FF                MOV     R7,A
0046 EF                MOV     A,R7
0047 5407              ANL     A,#07H
0049 FF                MOV     R7,A
004A 900000      R     MOV     DPTR,#cyPmClockBackup+03H
C51 COMPILER V9.03   CYPM                                                                  04/04/2015 14:09:13 PAGE 39  

004D EF                MOV     A,R7
004E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 101
004F 904200            MOV     DPTR,#04200H
0052 E0                MOVX    A,@DPTR
0053 FF                MOV     R7,A
0054 EF                MOV     A,R7
0055 5440              ANL     A,#040H
0057 FF                MOV     R7,A
0058 900000      R     MOV     DPTR,#cyPmClockBackup+04H
005B EF                MOV     A,R7
005C F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 104
005D 904200            MOV     DPTR,#04200H
0060 E0                MOVX    A,@DPTR
0061 FF                MOV     R7,A
0062 EF                MOV     A,R7
0063 5410              ANL     A,#010H
0065 FF                MOV     R7,A
0066 7E00              MOV     R6,#00H
0068 EF                MOV     A,R7
0069 4E                ORL     A,R6
006A 6008              JZ      ?C0001
                                           ; SOURCE LINE # 105
                                           ; SOURCE LINE # 107
006C 900000      R     MOV     DPTR,#cyPmClockBackup+09H
006F 7401              MOV     A,#01H
0071 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 108
0072 8005              SJMP    ?C0002
0074         ?C0001:
                                           ; SOURCE LINE # 110
                                           ; SOURCE LINE # 112
0074 900000      R     MOV     DPTR,#cyPmClockBackup+09H
0077 E4                CLR     A
0078 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 113
0079         ?C0002:
                                           ; SOURCE LINE # 116
0079 7F02              MOV     R7,#02H
007B 120000      E     LCALL   _CyIMO_SetFreq
                                           ; SOURCE LINE # 119
007E 9043A0            MOV     DPTR,#043A0H
0081 E0                MOVX    A,@DPTR
0082 FF                MOV     R7,A
0083 EF                MOV     A,R7
0084 5410              ANL     A,#010H
0086 FF                MOV     R7,A
0087 7E00              MOV     R6,#00H
0089 EF                MOV     A,R7
008A 4E                ORL     A,R6
008B 6008              JZ      ?C0003
                                           ; SOURCE LINE # 120
                                           ; SOURCE LINE # 122
008D 900000      R     MOV     DPTR,#cyPmClockBackup+06H
0090 7401              MOV     A,#01H
0092 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 123
0093 800A              SJMP    ?C0004
0095         ?C0003:
                                           ; SOURCE LINE # 125
                                           ; SOURCE LINE # 127
C51 COMPILER V9.03   CYPM                                                                  04/04/2015 14:09:13 PAGE 40  

0095 900000      R     MOV     DPTR,#cyPmClockBackup+06H
0098 E4                CLR     A
0099 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 130
009A 7F00              MOV     R7,#00H
009C 120000      E     LCALL   _CyIMO_Start
                                           ; SOURCE LINE # 131
009F         ?C0004:
                                           ; SOURCE LINE # 134
009F 904200            MOV     DPTR,#04200H
00A2 E0                MOVX    A,@DPTR
00A3 FF                MOV     R7,A
00A4 EF                MOV     A,R7
00A5 5420              ANL     A,#020H
00A7 FF                MOV     R7,A
00A8 7E00              MOV     R6,#00H
00AA EF                MOV     A,R7
00AB 4E                ORL     A,R6
00AC 6021              JZ      ?C0005
                                           ; SOURCE LINE # 135
                                           ; SOURCE LINE # 138
00AE 904000            MOV     DPTR,#04000H
00B1 E0                MOVX    A,@DPTR
00B2 FF                MOV     R7,A
00B3 EF                MOV     A,R7
00B4 5440              ANL     A,#040H
00B6 FF                MOV     R7,A
00B7 7E00              MOV     R6,#00H
00B9 EF                MOV     A,R7
00BA 4E                ORL     A,R6
00BB 7004              JNZ     ?C0006
00BD 7F02              MOV     R7,#02H
00BF 8002              SJMP    ?C0007
00C1         ?C0006:
00C1 7F01              MOV     R7,#01H
00C3         ?C0007:
00C3 900000      R     MOV     DPTR,#cyPmClockBackup+07H
00C6 EF                MOV     A,R7
00C7 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 141
00C8 7F00              MOV     R7,#00H
00CA 120000      E     LCALL   _CyIMO_SetSource
                                           ; SOURCE LINE # 142
00CD 8005              SJMP    ?C0008
00CF         ?C0005:
                                           ; SOURCE LINE # 144
                                           ; SOURCE LINE # 146
00CF 900000      R     MOV     DPTR,#cyPmClockBackup+07H
00D2 E4                CLR     A
00D3 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 147
00D4         ?C0008:
                                           ; SOURCE LINE # 150
00D4 904000            MOV     DPTR,#04000H
00D7 E0                MOVX    A,@DPTR
00D8 FF                MOV     R7,A
00D9 EF                MOV     A,R7
00DA 5430              ANL     A,#030H
00DC FF                MOV     R7,A
00DD 900000      R     MOV     DPTR,#cyPmClockBackup+08H
00E0 EF                MOV     A,R7
00E1 F0                MOVX    @DPTR,A
C51 COMPILER V9.03   CYPM                                                                  04/04/2015 14:09:13 PAGE 41  

                                           ; SOURCE LINE # 153
00E2 900000      R     MOV     DPTR,#cyPmClockBackup+08H
00E5 E0                MOVX    A,@DPTR
00E6 FF                MOV     R7,A
00E7 EF                MOV     A,R7
00E8 600B              JZ      ?C0009
                                           ; SOURCE LINE # 154
                                           ; SOURCE LINE # 156
00EA 904000            MOV     DPTR,#04000H
00ED E0                MOVX    A,@DPTR
00EE FF                MOV     R7,A
00EF EF                MOV     A,R7
00F0 54CF              ANL     A,#0CFH
00F2 FF                MOV     R7,A
00F3 EF                MOV     A,R7
00F4 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 158
00F5         ?C0009:
                                           ; SOURCE LINE # 161
00F5 904200            MOV     DPTR,#04200H
00F8 E0                MOVX    A,@DPTR
00F9 FF                MOV     R7,A
00FA EF                MOV     A,R7
00FB 5410              ANL     A,#010H
00FD FF                MOV     R7,A
00FE 7E00              MOV     R6,#00H
0100 EF                MOV     A,R7
0101 4E                ORL     A,R6
0102 6003              JZ      ?C0010
                                           ; SOURCE LINE # 162
                                           ; SOURCE LINE # 163
0104 120000      E     LCALL   CyIMO_DisableDoubler
                                           ; SOURCE LINE # 164
0107         ?C0010:
                                           ; SOURCE LINE # 167
0107 904004            MOV     DPTR,#04004H
010A E0                MOVX    A,@DPTR
010B FF                MOV     R7,A
010C 900000      R     MOV     DPTR,#cyPmClockBackup+0AH
010F EF                MOV     A,R7
0110 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 168
0111 900000      R     MOV     DPTR,#cyPmClockBackup+0AH
0114 E0                MOVX    A,@DPTR
0115 FF                MOV     R7,A
0116 EF                MOV     A,R7
0117 6005              JZ      ?C0011
                                           ; SOURCE LINE # 169
                                           ; SOURCE LINE # 170
0119 7F00              MOV     R7,#00H
011B 120000      E     LCALL   _CyMasterClk_SetDivider
                                           ; SOURCE LINE # 171
011E         ?C0011:
                                           ; SOURCE LINE # 174
011E 904005            MOV     DPTR,#04005H
0121 E0                MOVX    A,@DPTR
0122 FF                MOV     R7,A
0123 EF                MOV     A,R7
0124 5403              ANL     A,#03H
0126 FF                MOV     R7,A
0127 900000      R     MOV     DPTR,#cyPmClockBackup+02H
012A EF                MOV     A,R7
C51 COMPILER V9.03   CYPM                                                                  04/04/2015 14:09:13 PAGE 42  

012B F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 177
012C 900000      R     MOV     DPTR,#cyPmClockBackup+02H
012F E0                MOVX    A,@DPTR
0130 FF                MOV     R7,A
0131 EF                MOV     A,R7
0132 6005              JZ      ?C0012
                                           ; SOURCE LINE # 178
                                           ; SOURCE LINE # 179
0134 7F00              MOV     R7,#00H
0136 120000      E     LCALL   _CyMasterClk_SetSource
                                           ; SOURCE LINE # 180
0139         ?C0012:
                                           ; SOURCE LINE # 183
0139 904007            MOV     DPTR,#04007H
013C E0                MOVX    A,@DPTR
013D FF                MOV     R7,A
013E 7E00              MOV     R6,#00H
0140 EF                MOV     A,R7
0141 7F00              MOV     R7,#00H
0143 FE                MOV     R6,A
0144 904006            MOV     DPTR,#04006H
0147 E0                MOVX    A,@DPTR
0148 FD                MOV     R5,A
0149 7C00              MOV     R4,#00H
014B EE                MOV     A,R6
014C 4C                ORL     A,R4
014D FE                MOV     R6,A
014E EF                MOV     A,R7
014F 4D                ORL     A,R5
0150 FF                MOV     R7,A
0151 900000      R     MOV     DPTR,#cyPmClockBackup+0BH
0154 EE                MOV     A,R6
0155 F0                MOVX    @DPTR,A
0156 A3                INC     DPTR
0157 EF                MOV     A,R7
0158 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 184
0159 900000      R     MOV     DPTR,#cyPmClockBackup+0BH
015C E0                MOVX    A,@DPTR
015D FE                MOV     R6,A
015E A3                INC     DPTR
015F E0                MOVX    A,@DPTR
0160 FF                MOV     R7,A
0161 EF                MOV     A,R7
0162 4E                ORL     A,R6
0163 6007              JZ      ?C0013
                                           ; SOURCE LINE # 185
                                           ; SOURCE LINE # 186
0165 7F00              MOV     R7,#00H
0167 7E00              MOV     R6,#00H
0169 120000      E     LCALL   _CyBusClk_SetDivider
                                           ; SOURCE LINE # 187
016C         ?C0013:
                                           ; SOURCE LINE # 190
016C 904005            MOV     DPTR,#04005H
016F E0                MOVX    A,@DPTR
0170 FF                MOV     R7,A
0171 EF                MOV     A,R7
0172 54F0              ANL     A,#0F0H
0174 FF                MOV     R7,A
0175 7E00              MOV     R6,#00H
C51 COMPILER V9.03   CYPM                                                                  04/04/2015 14:09:13 PAGE 43  

0177 EE                MOV     A,R6
0178 C4                SWAP    A
0179 F8                MOV     R0,A
017A 54F0              ANL     A,#0F0H
017C C8                XCH     A,R0
017D 68                XRL     A,R0
017E FE                MOV     R6,A
017F EF                MOV     A,R7
0180 C4                SWAP    A
0181 540F              ANL     A,#0FH
0183 48                ORL     A,R0
0184 FF                MOV     R7,A
0185 EF                MOV     A,R7
0186 2401              ADD     A,#01H
0188 FD                MOV     R5,A
0189 EE                MOV     A,R6
018A 3400              ADDC    A,#00H
018C FC                MOV     R4,A
018D 904200            MOV     DPTR,#04200H
0190 E0                MOVX    A,@DPTR
0191 FF                MOV     R7,A
0192 EF                MOV     A,R7
0193 5407              ANL     A,#07H
0195 FF                MOV     R7,A
0196 EF                MOV     A,R7
0197 900000      R     MOV     DPTR,#cyPmImoFreqReg2Mhz
019A 93                MOVC    A,@A+DPTR
019B FF                MOV     R7,A
019C 7E00              MOV     R6,#00H
019E 120000      E     LCALL   ?C?UIDIV
01A1 120000      E     LCALL   _CyFlash_SetWaitCycles
                                           ; SOURCE LINE # 193
01A4 904220            MOV     DPTR,#04220H
01A7 E0                MOVX    A,@DPTR
01A8 FF                MOV     R7,A
01A9 EF                MOV     A,R7
01AA 5401              ANL     A,#01H
01AC FF                MOV     R7,A
01AD 7E00              MOV     R6,#00H
01AF EF                MOV     A,R7
01B0 4E                ORL     A,R6
01B1 600B              JZ      ?C0014
                                           ; SOURCE LINE # 194
                                           ; SOURCE LINE # 196
01B3 900000      R     MOV     DPTR,#cyPmClockBackup+0DH
01B6 7401              MOV     A,#01H
01B8 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 197
01B9 120000      E     LCALL   CyPLL_OUT_Stop
                                           ; SOURCE LINE # 198
01BC 8005              SJMP    ?C0015
01BE         ?C0014:
                                           ; SOURCE LINE # 200
                                           ; SOURCE LINE # 202
01BE 900000      R     MOV     DPTR,#cyPmClockBackup+0DH
01C1 E4                CLR     A
01C2 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 203
01C3         ?C0015:
                                           ; SOURCE LINE # 206
01C3 904210            MOV     DPTR,#04210H
01C6 E0                MOVX    A,@DPTR
C51 COMPILER V9.03   CYPM                                                                  04/04/2015 14:09:13 PAGE 44  

01C7 FF                MOV     R7,A
01C8 EF                MOV     A,R7
01C9 5401              ANL     A,#01H
01CB FF                MOV     R7,A
01CC 7E00              MOV     R6,#00H
01CE EF                MOV     A,R7
01CF 4E                ORL     A,R6
01D0 600A              JZ      ?C0016
                                           ; SOURCE LINE # 207
                                           ; SOURCE LINE # 209
01D2 900000      R     MOV     DPTR,#cyPmClockBackup+0EH
01D5 7401              MOV     A,#01H
01D7 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 210
01D8 120000      E     LCALL   CyXTAL_Stop
                                           ; SOURCE LINE # 211
01DB 22                RET     
01DC         ?C0016:
                                           ; SOURCE LINE # 213
                                           ; SOURCE LINE # 215
01DC 900000      R     MOV     DPTR,#cyPmClockBackup+0EH
01DF E4                CLR     A
01E0 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 216
01E1         ?C0017:
                                           ; SOURCE LINE # 217
01E1         ?C0018:
01E1 22                RET     
             ; FUNCTION CyPmSaveClocks (END)

             ; FUNCTION CyPmRestoreClocks (BEGIN)
                                           ; SOURCE LINE # 245
                                           ; SOURCE LINE # 246
                                           ; SOURCE LINE # 249
0000 900000      R     MOV     DPTR,#status
0003 7410              MOV     A,#010H
0005 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 260
0006 900000      R     MOV     DPTR,#cyPmClockBackup+0EH
0009 E0                MOVX    A,@DPTR
000A FF                MOV     R7,A
000B EF                MOV     A,R7
000C 6401              XRL     A,#01H
000E 6003              JZ      $ + 5H
0010 020000      R     LJMP    ?C0019
                                           ; SOURCE LINE # 261
                                           ; SOURCE LINE # 270
0013 7F00              MOV     R7,#00H
0015 120000      E     LCALL   _CyXTAL_Start
                                           ; SOURCE LINE # 280
0018 904210            MOV     DPTR,#04210H
001B E0                MOVX    A,@DPTR
001C FF                MOV     R7,A
                                           ; SOURCE LINE # 283
001D 900000      R     MOV     DPTR,#i
0020 E4                CLR     A
0021 F0                MOVX    @DPTR,A
0022 A3                INC     DPTR
0023 7405              MOV     A,#05H
0025 F0                MOVX    @DPTR,A
0026         ?C0020:
0026 900000      R     MOV     DPTR,#i
C51 COMPILER V9.03   CYPM                                                                  04/04/2015 14:09:13 PAGE 45  

0029 E0                MOVX    A,@DPTR
002A FE                MOV     R6,A
002B A3                INC     DPTR
002C E0                MOVX    A,@DPTR
002D FF                MOV     R7,A
002E D3                SETB    C
002F EF                MOV     A,R7
0030 9400              SUBB    A,#00H
0032 EE                MOV     A,R6
0033 9400              SUBB    A,#00H
0035 4068              JC      ?C0021
                                           ; SOURCE LINE # 284
                                           ; SOURCE LINE # 286
0037 904005            MOV     DPTR,#04005H
003A E0                MOVX    A,@DPTR
003B FF                MOV     R7,A
003C EF                MOV     A,R7
003D 54F0              ANL     A,#0F0H
003F FF                MOV     R7,A
0040 7E00              MOV     R6,#00H
0042 EE                MOV     A,R6
0043 C4                SWAP    A
0044 F8                MOV     R0,A
0045 54F0              ANL     A,#0F0H
0047 C8                XCH     A,R0
0048 68                XRL     A,R0
0049 FE                MOV     R6,A
004A EF                MOV     A,R7
004B C4                SWAP    A
004C 540F              ANL     A,#0FH
004E 48                ORL     A,R0
004F FF                MOV     R7,A
0050 EF                MOV     A,R7
0051 2401              ADD     A,#01H
0053 FD                MOV     R5,A
0054 EE                MOV     A,R6
0055 3400              ADDC    A,#00H
0057 FC                MOV     R4,A
0058 904200            MOV     DPTR,#04200H
005B E0                MOVX    A,@DPTR
005C FF                MOV     R7,A
005D EF                MOV     A,R7
005E 5407              ANL     A,#07H
0060 FF                MOV     R7,A
0061 EF                MOV     A,R7
0062 900000      R     MOV     DPTR,#cyPmImoFreqReg2Mhz
0065 93                MOVC    A,@A+DPTR
0066 FF                MOV     R7,A
0067 7E00              MOV     R6,#00H
0069 120000      E     LCALL   ?C?UIDIV
006C 7C00              MOV     R4,#00H
006E 7DC8              MOV     R5,#0C8H
0070 120000      E     LCALL   ?C?IMUL
0073 E4                CLR     A
0074 FC                MOV     R4,A
0075 FD                MOV     R5,A
0076 120000      E     LCALL   _CyDelayCycles
                                           ; SOURCE LINE # 289
0079 904210            MOV     DPTR,#04210H
007C E0                MOVX    A,@DPTR
007D FF                MOV     R7,A
007E EF                MOV     A,R7
C51 COMPILER V9.03   CYPM                                                                  04/04/2015 14:09:13 PAGE 46  

007F 5480              ANL     A,#080H
0081 FF                MOV     R7,A
0082 7E00              MOV     R6,#00H
0084 EF                MOV     A,R7
0085 4E                ORL     A,R6
0086 7007              JNZ     ?C0022
                                           ; SOURCE LINE # 290
                                           ; SOURCE LINE # 291
0088 900000      R     MOV     DPTR,#status
008B E4                CLR     A
008C F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 292
008D 8010              SJMP    ?C0021
                                           ; SOURCE LINE # 293
008F         ?C0023:
                                           ; SOURCE LINE # 294
008F         ?C0022:
008F 900000      R     MOV     DPTR,#i+01H
0092 E0                MOVX    A,@DPTR
0093 24FF              ADD     A,#0FFH
0095 F0                MOVX    @DPTR,A
0096 900000      R     MOV     DPTR,#i
0099 E0                MOVX    A,@DPTR
009A 34FF              ADDC    A,#0FFH
009C F0                MOVX    @DPTR,A
009D 8087              SJMP    ?C0020
009F         ?C0021:
                                           ; SOURCE LINE # 296
                                           ; SOURCE LINE # 297
                                           ; SOURCE LINE # 306
009F         ?C0024:
                                           ; SOURCE LINE # 310
009F         ?C0019:
                                           ; SOURCE LINE # 314
009F 7F2D              MOV     R7,#02DH
00A1 120000      E     LCALL   _CyFlash_SetWaitCycles
                                           ; SOURCE LINE # 317
00A4 900000      R     MOV     DPTR,#cyPmClockBackup+02H
00A7 E0                MOVX    A,@DPTR
00A8 FF                MOV     R7,A
00A9 EF                MOV     A,R7
00AA 6402              XRL     A,#02H
00AC 6009              JZ      ?C0026
00AE 900000      R     MOV     DPTR,#cyPmClockBackup+02H
00B1 E0                MOVX    A,@DPTR
00B2 FF                MOV     R7,A
00B3 EF                MOV     A,R7
00B4 B4031E            CJNE    A,#03H,?C0025
00B7         ?C0026:
                                           ; SOURCE LINE # 319
                                           ; SOURCE LINE # 321
00B7 900000      R     MOV     DPTR,#cyPmClockBackup+0AH
00BA E0                MOVX    A,@DPTR
00BB FF                MOV     R7,A
00BC 904004            MOV     DPTR,#04004H
00BF E0                MOVX    A,@DPTR
00C0 FE                MOV     R6,A
00C1 EE                MOV     A,R6
00C2 6F                XRL     A,R7
00C3 6008              JZ      ?C0027
                                           ; SOURCE LINE # 322
                                           ; SOURCE LINE # 324
C51 COMPILER V9.03   CYPM                                                                  04/04/2015 14:09:13 PAGE 47  

00C5 900000      R     MOV     DPTR,#cyPmClockBackup+0AH
00C8 E0                MOVX    A,@DPTR
00C9 FF                MOV     R7,A
00CA 120000      E     LCALL   _CyMasterClk_SetDivider
                                           ; SOURCE LINE # 325
00CD         ?C0027:
                                           ; SOURCE LINE # 328
00CD 900000      R     MOV     DPTR,#cyPmClockBackup+02H
00D0 E0                MOVX    A,@DPTR
00D1 FF                MOV     R7,A
00D2 120000      E     LCALL   _CyMasterClk_SetSource
                                           ; SOURCE LINE # 329
00D5         ?C0025:
                                           ; SOURCE LINE # 332
00D5 900000      R     MOV     DPTR,#cyPmClockBackup+04H
00D8 E0                MOVX    A,@DPTR
00D9 FF                MOV     R7,A
00DA EF                MOV     A,R7
00DB 5440              ANL     A,#040H
00DD FF                MOV     R7,A
00DE 7E00              MOV     R6,#00H
00E0 EF                MOV     A,R7
00E1 4E                ORL     A,R6
00E2 6016              JZ      ?C0028
00E4 900000      R     MOV     DPTR,#cyPmClockBackup+03H
00E7 E0                MOVX    A,@DPTR
00E8 FF                MOV     R7,A
00E9 EF                MOV     A,R7
00EA 900000      R     MOV     DPTR,#cyPmImoFreqMhz2Reg
00ED 93                MOVC    A,@A+DPTR
00EE FF                MOV     R7,A
00EF EF                MOV     A,R7
00F0 B40307            CJNE    A,#03H,?C0028
                                           ; SOURCE LINE # 334
                                           ; SOURCE LINE # 336
00F3 7F08              MOV     R7,#08H
00F5 120000      E     LCALL   _CyIMO_SetFreq
                                           ; SOURCE LINE # 337
00F8 8035              SJMP    ?C0029
00FA         ?C0028:
                                           ; SOURCE LINE # 339
                                           ; SOURCE LINE # 341
00FA 900000      R     MOV     DPTR,#cyPmClockBackup+03H
00FD E0                MOVX    A,@DPTR
00FE FF                MOV     R7,A
00FF EF                MOV     A,R7
0100 900000      R     MOV     DPTR,#cyPmImoFreqMhz2Reg
0103 93                MOVC    A,@A+DPTR
0104 FF                MOV     R7,A
0105 120000      E     LCALL   _CyIMO_SetFreq
                                           ; SOURCE LINE # 343
0108 900000      R     MOV     DPTR,#cyPmClockBackup+04H
010B E0                MOVX    A,@DPTR
010C FF                MOV     R7,A
010D EF                MOV     A,R7
010E 5440              ANL     A,#040H
0110 FF                MOV     R7,A
0111 7E00              MOV     R6,#00H
0113 EF                MOV     A,R7
0114 4E                ORL     A,R6
0115 600D              JZ      ?C0030
                                           ; SOURCE LINE # 344
C51 COMPILER V9.03   CYPM                                                                  04/04/2015 14:09:13 PAGE 48  

                                           ; SOURCE LINE # 345
0117 904200            MOV     DPTR,#04200H
011A E0                MOVX    A,@DPTR
011B FF                MOV     R7,A
011C EF                MOV     A,R7
011D 4440              ORL     A,#040H
011F FF                MOV     R7,A
0120 EF                MOV     A,R7
0121 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 346
0122 800B              SJMP    ?C0029
0124         ?C0030:
                                           ; SOURCE LINE # 348
                                           ; SOURCE LINE # 349
0124 904200            MOV     DPTR,#04200H
0127 E0                MOVX    A,@DPTR
0128 FF                MOV     R7,A
0129 EF                MOV     A,R7
012A 54BF              ANL     A,#0BFH
012C FF                MOV     R7,A
012D EF                MOV     A,R7
012E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 350
012F         ?C0031:
                                           ; SOURCE LINE # 351
012F         ?C0029:
                                           ; SOURCE LINE # 355
012F 900000      R     MOV     DPTR,#cyPmClockBackup+06H
0132 E0                MOVX    A,@DPTR
0133 FF                MOV     R7,A
0134 EF                MOV     A,R7
0135 B40114            CJNE    A,#01H,?C0032
0138 9043A0            MOV     DPTR,#043A0H
013B E0                MOVX    A,@DPTR
013C FF                MOV     R7,A
013D EF                MOV     A,R7
013E 5410              ANL     A,#010H
0140 FF                MOV     R7,A
0141 7E00              MOV     R6,#00H
0143 EF                MOV     A,R7
0144 4E                ORL     A,R6
0145 7005              JNZ     ?C0032
                                           ; SOURCE LINE # 356
                                           ; SOURCE LINE # 358
0147 7F00              MOV     R7,#00H
0149 120000      E     LCALL   _CyIMO_Start
                                           ; SOURCE LINE # 359
014C         ?C0032:
                                           ; SOURCE LINE # 363
014C 900000      R     MOV     DPTR,#cyPmClockBackup+06H
014F E0                MOVX    A,@DPTR
0150 FF                MOV     R7,A
0151 EF                MOV     A,R7
0152 7012              JNZ     ?C0033
0154 9043A0            MOV     DPTR,#043A0H
0157 E0                MOVX    A,@DPTR
0158 FF                MOV     R7,A
0159 EF                MOV     A,R7
015A 5410              ANL     A,#010H
015C FF                MOV     R7,A
015D 7E00              MOV     R6,#00H
015F EF                MOV     A,R7
C51 COMPILER V9.03   CYPM                                                                  04/04/2015 14:09:13 PAGE 49  

0160 4E                ORL     A,R6
0161 6003              JZ      ?C0033
                                           ; SOURCE LINE # 364
                                           ; SOURCE LINE # 365
0163 120000      E     LCALL   CyIMO_Stop
                                           ; SOURCE LINE # 366
0166         ?C0033:
                                           ; SOURCE LINE # 369
0166 900000      R     MOV     DPTR,#cyPmClockBackup+07H
0169 E0                MOVX    A,@DPTR
016A FF                MOV     R7,A
016B 120000      E     LCALL   _CyIMO_SetSource
                                           ; SOURCE LINE # 372
016E 900000      R     MOV     DPTR,#cyPmClockBackup+09H
0171 E0                MOVX    A,@DPTR
0172 FF                MOV     R7,A
0173 EF                MOV     A,R7
0174 B40103            CJNE    A,#01H,?C0034
                                           ; SOURCE LINE # 373
                                           ; SOURCE LINE # 374
0177 120000      E     LCALL   CyIMO_EnableDoubler
                                           ; SOURCE LINE # 375
017A         ?C0034:
                                           ; SOURCE LINE # 378
017A 904000            MOV     DPTR,#04000H
017D E0                MOVX    A,@DPTR
017E FF                MOV     R7,A
017F EF                MOV     A,R7
0180 5430              ANL     A,#030H
0182 FF                MOV     R7,A
0183 7E00              MOV     R6,#00H
0185 900000      R     MOV     DPTR,#cyPmClockBackup+08H
0188 E0                MOVX    A,@DPTR
0189 FD                MOV     R5,A
018A 7C00              MOV     R4,#00H
018C ED                MOV     A,R5
018D 6F                XRL     A,R7
018E 7002              JNZ     ?C0109
0190 EC                MOV     A,R4
0191 6E                XRL     A,R6
0192         ?C0109:
0192 6016              JZ      ?C0035
                                           ; SOURCE LINE # 379
                                           ; SOURCE LINE # 380
0194 904000            MOV     DPTR,#04000H
0197 E0                MOVX    A,@DPTR
0198 FF                MOV     R7,A
0199 EF                MOV     A,R7
019A 54CF              ANL     A,#0CFH
019C FF                MOV     R7,A
019D 900000      R     MOV     DPTR,#cyPmClockBackup+08H
01A0 E0                MOVX    A,@DPTR
01A1 FE                MOV     R6,A
01A2 EF                MOV     A,R7
01A3 4E                ORL     A,R6
01A4 FF                MOV     R7,A
01A5 904000            MOV     DPTR,#04000H
01A8 EF                MOV     A,R7
01A9 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 382
01AA         ?C0035:
                                           ; SOURCE LINE # 385
C51 COMPILER V9.03   CYPM                                                                  04/04/2015 14:09:13 PAGE 50  

01AA 900000      R     MOV     DPTR,#cyPmClockBackup+0DH
01AD E0                MOVX    A,@DPTR
01AE FF                MOV     R7,A
01AF EF                MOV     A,R7
01B0 6401              XRL     A,#01H
01B2 7047              JNZ     ?C0036
                                           ; SOURCE LINE # 386
                                           ; SOURCE LINE # 395
01B4 7F00              MOV     R7,#00H
01B6 120000      E     LCALL   _CyPLL_OUT_Start
                                           ; SOURCE LINE # 398
01B9 904005            MOV     DPTR,#04005H
01BC E0                MOVX    A,@DPTR
01BD FF                MOV     R7,A
01BE EF                MOV     A,R7
01BF 54F0              ANL     A,#0F0H
01C1 FF                MOV     R7,A
01C2 7E00              MOV     R6,#00H
01C4 EE                MOV     A,R6
01C5 C4                SWAP    A
01C6 F8                MOV     R0,A
01C7 54F0              ANL     A,#0F0H
01C9 C8                XCH     A,R0
01CA 68                XRL     A,R0
01CB FE                MOV     R6,A
01CC EF                MOV     A,R7
01CD C4                SWAP    A
01CE 540F              ANL     A,#0FH
01D0 48                ORL     A,R0
01D1 FF                MOV     R7,A
01D2 EF                MOV     A,R7
01D3 2401              ADD     A,#01H
01D5 FD                MOV     R5,A
01D6 EE                MOV     A,R6
01D7 3400              ADDC    A,#00H
01D9 FC                MOV     R4,A
01DA 904200            MOV     DPTR,#04200H
01DD E0                MOVX    A,@DPTR
01DE FF                MOV     R7,A
01DF EF                MOV     A,R7
01E0 5407              ANL     A,#07H
01E2 FF                MOV     R7,A
01E3 EF                MOV     A,R7
01E4 900000      R     MOV     DPTR,#cyPmImoFreqReg2Mhz
01E7 93                MOVC    A,@A+DPTR
01E8 FF                MOV     R7,A
01E9 7E00              MOV     R6,#00H
01EB 120000      E     LCALL   ?C?UIDIV
01EE 7C00              MOV     R4,#00H
01F0 7DFA              MOV     R5,#0FAH
01F2 120000      E     LCALL   ?C?IMUL
01F5 E4                CLR     A
01F6 FC                MOV     R4,A
01F7 FD                MOV     R5,A
01F8 120000      E     LCALL   _CyDelayCycles
                                           ; SOURCE LINE # 399
01FB         ?C0036:
                                           ; SOURCE LINE # 403
01FB 900000      R     MOV     DPTR,#cyPmClockBackup+02H
01FE E0                MOVX    A,@DPTR
01FF FF                MOV     R7,A
0200 EF                MOV     A,R7
C51 COMPILER V9.03   CYPM                                                                  04/04/2015 14:09:13 PAGE 51  

0201 6009              JZ      ?C0038
0203 900000      R     MOV     DPTR,#cyPmClockBackup+02H
0206 E0                MOVX    A,@DPTR
0207 FF                MOV     R7,A
0208 EF                MOV     A,R7
0209 B4011E            CJNE    A,#01H,?C0037
020C         ?C0038:
                                           ; SOURCE LINE # 405
                                           ; SOURCE LINE # 407
020C 900000      R     MOV     DPTR,#cyPmClockBackup+0AH
020F E0                MOVX    A,@DPTR
0210 FF                MOV     R7,A
0211 904004            MOV     DPTR,#04004H
0214 E0                MOVX    A,@DPTR
0215 FE                MOV     R6,A
0216 EE                MOV     A,R6
0217 6F                XRL     A,R7
0218 6008              JZ      ?C0039
                                           ; SOURCE LINE # 408
                                           ; SOURCE LINE # 409
021A 900000      R     MOV     DPTR,#cyPmClockBackup+0AH
021D E0                MOVX    A,@DPTR
021E FF                MOV     R7,A
021F 120000      E     LCALL   _CyMasterClk_SetDivider
                                           ; SOURCE LINE # 410
0222         ?C0039:
                                           ; SOURCE LINE # 413
0222 900000      R     MOV     DPTR,#cyPmClockBackup+02H
0225 E0                MOVX    A,@DPTR
0226 FF                MOV     R7,A
0227 120000      E     LCALL   _CyMasterClk_SetSource
                                           ; SOURCE LINE # 414
022A         ?C0037:
                                           ; SOURCE LINE # 417
022A 904007            MOV     DPTR,#04007H
022D E0                MOVX    A,@DPTR
022E FF                MOV     R7,A
022F 7E00              MOV     R6,#00H
0231 EF                MOV     A,R7
0232 7F00              MOV     R7,#00H
0234 FE                MOV     R6,A
0235 904006            MOV     DPTR,#04006H
0238 E0                MOVX    A,@DPTR
0239 FD                MOV     R5,A
023A 7C00              MOV     R4,#00H
023C EE                MOV     A,R6
023D 4C                ORL     A,R4
023E FE                MOV     R6,A
023F EF                MOV     A,R7
0240 4D                ORL     A,R5
0241 FF                MOV     R7,A
0242 900000      R     MOV     DPTR,#cyPmClockBackup+0BH
0245 E0                MOVX    A,@DPTR
0246 FC                MOV     R4,A
0247 A3                INC     DPTR
0248 E0                MOVX    A,@DPTR
0249 FD                MOV     R5,A
024A EF                MOV     A,R7
024B 6D                XRL     A,R5
024C 7002              JNZ     ?C0110
024E EE                MOV     A,R6
024F 6C                XRL     A,R4
C51 COMPILER V9.03   CYPM                                                                  04/04/2015 14:09:13 PAGE 52  

0250         ?C0110:
0250 600B              JZ      ?C0040
                                           ; SOURCE LINE # 418
                                           ; SOURCE LINE # 419
0252 900000      R     MOV     DPTR,#cyPmClockBackup+0BH
0255 E0                MOVX    A,@DPTR
0256 FE                MOV     R6,A
0257 A3                INC     DPTR
0258 E0                MOVX    A,@DPTR
0259 FF                MOV     R7,A
025A 120000      E     LCALL   _CyBusClk_SetDivider
                                           ; SOURCE LINE # 420
025D         ?C0040:
                                           ; SOURCE LINE # 423
025D 904800            MOV     DPTR,#04800H
0260 E0                MOVX    A,@DPTR
0261 FF                MOV     R7,A
0262 EF                MOV     A,R7
0263 543F              ANL     A,#03FH
0265 FF                MOV     R7,A
0266 900000      R     MOV     DPTR,#cyPmClockBackup+05H
0269 E0                MOVX    A,@DPTR
026A FE                MOV     R6,A
026B EF                MOV     A,R7
026C 4E                ORL     A,R6
026D FF                MOV     R7,A
026E 904800            MOV     DPTR,#04800H
0271 EF                MOV     A,R7
0272 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 427
0273 900000      R     MOV     DPTR,#cyPmClockBackup
0276 E0                MOVX    A,@DPTR
0277 FF                MOV     R7,A
0278 9043A1            MOV     DPTR,#043A1H
027B EF                MOV     A,R7
027C F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 428
027D 900000      R     MOV     DPTR,#cyPmClockBackup+01H
0280 E0                MOVX    A,@DPTR
0281 FF                MOV     R7,A
0282 9043A2            MOV     DPTR,#043A2H
0285 EF                MOV     A,R7
0286 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 429
0287         ?C0041:
0287 22                RET     
             ; FUNCTION CyPmRestoreClocks (END)

             ; FUNCTION _CyPmAltAct (BEGIN)
                                           ; SOURCE LINE # 550
0000 900000      R     MOV     DPTR,#wakeupTime
0003 EE                MOV     A,R6
0004 F0                MOVX    @DPTR,A
0005 A3                INC     DPTR
0006 EF                MOV     A,R7
0007 F0                MOVX    @DPTR,A
0008 900000      R     MOV     DPTR,#wakeupSource
000B EC                MOV     A,R4
000C F0                MOVX    @DPTR,A
000D A3                INC     DPTR
000E ED                MOV     A,R5
000F F0                MOVX    @DPTR,A
C51 COMPILER V9.03   CYPM                                                                  04/04/2015 14:09:13 PAGE 53  

                                           ; SOURCE LINE # 551
                                           ; SOURCE LINE # 568
0010 900000      R     MOV     DPTR,#wakeupTime
0013 E0                MOVX    A,@DPTR
0014 FE                MOV     R6,A
0015 A3                INC     DPTR
0016 E0                MOVX    A,@DPTR
0017 FF                MOV     R7,A
0018 C3                CLR     C
0019 EF                MOV     A,R7
001A 940F              SUBB    A,#0FH
001C EE                MOV     A,R6
001D 9400              SUBB    A,#00H
001F 4038              JC      ?C0042
0021 900000      R     MOV     DPTR,#wakeupTime
0024 E0                MOVX    A,@DPTR
0025 FE                MOV     R6,A
0026 A3                INC     DPTR
0027 E0                MOVX    A,@DPTR
0028 FF                MOV     R7,A
0029 D3                SETB    C
002A EF                MOV     A,R7
002B 940E              SUBB    A,#0EH
002D EE                MOV     A,R6
002E 9401              SUBB    A,#01H
0030 5027              JNC     ?C0042
                                           ; SOURCE LINE # 569
                                           ; SOURCE LINE # 570
0032 900000      R     MOV     DPTR,#wakeupTime
0035 E0                MOVX    A,@DPTR
0036 FE                MOV     R6,A
0037 A3                INC     DPTR
0038 E0                MOVX    A,@DPTR
0039 FF                MOV     R7,A
003A EF                MOV     A,R7
003B 24F2              ADD     A,#0F2H
003D FF                MOV     R7,A
003E EF                MOV     A,R7
003F 54FF              ANL     A,#0FFH
0041 FF                MOV     R7,A
0042 120000      R     LCALL   _CyPmFtwSetInterval
                                           ; SOURCE LINE # 573
0045 900000      R     MOV     DPTR,#wakeupSource
0048 E0                MOVX    A,@DPTR
0049 FE                MOV     R6,A
004A A3                INC     DPTR
004B E0                MOVX    A,@DPTR
004C FF                MOV     R7,A
004D EE                MOV     A,R6
004E 4404              ORL     A,#04H
0050 FE                MOV     R6,A
0051 900000      R     MOV     DPTR,#wakeupSource
0054 EE                MOV     A,R6
0055 F0                MOVX    @DPTR,A
0056 A3                INC     DPTR
0057 EF                MOV     A,R7
0058 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 574
0059         ?C0042:
                                           ; SOURCE LINE # 577
0059 900000      R     MOV     DPTR,#wakeupTime
005C E0                MOVX    A,@DPTR
C51 COMPILER V9.03   CYPM                                                                  04/04/2015 14:09:13 PAGE 54  

005D FE                MOV     R6,A
005E A3                INC     DPTR
005F E0                MOVX    A,@DPTR
0060 FF                MOV     R7,A
0061 C3                CLR     C
0062 EF                MOV     A,R7
0063 9402              SUBB    A,#02H
0065 EE                MOV     A,R6
0066 9400              SUBB    A,#00H
0068 4037              JC      ?C0043
006A 900000      R     MOV     DPTR,#wakeupTime
006D E0                MOVX    A,@DPTR
006E FE                MOV     R6,A
006F A3                INC     DPTR
0070 E0                MOVX    A,@DPTR
0071 FF                MOV     R7,A
0072 D3                SETB    C
0073 EF                MOV     A,R7
0074 940D              SUBB    A,#0DH
0076 EE                MOV     A,R6
0077 9400              SUBB    A,#00H
0079 5026              JNC     ?C0043
                                           ; SOURCE LINE # 578
                                           ; SOURCE LINE # 580
007B 900000      R     MOV     DPTR,#wakeupTime
007E E0                MOVX    A,@DPTR
007F FE                MOV     R6,A
0080 A3                INC     DPTR
0081 E0                MOVX    A,@DPTR
0082 FF                MOV     R7,A
0083 EF                MOV     A,R7
0084 14                DEC     A
0085 FF                MOV     R7,A
0086 EF                MOV     A,R7
0087 540F              ANL     A,#0FH
0089 FF                MOV     R7,A
008A 120000      R     LCALL   _CyPmCtwSetInterval
                                           ; SOURCE LINE # 583
008D 900000      R     MOV     DPTR,#wakeupSource
0090 E0                MOVX    A,@DPTR
0091 FE                MOV     R6,A
0092 A3                INC     DPTR
0093 E0                MOVX    A,@DPTR
0094 FF                MOV     R7,A
0095 EE                MOV     A,R6
0096 4408              ORL     A,#08H
0098 FE                MOV     R6,A
0099 900000      R     MOV     DPTR,#wakeupSource
009C EE                MOV     A,R6
009D F0                MOVX    @DPTR,A
009E A3                INC     DPTR
009F EF                MOV     A,R7
00A0 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 584
00A1         ?C0043:
                                           ; SOURCE LINE # 587
00A1 900000      R     MOV     DPTR,#wakeupTime
00A4 E0                MOVX    A,@DPTR
00A5 FE                MOV     R6,A
00A6 A3                INC     DPTR
00A7 E0                MOVX    A,@DPTR
00A8 FF                MOV     R7,A
C51 COMPILER V9.03   CYPM                                                                  04/04/2015 14:09:13 PAGE 55  

00A9 EF                MOV     A,R7
00AA 6401              XRL     A,#01H
00AC 4E                ORL     A,R6
00AD 7017              JNZ     ?C0044
                                           ; SOURCE LINE # 588
                                           ; SOURCE LINE # 590
00AF 120000      R     LCALL   CyPmOppsSet
                                           ; SOURCE LINE # 593
00B2 900000      R     MOV     DPTR,#wakeupSource
00B5 E0                MOVX    A,@DPTR
00B6 FE                MOV     R6,A
00B7 A3                INC     DPTR
00B8 E0                MOVX    A,@DPTR
00B9 FF                MOV     R7,A
00BA EE                MOV     A,R6
00BB 4408              ORL     A,#08H
00BD FE                MOV     R6,A
00BE 900000      R     MOV     DPTR,#wakeupSource
00C1 EE                MOV     A,R6
00C2 F0                MOVX    @DPTR,A
00C3 A3                INC     DPTR
00C4 EF                MOV     A,R7
00C5 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 594
00C6         ?C0044:
                                           ; SOURCE LINE # 603
00C6 904398            MOV     DPTR,#04398H
00C9 E0                MOVX    A,@DPTR
00CA FF                MOV     R7,A
00CB 900000      R     MOV     DPTR,#cyPmBackup+08H
00CE EF                MOV     A,R7
00CF F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 604
00D0 900000      R     MOV     DPTR,#wakeupSource
00D3 E0                MOVX    A,@DPTR
00D4 FE                MOV     R6,A
00D5 A3                INC     DPTR
00D6 E0                MOVX    A,@DPTR
00D7 FF                MOV     R7,A
00D8 EE                MOV     A,R6
00D9 C4                SWAP    A
00DA F8                MOV     R0,A
00DB 54F0              ANL     A,#0F0H
00DD C8                XCH     A,R0
00DE 68                XRL     A,R0
00DF FE                MOV     R6,A
00E0 EF                MOV     A,R7
00E1 C4                SWAP    A
00E2 540F              ANL     A,#0FH
00E4 48                ORL     A,R0
00E5 FF                MOV     R7,A
00E6 904398            MOV     DPTR,#04398H
00E9 EF                MOV     A,R7
00EA F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 607
00EB 904399            MOV     DPTR,#04399H
00EE E0                MOVX    A,@DPTR
00EF FF                MOV     R7,A
00F0 900000      R     MOV     DPTR,#cyPmBackup+09H
00F3 EF                MOV     A,R7
00F4 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 608
C51 COMPILER V9.03   CYPM                                                                  04/04/2015 14:09:13 PAGE 56  

00F5 900000      R     MOV     DPTR,#wakeupSource
00F8 E0                MOVX    A,@DPTR
00F9 FE                MOV     R6,A
00FA A3                INC     DPTR
00FB E0                MOVX    A,@DPTR
00FC FF                MOV     R7,A
00FD EF                MOV     A,R7
00FE 540F              ANL     A,#0FH
0100 FF                MOV     R7,A
0101 904399            MOV     DPTR,#04399H
0104 EF                MOV     A,R7
0105 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 611
0106 90439A            MOV     DPTR,#0439AH
0109 E0                MOVX    A,@DPTR
010A FF                MOV     R7,A
010B 900000      R     MOV     DPTR,#cyPmBackup+0AH
010E EF                MOV     A,R7
010F F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 612
0110 900000      R     MOV     DPTR,#wakeupSource
0113 E0                MOVX    A,@DPTR
0114 FE                MOV     R6,A
0115 A3                INC     DPTR
0116 E0                MOVX    A,@DPTR
0117 FF                MOV     R7,A
0118 EE                MOV     A,R6
0119 C4                SWAP    A
011A 540F              ANL     A,#0FH
011C FF                MOV     R7,A
011D 7E00              MOV     R6,#00H
011F EF                MOV     A,R7
0120 5401              ANL     A,#01H
0122 FF                MOV     R7,A
0123 90439A            MOV     DPTR,#0439AH
0126 EF                MOV     A,R7
0127 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 617
0128 904393            MOV     DPTR,#04393H
012B E0                MOVX    A,@DPTR
012C FF                MOV     R7,A
012D EF                MOV     A,R7
012E 54F8              ANL     A,#0F8H
0130 FF                MOV     R7,A
0131 EF                MOV     A,R7
0132 4401              ORL     A,#01H
0134 FF                MOV     R7,A
0135 904393            MOV     DPTR,#04393H
0138 EF                MOV     A,R7
0139 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 620
013A 904393            MOV     DPTR,#04393H
013D E0                MOVX    A,@DPTR
013E FF                MOV     R7,A
                                           ; SOURCE LINE # 623
013F 00                NOP     
                                           ; SOURCE LINE # 624
0140 00                NOP     
                                           ; SOURCE LINE # 635
0141 900000      R     MOV     DPTR,#cyPmBackup+08H
0144 E0                MOVX    A,@DPTR
0145 FF                MOV     R7,A
C51 COMPILER V9.03   CYPM                                                                  04/04/2015 14:09:13 PAGE 57  

0146 904398            MOV     DPTR,#04398H
0149 EF                MOV     A,R7
014A F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 636
014B 900000      R     MOV     DPTR,#cyPmBackup+09H
014E E0                MOVX    A,@DPTR
014F FF                MOV     R7,A
0150 904399            MOV     DPTR,#04399H
0153 EF                MOV     A,R7
0154 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 637
0155 900000      R     MOV     DPTR,#cyPmBackup+0AH
0158 E0                MOVX    A,@DPTR
0159 FF                MOV     R7,A
015A 90439A            MOV     DPTR,#0439AH
015D EF                MOV     A,R7
015E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 640
015F         ?C0045:
015F 22                RET     
             ; FUNCTION _CyPmAltAct (END)

             ; FUNCTION _CyPmSleep (BEGIN)
                                           ; SOURCE LINE # 766
0000 900000      R     MOV     DPTR,#wakeupTime
0003 EF                MOV     A,R7
0004 F0                MOVX    @DPTR,A
0005 900000      R     MOV     DPTR,#wakeupSource
0008 EC                MOV     A,R4
0009 F0                MOVX    @DPTR,A
000A A3                INC     DPTR
000B ED                MOV     A,R5
000C F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 767
                                           ; SOURCE LINE # 771
000D 120000      E     LCALL   CyEnterCriticalSection
0010 900000      R     MOV     DPTR,#interruptState
0013 EF                MOV     A,R7
0014 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 777
0015 9046EC            MOV     DPTR,#046ECH
0018 E0                MOVX    A,@DPTR
0019 FF                MOV     R7,A
001A EF                MOV     A,R7
001B C3                CLR     C
001C 9405              SUBB    A,#05H
001E 5039              JNC     ?C0046
                                           ; SOURCE LINE # 778
                                           ; SOURCE LINE # 779
0020 904689            MOV     DPTR,#04689H
0023 E0                MOVX    A,@DPTR
0024 FF                MOV     R7,A
0025 EF                MOV     A,R7
0026 5401              ANL     A,#01H
0028 FF                MOV     R7,A
0029 7E00              MOV     R6,#00H
002B EF                MOV     A,R7
002C 4E                ORL     A,R6
002D 7003              JNZ     ?C0048
002F D3                SETB    C
0030 8001              SJMP    ?C0049
0032         ?C0048:
C51 COMPILER V9.03   CYPM                                                                  04/04/2015 14:09:13 PAGE 58  

0032 C3                CLR     C
0033         ?C0049:
0033 4024              JC      ?C0046
0035 904689            MOV     DPTR,#04689H
0038 E0                MOVX    A,@DPTR
0039 FF                MOV     R7,A
003A EF                MOV     A,R7
003B 5401              ANL     A,#01H
003D FF                MOV     R7,A
003E 7E00              MOV     R6,#00H
0040 EF                MOV     A,R7
0041 4E                ORL     A,R6
0042 700A              JNZ     ?C0050
0044 7F01              MOV     R7,#01H
0046 7E00              MOV     R6,#00H
0048 7D00              MOV     R5,#00H
004A 7C00              MOV     R4,#00H
004C 8008              SJMP    ?C0051
004E         ?C0050:
004E 7F00              MOV     R7,#00H
0050 7E00              MOV     R6,#00H
0052 7D00              MOV     R5,#00H
0054 7C00              MOV     R4,#00H
0056         ?C0051:
0056 120000      E     LCALL   _?CyHalt
0059         ?C0047:
                                           ; SOURCE LINE # 780
0059         ?C0046:
                                           ; SOURCE LINE # 788
0059 904393            MOV     DPTR,#04393H
005C E0                MOVX    A,@DPTR
005D FF                MOV     R7,A
005E EF                MOV     A,R7
005F 5408              ANL     A,#08H
0061 FF                MOV     R7,A
0062 7E00              MOV     R6,#00H
0064 EF                MOV     A,R7
0065 4E                ORL     A,R6
0066 6003              JZ      $ + 5H
0068 020000      R     LJMP    ?C0054
                                           ; SOURCE LINE # 789
                                           ; SOURCE LINE # 791
006B 904683            MOV     DPTR,#04683H
006E E0                MOVX    A,@DPTR
006F FF                MOV     R7,A
0070 EF                MOV     A,R7
0071 541F              ANL     A,#01FH
0073 FF                MOV     R7,A
0074 EF                MOV     A,R7
0075 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 792
0076 8001              SJMP    ?C0053
0078         ?C0052:
                                           ; SOURCE LINE # 794
0078 22                RET     
                                           ; SOURCE LINE # 797
0079         ?C0053:
                                           ; SOURCE LINE # 817
0079 120000      R     LCALL   CyPmSlpSaveSet
                                           ; SOURCE LINE # 823
007C 900000      R     MOV     DPTR,#wakeupTime
007F E0                MOVX    A,@DPTR
C51 COMPILER V9.03   CYPM                                                                  04/04/2015 14:09:13 PAGE 59  

0080 FF                MOV     R7,A
0081 EF                MOV     A,R7
0082 C3                CLR     C
0083 9402              SUBB    A,#02H
0085 402E              JC      ?C0055
0087 900000      R     MOV     DPTR,#wakeupTime
008A E0                MOVX    A,@DPTR
008B FF                MOV     R7,A
008C EF                MOV     A,R7
008D D3                SETB    C
008E 940D              SUBB    A,#0DH
0090 5023              JNC     ?C0055
                                           ; SOURCE LINE # 824
                                           ; SOURCE LINE # 826
0092 900000      R     MOV     DPTR,#wakeupTime
0095 E0                MOVX    A,@DPTR
0096 FF                MOV     R7,A
0097 EF                MOV     A,R7
0098 14                DEC     A
0099 FF                MOV     R7,A
009A EF                MOV     A,R7
009B 540F              ANL     A,#0FH
009D FF                MOV     R7,A
009E 120000      R     LCALL   _CyPmCtwSetInterval
                                           ; SOURCE LINE # 829
00A1 900000      R     MOV     DPTR,#wakeupSource
00A4 E0                MOVX    A,@DPTR
00A5 FE                MOV     R6,A
00A6 A3                INC     DPTR
00A7 E0                MOVX    A,@DPTR
00A8 FF                MOV     R7,A
00A9 EE                MOV     A,R6
00AA 4408              ORL     A,#08H
00AC FE                MOV     R6,A
00AD 900000      R     MOV     DPTR,#wakeupSource
00B0 EE                MOV     A,R6
00B1 F0                MOVX    @DPTR,A
00B2 A3                INC     DPTR
00B3 EF                MOV     A,R7
00B4 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 830
00B5         ?C0055:
                                           ; SOURCE LINE # 833
00B5 900000      R     MOV     DPTR,#wakeupTime
00B8 E0                MOVX    A,@DPTR
00B9 FF                MOV     R7,A
00BA EF                MOV     A,R7
00BB B40117            CJNE    A,#01H,?C0056
                                           ; SOURCE LINE # 834
                                           ; SOURCE LINE # 836
00BE 120000      R     LCALL   CyPmOppsSet
                                           ; SOURCE LINE # 839
00C1 900000      R     MOV     DPTR,#wakeupSource
00C4 E0                MOVX    A,@DPTR
00C5 FE                MOV     R6,A
00C6 A3                INC     DPTR
00C7 E0                MOVX    A,@DPTR
00C8 FF                MOV     R7,A
00C9 EE                MOV     A,R6
00CA 4408              ORL     A,#08H
00CC FE                MOV     R6,A
00CD 900000      R     MOV     DPTR,#wakeupSource
C51 COMPILER V9.03   CYPM                                                                  04/04/2015 14:09:13 PAGE 60  

00D0 EE                MOV     A,R6
00D1 F0                MOVX    @DPTR,A
00D2 A3                INC     DPTR
00D3 EF                MOV     A,R7
00D4 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 840
00D5         ?C0056:
                                           ; SOURCE LINE # 850
00D5 904398            MOV     DPTR,#04398H
00D8 E0                MOVX    A,@DPTR
00D9 FF                MOV     R7,A
00DA 900000      R     MOV     DPTR,#cyPmBackup+08H
00DD EF                MOV     A,R7
00DE F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 851
00DF 900000      R     MOV     DPTR,#wakeupSource
00E2 E0                MOVX    A,@DPTR
00E3 FE                MOV     R6,A
00E4 A3                INC     DPTR
00E5 E0                MOVX    A,@DPTR
00E6 FF                MOV     R7,A
00E7 EE                MOV     A,R6
00E8 C4                SWAP    A
00E9 F8                MOV     R0,A
00EA 54F0              ANL     A,#0F0H
00EC C8                XCH     A,R0
00ED 68                XRL     A,R0
00EE FE                MOV     R6,A
00EF EF                MOV     A,R7
00F0 C4                SWAP    A
00F1 540F              ANL     A,#0FH
00F3 48                ORL     A,R0
00F4 FF                MOV     R7,A
00F5 904398            MOV     DPTR,#04398H
00F8 EF                MOV     A,R7
00F9 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 854
00FA 904399            MOV     DPTR,#04399H
00FD E0                MOVX    A,@DPTR
00FE FF                MOV     R7,A
00FF 900000      R     MOV     DPTR,#cyPmBackup+09H
0102 EF                MOV     A,R7
0103 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 855
0104 900000      R     MOV     DPTR,#wakeupSource
0107 E0                MOVX    A,@DPTR
0108 FE                MOV     R6,A
0109 A3                INC     DPTR
010A E0                MOVX    A,@DPTR
010B FF                MOV     R7,A
010C EF                MOV     A,R7
010D 540F              ANL     A,#0FH
010F FF                MOV     R7,A
0110 904399            MOV     DPTR,#04399H
0113 EF                MOV     A,R7
0114 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 858
0115 90439A            MOV     DPTR,#0439AH
0118 E0                MOVX    A,@DPTR
0119 FF                MOV     R7,A
011A 900000      R     MOV     DPTR,#cyPmBackup+0AH
011D EF                MOV     A,R7
C51 COMPILER V9.03   CYPM                                                                  04/04/2015 14:09:13 PAGE 61  

011E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 859
011F 900000      R     MOV     DPTR,#wakeupSource
0122 E0                MOVX    A,@DPTR
0123 FE                MOV     R6,A
0124 A3                INC     DPTR
0125 E0                MOVX    A,@DPTR
0126 FF                MOV     R7,A
0127 EE                MOV     A,R6
0128 C4                SWAP    A
0129 540F              ANL     A,#0FH
012B FF                MOV     R7,A
012C 7E00              MOV     R6,#00H
012E EF                MOV     A,R7
012F 5401              ANL     A,#01H
0131 FF                MOV     R7,A
0132 90439A            MOV     DPTR,#0439AH
0135 EF                MOV     A,R7
0136 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 865
0137 904200            MOV     DPTR,#04200H
013A E0                MOVX    A,@DPTR
013B FF                MOV     R7,A
013C EF                MOV     A,R7
013D 5407              ANL     A,#07H
013F FF                MOV     R7,A
0140 7E00              MOV     R6,#00H
0142 EF                MOV     A,R7
0143 4E                ORL     A,R6
0144 7008              JNZ     ?C0057
                                           ; SOURCE LINE # 866
                                           ; SOURCE LINE # 868
0146 900000      R     MOV     DPTR,#cyPmBackup+028H
0149 7401              MOV     A,#01H
014B F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 869
014C 801E              SJMP    ?C0058
014E         ?C0057:
                                           ; SOURCE LINE # 871
                                           ; SOURCE LINE # 873
014E 900000      R     MOV     DPTR,#cyPmBackup+028H
0151 E4                CLR     A
0152 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 876
0153 904200            MOV     DPTR,#04200H
0156 E0                MOVX    A,@DPTR
0157 FF                MOV     R7,A
0158 EF                MOV     A,R7
0159 5407              ANL     A,#07H
015B FF                MOV     R7,A
015C 900000      R     MOV     DPTR,#cyPmBackup+027H
015F EF                MOV     A,R7
0160 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 879
0161 904200            MOV     DPTR,#04200H
0164 E0                MOVX    A,@DPTR
0165 FF                MOV     R7,A
0166 EF                MOV     A,R7
0167 54F8              ANL     A,#0F8H
0169 FF                MOV     R7,A
016A EF                MOV     A,R7
016B F0                MOVX    @DPTR,A
C51 COMPILER V9.03   CYPM                                                                  04/04/2015 14:09:13 PAGE 62  

                                           ; SOURCE LINE # 880
016C         ?C0058:
                                           ; SOURCE LINE # 883
016C 904393            MOV     DPTR,#04393H
016F E0                MOVX    A,@DPTR
0170 FF                MOV     R7,A
0171 EF                MOV     A,R7
0172 54F8              ANL     A,#0F8H
0174 FF                MOV     R7,A
0175 EF                MOV     A,R7
0176 4403              ORL     A,#03H
0178 FF                MOV     R7,A
0179 904393            MOV     DPTR,#04393H
017C EF                MOV     A,R7
017D F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 886
017E 904393            MOV     DPTR,#04393H
0181 E0                MOVX    A,@DPTR
0182 FF                MOV     R7,A
                                           ; SOURCE LINE # 889
0183 00                NOP     
                                           ; SOURCE LINE # 890
0184 00                NOP     
                                           ; SOURCE LINE # 898
0185 900000      R     MOV     DPTR,#cyPmBackup+028H
0188 E0                MOVX    A,@DPTR
0189 FF                MOV     R7,A
018A EF                MOV     A,R7
018B 6401              XRL     A,#01H
018D 6016              JZ      ?C0059
                                           ; SOURCE LINE # 899
                                           ; SOURCE LINE # 900
018F 904200            MOV     DPTR,#04200H
0192 E0                MOVX    A,@DPTR
0193 FF                MOV     R7,A
0194 EF                MOV     A,R7
0195 54F8              ANL     A,#0F8H
0197 FF                MOV     R7,A
0198 900000      R     MOV     DPTR,#cyPmBackup+027H
019B E0                MOVX    A,@DPTR
019C FE                MOV     R6,A
019D EF                MOV     A,R7
019E 4E                ORL     A,R6
019F FF                MOV     R7,A
01A0 904200            MOV     DPTR,#04200H
01A3 EF                MOV     A,R7
01A4 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 902
01A5         ?C0059:
                                           ; SOURCE LINE # 906
01A5 120000      R     LCALL   CyPmSlpRestore
                                           ; SOURCE LINE # 913
01A8 900000      R     MOV     DPTR,#cyPmBackup+08H
01AB E0                MOVX    A,@DPTR
01AC FF                MOV     R7,A
01AD 904398            MOV     DPTR,#04398H
01B0 EF                MOV     A,R7
01B1 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 914
01B2 900000      R     MOV     DPTR,#cyPmBackup+09H
01B5 E0                MOVX    A,@DPTR
01B6 FF                MOV     R7,A
C51 COMPILER V9.03   CYPM                                                                  04/04/2015 14:09:13 PAGE 63  

01B7 904399            MOV     DPTR,#04399H
01BA EF                MOV     A,R7
01BB F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 915
01BC 900000      R     MOV     DPTR,#cyPmBackup+0AH
01BF E0                MOVX    A,@DPTR
01C0 FF                MOV     R7,A
01C1 90439A            MOV     DPTR,#0439AH
01C4 EF                MOV     A,R7
01C5 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 920
01C6 900000      R     MOV     DPTR,#interruptState
01C9 E0                MOVX    A,@DPTR
01CA FF                MOV     R7,A
01CB 120000      E     LCALL   _CyExitCriticalSection
                                           ; SOURCE LINE # 921
01CE         ?C0054:
01CE 22                RET     
             ; FUNCTION _CyPmSleep (END)

             ; FUNCTION CyPmHibernate (BEGIN)
                                           ; SOURCE LINE # 973
                                           ; SOURCE LINE # 974
                                           ; SOURCE LINE # 978
0000 120000      E     LCALL   CyEnterCriticalSection
0003 900000      R     MOV     DPTR,#interruptState
0006 EF                MOV     A,R7
0007 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 989
0008 904393            MOV     DPTR,#04393H
000B E0                MOVX    A,@DPTR
000C FF                MOV     R7,A
000D EF                MOV     A,R7
000E 5408              ANL     A,#08H
0010 FF                MOV     R7,A
0011 7E00              MOV     R6,#00H
0013 EF                MOV     A,R7
0014 4E                ORL     A,R6
0015 6003              JZ      $ + 5H
0017 020000      R     LJMP    ?C0062
                                           ; SOURCE LINE # 990
                                           ; SOURCE LINE # 992
001A 904683            MOV     DPTR,#04683H
001D E0                MOVX    A,@DPTR
001E FF                MOV     R7,A
001F EF                MOV     A,R7
0020 541F              ANL     A,#01FH
0022 FF                MOV     R7,A
0023 EF                MOV     A,R7
0024 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 993
0025 8001              SJMP    ?C0061
0027         ?C0060:
                                           ; SOURCE LINE # 995
0027 22                RET     
                                           ; SOURCE LINE # 998
0028         ?C0061:
                                           ; SOURCE LINE # 1003
0028 120000      R     LCALL   CyPmHibSaveSet
                                           ; SOURCE LINE # 1009
002B 904398            MOV     DPTR,#04398H
002E E0                MOVX    A,@DPTR
C51 COMPILER V9.03   CYPM                                                                  04/04/2015 14:09:13 PAGE 64  

002F FF                MOV     R7,A
0030 900000      R     MOV     DPTR,#cyPmBackup+08H
0033 EF                MOV     A,R7
0034 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1010
0035 904398            MOV     DPTR,#04398H
0038 7404              MOV     A,#04H
003A F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1012
003B 904399            MOV     DPTR,#04399H
003E E0                MOVX    A,@DPTR
003F FF                MOV     R7,A
0040 900000      R     MOV     DPTR,#cyPmBackup+09H
0043 EF                MOV     A,R7
0044 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1013
0045 904399            MOV     DPTR,#04399H
0048 E4                CLR     A
0049 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1015
004A 90439A            MOV     DPTR,#0439AH
004D E0                MOVX    A,@DPTR
004E FF                MOV     R7,A
004F 900000      R     MOV     DPTR,#cyPmBackup+0AH
0052 EF                MOV     A,R7
0053 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1016
0054 90439A            MOV     DPTR,#0439AH
0057 E4                CLR     A
0058 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1022
0059 904200            MOV     DPTR,#04200H
005C E0                MOVX    A,@DPTR
005D FF                MOV     R7,A
005E EF                MOV     A,R7
005F 5407              ANL     A,#07H
0061 FF                MOV     R7,A
0062 7E00              MOV     R6,#00H
0064 EF                MOV     A,R7
0065 4E                ORL     A,R6
0066 7008              JNZ     ?C0063
                                           ; SOURCE LINE # 1023
                                           ; SOURCE LINE # 1025
0068 900000      R     MOV     DPTR,#cyPmBackup+028H
006B 7401              MOV     A,#01H
006D F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1026
006E 801E              SJMP    ?C0064
0070         ?C0063:
                                           ; SOURCE LINE # 1028
                                           ; SOURCE LINE # 1030
0070 900000      R     MOV     DPTR,#cyPmBackup+028H
0073 E4                CLR     A
0074 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1033
0075 904200            MOV     DPTR,#04200H
0078 E0                MOVX    A,@DPTR
0079 FF                MOV     R7,A
007A EF                MOV     A,R7
007B 5407              ANL     A,#07H
007D FF                MOV     R7,A
007E 900000      R     MOV     DPTR,#cyPmBackup+027H
C51 COMPILER V9.03   CYPM                                                                  04/04/2015 14:09:13 PAGE 65  

0081 EF                MOV     A,R7
0082 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1036
0083 904200            MOV     DPTR,#04200H
0086 E0                MOVX    A,@DPTR
0087 FF                MOV     R7,A
0088 EF                MOV     A,R7
0089 54F8              ANL     A,#0F8H
008B FF                MOV     R7,A
008C EF                MOV     A,R7
008D F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1037
008E         ?C0064:
                                           ; SOURCE LINE # 1041
008E 904393            MOV     DPTR,#04393H
0091 E0                MOVX    A,@DPTR
0092 FF                MOV     R7,A
0093 EF                MOV     A,R7
0094 54F8              ANL     A,#0F8H
0096 FF                MOV     R7,A
0097 EF                MOV     A,R7
0098 4404              ORL     A,#04H
009A FF                MOV     R7,A
009B 904393            MOV     DPTR,#04393H
009E EF                MOV     A,R7
009F F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1044
00A0 904393            MOV     DPTR,#04393H
00A3 E0                MOVX    A,@DPTR
00A4 FF                MOV     R7,A
                                           ; SOURCE LINE # 1047
00A5 00                NOP     
                                           ; SOURCE LINE # 1048
00A6 00                NOP     
                                           ; SOURCE LINE # 1057
00A7 900000      R     MOV     DPTR,#cyPmBackup+028H
00AA E0                MOVX    A,@DPTR
00AB FF                MOV     R7,A
00AC EF                MOV     A,R7
00AD 6401              XRL     A,#01H
00AF 6016              JZ      ?C0065
                                           ; SOURCE LINE # 1058
                                           ; SOURCE LINE # 1059
00B1 904200            MOV     DPTR,#04200H
00B4 E0                MOVX    A,@DPTR
00B5 FF                MOV     R7,A
00B6 EF                MOV     A,R7
00B7 54F8              ANL     A,#0F8H
00B9 FF                MOV     R7,A
00BA 900000      R     MOV     DPTR,#cyPmBackup+027H
00BD E0                MOVX    A,@DPTR
00BE FE                MOV     R6,A
00BF EF                MOV     A,R7
00C0 4E                ORL     A,R6
00C1 FF                MOV     R7,A
00C2 904200            MOV     DPTR,#04200H
00C5 EF                MOV     A,R7
00C6 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1061
00C7         ?C0065:
                                           ; SOURCE LINE # 1065
00C7 120000      R     LCALL   CyPmHibRestore
C51 COMPILER V9.03   CYPM                                                                  04/04/2015 14:09:13 PAGE 66  

                                           ; SOURCE LINE # 1071
00CA 900000      R     MOV     DPTR,#cyPmBackup+08H
00CD E0                MOVX    A,@DPTR
00CE FF                MOV     R7,A
00CF 904398            MOV     DPTR,#04398H
00D2 EF                MOV     A,R7
00D3 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1072
00D4 900000      R     MOV     DPTR,#cyPmBackup+09H
00D7 E0                MOVX    A,@DPTR
00D8 FF                MOV     R7,A
00D9 904399            MOV     DPTR,#04399H
00DC EF                MOV     A,R7
00DD F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1073
00DE 900000      R     MOV     DPTR,#cyPmBackup+0AH
00E1 E0                MOVX    A,@DPTR
00E2 FF                MOV     R7,A
00E3 90439A            MOV     DPTR,#0439AH
00E6 EF                MOV     A,R7
00E7 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1078
00E8 900000      R     MOV     DPTR,#interruptState
00EB E0                MOVX    A,@DPTR
00EC FF                MOV     R7,A
00ED 120000      E     LCALL   _CyExitCriticalSection
                                           ; SOURCE LINE # 1079
00F0         ?C0062:
00F0 22                RET     
             ; FUNCTION CyPmHibernate (END)

             ; FUNCTION _CyPmReadStatus (BEGIN)
                                           ; SOURCE LINE # 1111
0000 900000      R     MOV     DPTR,#mask
0003 EF                MOV     A,R7
0004 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1112
                                           ; SOURCE LINE # 1118
0005 120000      E     LCALL   CyEnterCriticalSection
0008 900000      R     MOV     DPTR,#interruptState
000B EF                MOV     A,R7
000C F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1121
000D 900000      R     MOV     DPTR,#interruptStatus
0010 E0                MOVX    A,@DPTR
0011 FF                MOV     R7,A
0012 904390            MOV     DPTR,#04390H
0015 E0                MOVX    A,@DPTR
0016 FE                MOV     R6,A
0017 EF                MOV     A,R7
0018 4E                ORL     A,R6
0019 FF                MOV     R7,A
001A 900000      R     MOV     DPTR,#interruptStatus
001D EF                MOV     A,R7
001E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1122
001F 900000      R     MOV     DPTR,#interruptStatus
0022 E0                MOVX    A,@DPTR
0023 FF                MOV     R7,A
0024 900000      R     MOV     DPTR,#tmpStatus
0027 EF                MOV     A,R7
0028 F0                MOVX    @DPTR,A
C51 COMPILER V9.03   CYPM                                                                  04/04/2015 14:09:13 PAGE 67  

                                           ; SOURCE LINE # 1123
0029 900000      R     MOV     DPTR,#interruptStatus
002C E0                MOVX    A,@DPTR
002D FF                MOV     R7,A
002E 900000      R     MOV     DPTR,#mask
0031 E0                MOVX    A,@DPTR
0032 FE                MOV     R6,A
0033 EE                MOV     A,R6
0034 F4                CPL     A
0035 FE                MOV     R6,A
0036 EF                MOV     A,R7
0037 5E                ANL     A,R6
0038 FF                MOV     R7,A
0039 900000      R     MOV     DPTR,#interruptStatus
003C EF                MOV     A,R7
003D F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1126
003E 900000      R     MOV     DPTR,#interruptState
0041 E0                MOVX    A,@DPTR
0042 FF                MOV     R7,A
0043 120000      E     LCALL   _CyExitCriticalSection
                                           ; SOURCE LINE # 1128
0046 900000      R     MOV     DPTR,#tmpStatus
0049 E0                MOVX    A,@DPTR
004A FF                MOV     R7,A
                                           ; SOURCE LINE # 1129
004B         ?C0066:
004B 22                RET     
             ; FUNCTION _CyPmReadStatus (END)

             ; FUNCTION CyPmHibSaveSet (BEGIN)
                                           ; SOURCE LINE # 1154
                                           ; SOURCE LINE # 1155
                                           ; SOURCE LINE # 1157
0000 904331            MOV     DPTR,#04331H
0003 E0                MOVX    A,@DPTR
0004 FF                MOV     R7,A
0005 EF                MOV     A,R7
0006 5404              ANL     A,#04H
0008 FF                MOV     R7,A
0009 7E00              MOV     R6,#00H
000B EF                MOV     A,R7
000C 4E                ORL     A,R6
000D 600B              JZ      ?C0068
                                           ; SOURCE LINE # 1158
                                           ; SOURCE LINE # 1177
000F 904331            MOV     DPTR,#04331H
0012 E0                MOVX    A,@DPTR
0013 FF                MOV     R7,A
0014 EF                MOV     A,R7
0015 54FB              ANL     A,#0FBH
0017 FF                MOV     R7,A
0018 EF                MOV     A,R7
0019 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1178
001A         ?C0067:
                                           ; SOURCE LINE # 1180
                                           ; SOURCE LINE # 1187
001A         ?C0068:
                                           ; SOURCE LINE # 1193
001A 7F01              MOV     R7,#01H
001C 120000      E     LCALL   _CyILO_SetPowerMode
C51 COMPILER V9.03   CYPM                                                                  04/04/2015 14:09:13 PAGE 68  

001F 900000      R     MOV     DPTR,#cyPmBackup
0022 EF                MOV     A,R7
0023 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1196
0024 904300            MOV     DPTR,#04300H
0027 E0                MOVX    A,@DPTR
0028 FF                MOV     R7,A
0029 EF                MOV     A,R7
002A 5402              ANL     A,#02H
002C FF                MOV     R7,A
002D 7E00              MOV     R6,#00H
002F EF                MOV     A,R7
0030 4E                ORL     A,R6
0031 7004              JNZ     ?C0069
0033 7F00              MOV     R7,#00H
0035 8002              SJMP    ?C0070
0037         ?C0069:
0037 7F01              MOV     R7,#01H
0039         ?C0070:
0039 900000      R     MOV     DPTR,#cyPmBackup+01H
003C EF                MOV     A,R7
003D F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1200
003E 904300            MOV     DPTR,#04300H
0041 E0                MOVX    A,@DPTR
0042 FF                MOV     R7,A
0043 EF                MOV     A,R7
0044 5404              ANL     A,#04H
0046 FF                MOV     R7,A
0047 7E00              MOV     R6,#00H
0049 EF                MOV     A,R7
004A 4E                ORL     A,R6
004B 7004              JNZ     ?C0071
004D 7F00              MOV     R7,#00H
004F 8002              SJMP    ?C0072
0051         ?C0071:
0051 7F01              MOV     R7,#01H
0053         ?C0072:
0053 900000      R     MOV     DPTR,#cyPmBackup+02H
0056 EF                MOV     A,R7
0057 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1204
0058 904683            MOV     DPTR,#04683H
005B E0                MOVX    A,@DPTR
005C FF                MOV     R7,A
005D EF                MOV     A,R7
005E 5410              ANL     A,#010H
0060 FF                MOV     R7,A
0061 7E00              MOV     R6,#00H
0063 EF                MOV     A,R7
0064 4E                ORL     A,R6
0065 7012              JNZ     ?C0073
                                           ; SOURCE LINE # 1205
                                           ; SOURCE LINE # 1207
0067 900000      R     MOV     DPTR,#cyPmBackup+05H
006A E4                CLR     A
006B F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1210
006C 904683            MOV     DPTR,#04683H
006F E0                MOVX    A,@DPTR
0070 FF                MOV     R7,A
0071 EF                MOV     A,R7
C51 COMPILER V9.03   CYPM                                                                  04/04/2015 14:09:13 PAGE 69  

0072 4410              ORL     A,#010H
0074 FF                MOV     R7,A
0075 EF                MOV     A,R7
0076 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1211
0077 8006              SJMP    ?C0074
0079         ?C0073:
                                           ; SOURCE LINE # 1213
                                           ; SOURCE LINE # 1215
0079 900000      R     MOV     DPTR,#cyPmBackup+05H
007C 7401              MOV     A,#01H
007E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1216
007F         ?C0074:
                                           ; SOURCE LINE # 1237
007F 9046F5            MOV     DPTR,#046F5H
0082 E0                MOVX    A,@DPTR
0083 FF                MOV     R7,A
0084 EF                MOV     A,R7
0085 5407              ANL     A,#07H
0087 FF                MOV     R7,A
0088 900000      R     MOV     DPTR,#cyPmBackup+03H
008B EF                MOV     A,R7
008C F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1240
008D 9046F5            MOV     DPTR,#046F5H
0090 E0                MOVX    A,@DPTR
0091 FF                MOV     R7,A
0092 EF                MOV     A,R7
0093 54F8              ANL     A,#0F8H
0095 FF                MOV     R7,A
0096 EF                MOV     A,R7
0097 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1244
0098 120000      R     LCALL   CyPmHibSlpSaveSet
                                           ; SOURCE LINE # 1245
009B         ?C0075:
009B 22                RET     
             ; FUNCTION CyPmHibSaveSet (END)

             ; FUNCTION CyPmHibRestore (BEGIN)
                                           ; SOURCE LINE # 1268
                                           ; SOURCE LINE # 1269
                                           ; SOURCE LINE # 1272
0000 9046F5            MOV     DPTR,#046F5H
0003 C083              PUSH    DPH
0005 C082              PUSH    DPL
0007 E0                MOVX    A,@DPTR
0008 FF                MOV     R7,A
0009 900000      R     MOV     DPTR,#cyPmBackup+03H
000C E0                MOVX    A,@DPTR
000D FE                MOV     R6,A
000E EF                MOV     A,R7
000F 4E                ORL     A,R6
0010 FF                MOV     R7,A
0011 D082              POP     DPL
0013 D083              POP     DPH
0015 EF                MOV     A,R7
0016 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1275
0017 120000      R     LCALL   CyPmHibSlpRestore
                                           ; SOURCE LINE # 1292
C51 COMPILER V9.03   CYPM                                                                  04/04/2015 14:09:13 PAGE 70  

001A 900000      R     MOV     DPTR,#cyPmBackup+01H
001D E0                MOVX    A,@DPTR
001E FF                MOV     R7,A
001F EF                MOV     A,R7
0020 B40103            CJNE    A,#01H,?C0076
                                           ; SOURCE LINE # 1293
                                           ; SOURCE LINE # 1295
0023 120000      E     LCALL   CyILO_Start1K
                                           ; SOURCE LINE # 1296
0026         ?C0076:
                                           ; SOURCE LINE # 1299
0026 900000      R     MOV     DPTR,#cyPmBackup+02H
0029 E0                MOVX    A,@DPTR
002A FF                MOV     R7,A
002B EF                MOV     A,R7
002C B40103            CJNE    A,#01H,?C0077
                                           ; SOURCE LINE # 1300
                                           ; SOURCE LINE # 1302
002F 120000      E     LCALL   CyILO_Start100K
                                           ; SOURCE LINE # 1303
0032         ?C0077:
                                           ; SOURCE LINE # 1306
0032 900000      R     MOV     DPTR,#cyPmBackup
0035 E0                MOVX    A,@DPTR
0036 FF                MOV     R7,A
0037 120000      E     LCALL   _CyILO_SetPowerMode
                                           ; SOURCE LINE # 1309
003A 900000      R     MOV     DPTR,#cyPmBackup+05H
003D E0                MOVX    A,@DPTR
003E FF                MOV     R7,A
003F EF                MOV     A,R7
0040 700B              JNZ     ?C0079
                                           ; SOURCE LINE # 1310
                                           ; SOURCE LINE # 1312
0042 904683            MOV     DPTR,#04683H
0045 E0                MOVX    A,@DPTR
0046 FF                MOV     R7,A
0047 EF                MOV     A,R7
0048 54EF              ANL     A,#0EFH
004A FF                MOV     R7,A
004B EF                MOV     A,R7
004C F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1313
004D         ?C0078:
                                           ; SOURCE LINE # 1316
004D         ?C0079:
004D 22                RET     
             ; FUNCTION CyPmHibRestore (END)

             ; FUNCTION _CyPmCtwSetInterval (BEGIN)
                                           ; SOURCE LINE # 1339
0000 900000      R     MOV     DPTR,#ctwInterval
0003 EF                MOV     A,R7
0004 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1340
                                           ; SOURCE LINE # 1342
0005 904382            MOV     DPTR,#04382H
0008 E0                MOVX    A,@DPTR
0009 FF                MOV     R7,A
000A EF                MOV     A,R7
000B 54F7              ANL     A,#0F7H
000D FF                MOV     R7,A
C51 COMPILER V9.03   CYPM                                                                  04/04/2015 14:09:13 PAGE 71  

000E EF                MOV     A,R7
000F F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1345
0010 120000      E     LCALL   CyILO_Start1K
                                           ; SOURCE LINE # 1348
0013 904382            MOV     DPTR,#04382H
0016 E0                MOVX    A,@DPTR
0017 FF                MOV     R7,A
0018 EF                MOV     A,R7
0019 5404              ANL     A,#04H
001B FF                MOV     R7,A
001C 7E00              MOV     R6,#00H
001E EF                MOV     A,R7
001F 4E                ORL     A,R6
0020 602F              JZ      ?C0080
                                           ; SOURCE LINE # 1349
                                           ; SOURCE LINE # 1351
0022 900000      R     MOV     DPTR,#ctwInterval
0025 E0                MOVX    A,@DPTR
0026 FF                MOV     R7,A
0027 904381            MOV     DPTR,#04381H
002A E0                MOVX    A,@DPTR
002B FE                MOV     R6,A
002C EE                MOV     A,R6
002D 6F                XRL     A,R7
002E 6044              JZ      ?C0084
                                           ; SOURCE LINE # 1352
                                           ; SOURCE LINE # 1354
0030 904382            MOV     DPTR,#04382H
0033 E0                MOVX    A,@DPTR
0034 FF                MOV     R7,A
0035 EF                MOV     A,R7
0036 54FB              ANL     A,#0FBH
0038 FF                MOV     R7,A
0039 EF                MOV     A,R7
003A F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1355
003B 900000      R     MOV     DPTR,#ctwInterval
003E E0                MOVX    A,@DPTR
003F FF                MOV     R7,A
0040 904381            MOV     DPTR,#04381H
0043 EF                MOV     A,R7
0044 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1356
0045 904382            MOV     DPTR,#04382H
0048 E0                MOVX    A,@DPTR
0049 FF                MOV     R7,A
004A EF                MOV     A,R7
004B 4404              ORL     A,#04H
004D FF                MOV     R7,A
004E EF                MOV     A,R7
004F F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1357
0050         ?C0081:
                                           ; SOURCE LINE # 1358
0050 22                RET     
0051         ?C0080:
                                           ; SOURCE LINE # 1360
                                           ; SOURCE LINE # 1362
0051 900000      R     MOV     DPTR,#ctwInterval
0054 E0                MOVX    A,@DPTR
0055 FF                MOV     R7,A
C51 COMPILER V9.03   CYPM                                                                  04/04/2015 14:09:13 PAGE 72  

0056 904381            MOV     DPTR,#04381H
0059 E0                MOVX    A,@DPTR
005A FE                MOV     R6,A
005B EE                MOV     A,R6
005C 6F                XRL     A,R7
005D 600A              JZ      ?C0083
                                           ; SOURCE LINE # 1363
                                           ; SOURCE LINE # 1365
005F 900000      R     MOV     DPTR,#ctwInterval
0062 E0                MOVX    A,@DPTR
0063 FF                MOV     R7,A
0064 904381            MOV     DPTR,#04381H
0067 EF                MOV     A,R7
0068 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1366
0069         ?C0083:
                                           ; SOURCE LINE # 1369
0069 904382            MOV     DPTR,#04382H
006C E0                MOVX    A,@DPTR
006D FF                MOV     R7,A
006E EF                MOV     A,R7
006F 4404              ORL     A,#04H
0071 FF                MOV     R7,A
0072 EF                MOV     A,R7
0073 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1370
0074         ?C0082:
                                           ; SOURCE LINE # 1371
0074         ?C0084:
0074 22                RET     
             ; FUNCTION _CyPmCtwSetInterval (END)

             ; FUNCTION CyPmOppsSet (BEGIN)
                                           ; SOURCE LINE # 1391
                                           ; SOURCE LINE # 1392
                                           ; SOURCE LINE # 1394
0000 904308            MOV     DPTR,#04308H
0003 E0                MOVX    A,@DPTR
0004 FF                MOV     R7,A
0005 EF                MOV     A,R7
0006 5401              ANL     A,#01H
0008 FF                MOV     R7,A
0009 7E00              MOV     R6,#00H
000B EF                MOV     A,R7
000C 4E                ORL     A,R6
000D 7003              JNZ     ?C0085
                                           ; SOURCE LINE # 1395
                                           ; SOURCE LINE # 1397
000F 120000      E     LCALL   CyXTAL_32KHZ_Start
                                           ; SOURCE LINE # 1398
0012         ?C0085:
                                           ; SOURCE LINE # 1401
0012 904382            MOV     DPTR,#04382H
0015 E0                MOVX    A,@DPTR
0016 FF                MOV     R7,A
0017 EF                MOV     A,R7
0018 54DF              ANL     A,#0DFH
001A FF                MOV     R7,A
001B EF                MOV     A,R7
001C F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1404
001D 904382            MOV     DPTR,#04382H
C51 COMPILER V9.03   CYPM                                                                  04/04/2015 14:09:13 PAGE 73  

0020 E0                MOVX    A,@DPTR
0021 FF                MOV     R7,A
0022 EF                MOV     A,R7
0023 4410              ORL     A,#010H
0025 FF                MOV     R7,A
0026 EF                MOV     A,R7
0027 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1405
0028         ?C0086:
0028 22                RET     
             ; FUNCTION CyPmOppsSet (END)

             ; FUNCTION _CyPmFtwSetInterval (BEGIN)
                                           ; SOURCE LINE # 1428
0000 900000      R     MOV     DPTR,#ftwInterval
0003 EF                MOV     A,R7
0004 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1429
                                           ; SOURCE LINE # 1431
0005 904382            MOV     DPTR,#04382H
0008 E0                MOVX    A,@DPTR
0009 FF                MOV     R7,A
000A EF                MOV     A,R7
000B 54FD              ANL     A,#0FDH
000D FF                MOV     R7,A
000E EF                MOV     A,R7
000F F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1434
0010 120000      E     LCALL   CyILO_Start100K
                                           ; SOURCE LINE # 1437
0013 904382            MOV     DPTR,#04382H
0016 E0                MOVX    A,@DPTR
0017 FF                MOV     R7,A
0018 EF                MOV     A,R7
0019 5401              ANL     A,#01H
001B FF                MOV     R7,A
001C 7E00              MOV     R6,#00H
001E EF                MOV     A,R7
001F 4E                ORL     A,R6
0020 602F              JZ      ?C0087
                                           ; SOURCE LINE # 1438
                                           ; SOURCE LINE # 1440
0022 900000      R     MOV     DPTR,#ftwInterval
0025 E0                MOVX    A,@DPTR
0026 FF                MOV     R7,A
0027 904380            MOV     DPTR,#04380H
002A E0                MOVX    A,@DPTR
002B FE                MOV     R6,A
002C EE                MOV     A,R6
002D 6F                XRL     A,R7
002E 6044              JZ      ?C0091
                                           ; SOURCE LINE # 1441
                                           ; SOURCE LINE # 1443
0030 904382            MOV     DPTR,#04382H
0033 E0                MOVX    A,@DPTR
0034 FF                MOV     R7,A
0035 EF                MOV     A,R7
0036 54FE              ANL     A,#0FEH
0038 FF                MOV     R7,A
0039 EF                MOV     A,R7
003A F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1444
C51 COMPILER V9.03   CYPM                                                                  04/04/2015 14:09:13 PAGE 74  

003B 900000      R     MOV     DPTR,#ftwInterval
003E E0                MOVX    A,@DPTR
003F FF                MOV     R7,A
0040 904380            MOV     DPTR,#04380H
0043 EF                MOV     A,R7
0044 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1445
0045 904382            MOV     DPTR,#04382H
0048 E0                MOVX    A,@DPTR
0049 FF                MOV     R7,A
004A EF                MOV     A,R7
004B 4401              ORL     A,#01H
004D FF                MOV     R7,A
004E EF                MOV     A,R7
004F F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1446
0050         ?C0088:
                                           ; SOURCE LINE # 1447
0050 22                RET     
0051         ?C0087:
                                           ; SOURCE LINE # 1449
                                           ; SOURCE LINE # 1451
0051 900000      R     MOV     DPTR,#ftwInterval
0054 E0                MOVX    A,@DPTR
0055 FF                MOV     R7,A
0056 904380            MOV     DPTR,#04380H
0059 E0                MOVX    A,@DPTR
005A FE                MOV     R6,A
005B EE                MOV     A,R6
005C 6F                XRL     A,R7
005D 600A              JZ      ?C0090
                                           ; SOURCE LINE # 1452
                                           ; SOURCE LINE # 1454
005F 900000      R     MOV     DPTR,#ftwInterval
0062 E0                MOVX    A,@DPTR
0063 FF                MOV     R7,A
0064 904380            MOV     DPTR,#04380H
0067 EF                MOV     A,R7
0068 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1455
0069         ?C0090:
                                           ; SOURCE LINE # 1458
0069 904382            MOV     DPTR,#04382H
006C E0                MOVX    A,@DPTR
006D FF                MOV     R7,A
006E EF                MOV     A,R7
006F 4401              ORL     A,#01H
0071 FF                MOV     R7,A
0072 EF                MOV     A,R7
0073 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1459
0074         ?C0089:
                                           ; SOURCE LINE # 1460
0074         ?C0091:
0074 22                RET     
             ; FUNCTION _CyPmFtwSetInterval (END)

             ; FUNCTION CyPmSlpSaveSet (BEGIN)
                                           ; SOURCE LINE # 1588
                                           ; SOURCE LINE # 1589
                                           ; SOURCE LINE # 1657
0000 904689            MOV     DPTR,#04689H
C51 COMPILER V9.03   CYPM                                                                  04/04/2015 14:09:13 PAGE 75  

0003 E0                MOVX    A,@DPTR
0004 FF                MOV     R7,A
0005 900000      R     MOV     DPTR,#cyPmBackup+04H
0008 EF                MOV     A,R7
0009 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1660
000A 9046F5            MOV     DPTR,#046F5H
000D E0                MOVX    A,@DPTR
000E FF                MOV     R7,A
000F EF                MOV     A,R7
0010 5407              ANL     A,#07H
0012 FF                MOV     R7,A
0013 7E00              MOV     R6,#00H
0015 EF                MOV     A,R7
0016 4E                ORL     A,R6
0017 6031              JZ      ?C0092
                                           ; SOURCE LINE # 1662
                                           ; SOURCE LINE # 1664
0019 9046EC            MOV     DPTR,#046ECH
001C E0                MOVX    A,@DPTR
001D FF                MOV     R7,A
001E EF                MOV     A,R7
001F C3                CLR     C
0020 9405              SUBB    A,#05H
0022 5019              JNC     ?C0093
                                           ; SOURCE LINE # 1665
                                           ; SOURCE LINE # 1667
0024 904689            MOV     DPTR,#04689H
0027 743B              MOV     A,#03BH
0029 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1670
002A 904331            MOV     DPTR,#04331H
002D 7401              MOV     A,#01H
002F F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1673
0030 904331            MOV     DPTR,#04331H
0033 E0                MOVX    A,@DPTR
0034 FF                MOV     R7,A
0035 EF                MOV     A,R7
0036 4402              ORL     A,#02H
0038 FF                MOV     R7,A
0039 EF                MOV     A,R7
003A F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1674
003B 801E              SJMP    ?C0095
003D         ?C0093:
                                           ; SOURCE LINE # 1676
                                           ; SOURCE LINE # 1678
003D 904689            MOV     DPTR,#04689H
0040 E0                MOVX    A,@DPTR
0041 FF                MOV     R7,A
0042 EF                MOV     A,R7
0043 4401              ORL     A,#01H
0045 FF                MOV     R7,A
0046 EF                MOV     A,R7
0047 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1679
0048         ?C0094:
                                           ; SOURCE LINE # 1680
0048 8011              SJMP    ?C0095
004A         ?C0092:
                                           ; SOURCE LINE # 1682
C51 COMPILER V9.03   CYPM                                                                  04/04/2015 14:09:13 PAGE 76  

                                           ; SOURCE LINE # 1684
004A 9046EC            MOV     DPTR,#046ECH
004D E0                MOVX    A,@DPTR
004E FF                MOV     R7,A
004F EF                MOV     A,R7
0050 C3                CLR     C
0051 9405              SUBB    A,#05H
0053 5006              JNC     ?C0095
                                           ; SOURCE LINE # 1685
                                           ; SOURCE LINE # 1687
0055 904689            MOV     DPTR,#04689H
0058 743A              MOV     A,#03AH
005A F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1688
005B         ?C0096:
                                           ; SOURCE LINE # 1689
005B         ?C0095:
                                           ; SOURCE LINE # 1694
005B 120000      R     LCALL   CyPmHibSlpSaveSet
                                           ; SOURCE LINE # 1695
005E         ?C0097:
005E 22                RET     
             ; FUNCTION CyPmSlpSaveSet (END)

             ; FUNCTION CyPmSlpRestore (BEGIN)
                                           ; SOURCE LINE # 1718
                                           ; SOURCE LINE # 1719
                                           ; SOURCE LINE # 1749
0000 900000      R     MOV     DPTR,#cyPmBackup+04H
0003 E0                MOVX    A,@DPTR
0004 FF                MOV     R7,A
0005 904689            MOV     DPTR,#04689H
0008 EF                MOV     A,R7
0009 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1752
000A 9046EC            MOV     DPTR,#046ECH
000D E0                MOVX    A,@DPTR
000E FF                MOV     R7,A
000F EF                MOV     A,R7
0010 C3                CLR     C
0011 9405              SUBB    A,#05H
0013 5025              JNC     ?C0098
                                           ; SOURCE LINE # 1753
                                           ; SOURCE LINE # 1755
0015 9046F5            MOV     DPTR,#046F5H
0018 E0                MOVX    A,@DPTR
0019 FF                MOV     R7,A
001A EF                MOV     A,R7
001B 5407              ANL     A,#07H
001D FF                MOV     R7,A
001E 7E00              MOV     R6,#00H
0020 EF                MOV     A,R7
0021 4E                ORL     A,R6
0022 6016              JZ      ?C0098
                                           ; SOURCE LINE # 1757
                                           ; SOURCE LINE # 1759
0024 904331            MOV     DPTR,#04331H
0027 E0                MOVX    A,@DPTR
0028 FF                MOV     R7,A
0029 EF                MOV     A,R7
002A 54FD              ANL     A,#0FDH
002C FF                MOV     R7,A
C51 COMPILER V9.03   CYPM                                                                  04/04/2015 14:09:13 PAGE 77  

002D EF                MOV     A,R7
002E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1762
002F 904331            MOV     DPTR,#04331H
0032 E0                MOVX    A,@DPTR
0033 FF                MOV     R7,A
0034 EF                MOV     A,R7
0035 54FE              ANL     A,#0FEH
0037 FF                MOV     R7,A
0038 EF                MOV     A,R7
0039 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1763
003A         ?C0099:
                                           ; SOURCE LINE # 1764
003A         ?C0098:
                                           ; SOURCE LINE # 1770
003A 120000      R     LCALL   CyPmHibSlpRestore
                                           ; SOURCE LINE # 1771
003D         ?C0100:
003D 22                RET     
             ; FUNCTION CyPmSlpRestore (END)

             ; FUNCTION CyPmHibSlpSaveSet (BEGIN)
                                           ; SOURCE LINE # 1796
                                           ; SOURCE LINE # 1797
                                           ; SOURCE LINE # 1943
0000 905A00            MOV     DPTR,#05A00H
0003 E0                MOVX    A,@DPTR
0004 FF                MOV     R7,A
0005 900000      R     MOV     DPTR,#cyPmBackup+0BH
0008 EF                MOV     A,R7
0009 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1944
000A 905A02            MOV     DPTR,#05A02H
000D E0                MOVX    A,@DPTR
000E FF                MOV     R7,A
000F 900000      R     MOV     DPTR,#cyPmBackup+0CH
0012 EF                MOV     A,R7
0013 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1945
0014 905A03            MOV     DPTR,#05A03H
0017 E0                MOVX    A,@DPTR
0018 FF                MOV     R7,A
0019 900000      R     MOV     DPTR,#cyPmBackup+0DH
001C EF                MOV     A,R7
001D F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1946
001E 905A04            MOV     DPTR,#05A04H
0021 E0                MOVX    A,@DPTR
0022 FF                MOV     R7,A
0023 900000      R     MOV     DPTR,#cyPmBackup+0EH
0026 EF                MOV     A,R7
0027 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1947
0028 905A06            MOV     DPTR,#05A06H
002B E0                MOVX    A,@DPTR
002C FF                MOV     R7,A
002D 900000      R     MOV     DPTR,#cyPmBackup+0FH
0030 EF                MOV     A,R7
0031 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1948
0032 905A08            MOV     DPTR,#05A08H
C51 COMPILER V9.03   CYPM                                                                  04/04/2015 14:09:13 PAGE 78  

0035 E0                MOVX    A,@DPTR
0036 FF                MOV     R7,A
0037 900000      R     MOV     DPTR,#cyPmBackup+010H
003A EF                MOV     A,R7
003B F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1949
003C 905A0A            MOV     DPTR,#05A0AH
003F E0                MOVX    A,@DPTR
0040 FF                MOV     R7,A
0041 900000      R     MOV     DPTR,#cyPmBackup+011H
0044 EF                MOV     A,R7
0045 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1951
0046 905A10            MOV     DPTR,#05A10H
0049 E0                MOVX    A,@DPTR
004A FF                MOV     R7,A
004B 900000      R     MOV     DPTR,#cyPmBackup+012H
004E EF                MOV     A,R7
004F F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1952
0050 905A12            MOV     DPTR,#05A12H
0053 E0                MOVX    A,@DPTR
0054 FF                MOV     R7,A
0055 900000      R     MOV     DPTR,#cyPmBackup+013H
0058 EF                MOV     A,R7
0059 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1953
005A 905A13            MOV     DPTR,#05A13H
005D E0                MOVX    A,@DPTR
005E FF                MOV     R7,A
005F 900000      R     MOV     DPTR,#cyPmBackup+014H
0062 EF                MOV     A,R7
0063 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1954
0064 905A14            MOV     DPTR,#05A14H
0067 E0                MOVX    A,@DPTR
0068 FF                MOV     R7,A
0069 900000      R     MOV     DPTR,#cyPmBackup+015H
006C EF                MOV     A,R7
006D F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1955
006E 905A16            MOV     DPTR,#05A16H
0071 E0                MOVX    A,@DPTR
0072 FF                MOV     R7,A
0073 900000      R     MOV     DPTR,#cyPmBackup+016H
0076 EF                MOV     A,R7
0077 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1956
0078 905A18            MOV     DPTR,#05A18H
007B E0                MOVX    A,@DPTR
007C FF                MOV     R7,A
007D 900000      R     MOV     DPTR,#cyPmBackup+017H
0080 EF                MOV     A,R7
0081 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1957
0082 905A1A            MOV     DPTR,#05A1AH
0085 E0                MOVX    A,@DPTR
0086 FF                MOV     R7,A
0087 900000      R     MOV     DPTR,#cyPmBackup+018H
008A EF                MOV     A,R7
008B F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1959
C51 COMPILER V9.03   CYPM                                                                  04/04/2015 14:09:13 PAGE 79  

008C 905A20            MOV     DPTR,#05A20H
008F E0                MOVX    A,@DPTR
0090 FF                MOV     R7,A
0091 900000      R     MOV     DPTR,#cyPmBackup+019H
0094 EF                MOV     A,R7
0095 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1960
0096 905A22            MOV     DPTR,#05A22H
0099 E0                MOVX    A,@DPTR
009A FF                MOV     R7,A
009B 900000      R     MOV     DPTR,#cyPmBackup+01AH
009E EF                MOV     A,R7
009F F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1961
00A0 905A23            MOV     DPTR,#05A23H
00A3 E0                MOVX    A,@DPTR
00A4 FF                MOV     R7,A
00A5 900000      R     MOV     DPTR,#cyPmBackup+01BH
00A8 EF                MOV     A,R7
00A9 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1962
00AA 905A24            MOV     DPTR,#05A24H
00AD E0                MOVX    A,@DPTR
00AE FF                MOV     R7,A
00AF 900000      R     MOV     DPTR,#cyPmBackup+01CH
00B2 EF                MOV     A,R7
00B3 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1963
00B4 905A26            MOV     DPTR,#05A26H
00B7 E0                MOVX    A,@DPTR
00B8 FF                MOV     R7,A
00B9 900000      R     MOV     DPTR,#cyPmBackup+01DH
00BC EF                MOV     A,R7
00BD F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1964
00BE 905A28            MOV     DPTR,#05A28H
00C1 E0                MOVX    A,@DPTR
00C2 FF                MOV     R7,A
00C3 900000      R     MOV     DPTR,#cyPmBackup+01EH
00C6 EF                MOV     A,R7
00C7 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1965
00C8 905A2A            MOV     DPTR,#05A2AH
00CB E0                MOVX    A,@DPTR
00CC FF                MOV     R7,A
00CD 900000      R     MOV     DPTR,#cyPmBackup+01FH
00D0 EF                MOV     A,R7
00D1 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1967
00D2 905A30            MOV     DPTR,#05A30H
00D5 E0                MOVX    A,@DPTR
00D6 FF                MOV     R7,A
00D7 900000      R     MOV     DPTR,#cyPmBackup+020H
00DA EF                MOV     A,R7
00DB F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1968
00DC 905A32            MOV     DPTR,#05A32H
00DF E0                MOVX    A,@DPTR
00E0 FF                MOV     R7,A
00E1 900000      R     MOV     DPTR,#cyPmBackup+021H
00E4 EF                MOV     A,R7
00E5 F0                MOVX    @DPTR,A
C51 COMPILER V9.03   CYPM                                                                  04/04/2015 14:09:13 PAGE 80  

                                           ; SOURCE LINE # 1969
00E6 905A33            MOV     DPTR,#05A33H
00E9 E0                MOVX    A,@DPTR
00EA FF                MOV     R7,A
00EB 900000      R     MOV     DPTR,#cyPmBackup+022H
00EE EF                MOV     A,R7
00EF F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1970
00F0 905A34            MOV     DPTR,#05A34H
00F3 E0                MOVX    A,@DPTR
00F4 FF                MOV     R7,A
00F5 900000      R     MOV     DPTR,#cyPmBackup+023H
00F8 EF                MOV     A,R7
00F9 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1971
00FA 905A36            MOV     DPTR,#05A36H
00FD E0                MOVX    A,@DPTR
00FE FF                MOV     R7,A
00FF 900000      R     MOV     DPTR,#cyPmBackup+024H
0102 EF                MOV     A,R7
0103 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1972
0104 905A38            MOV     DPTR,#05A38H
0107 E0                MOVX    A,@DPTR
0108 FF                MOV     R7,A
0109 900000      R     MOV     DPTR,#cyPmBackup+025H
010C EF                MOV     A,R7
010D F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1973
010E 905A3A            MOV     DPTR,#05A3AH
0111 E0                MOVX    A,@DPTR
0112 FF                MOV     R7,A
0113 900000      R     MOV     DPTR,#cyPmBackup+026H
0116 EF                MOV     A,R7
0117 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1975
0118 905A00            MOV     DPTR,#05A00H
011B E4                CLR     A
011C F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1976
011D 905A02            MOV     DPTR,#05A02H
0120 E4                CLR     A
0121 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1977
0122 905A03            MOV     DPTR,#05A03H
0125 E4                CLR     A
0126 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1978
0127 905A04            MOV     DPTR,#05A04H
012A E4                CLR     A
012B F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1979
012C 905A06            MOV     DPTR,#05A06H
012F E4                CLR     A
0130 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1980
0131 905A08            MOV     DPTR,#05A08H
0134 E4                CLR     A
0135 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1981
0136 905A0A            MOV     DPTR,#05A0AH
0139 E4                CLR     A
C51 COMPILER V9.03   CYPM                                                                  04/04/2015 14:09:13 PAGE 81  

013A F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1983
013B 905A10            MOV     DPTR,#05A10H
013E E4                CLR     A
013F F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1984
0140 905A12            MOV     DPTR,#05A12H
0143 E4                CLR     A
0144 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1985
0145 905A13            MOV     DPTR,#05A13H
0148 E4                CLR     A
0149 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1986
014A 905A14            MOV     DPTR,#05A14H
014D E4                CLR     A
014E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1987
014F 905A16            MOV     DPTR,#05A16H
0152 E4                CLR     A
0153 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1988
0154 905A18            MOV     DPTR,#05A18H
0157 E4                CLR     A
0158 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1989
0159 905A1A            MOV     DPTR,#05A1AH
015C E4                CLR     A
015D F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1991
015E 905A20            MOV     DPTR,#05A20H
0161 E4                CLR     A
0162 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1992
0163 905A22            MOV     DPTR,#05A22H
0166 E4                CLR     A
0167 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1993
0168 905A23            MOV     DPTR,#05A23H
016B E4                CLR     A
016C F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1994
016D 905A24            MOV     DPTR,#05A24H
0170 E4                CLR     A
0171 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1995
0172 905A26            MOV     DPTR,#05A26H
0175 E4                CLR     A
0176 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1996
0177 905A28            MOV     DPTR,#05A28H
017A E4                CLR     A
017B F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1997
017C 905A2A            MOV     DPTR,#05A2AH
017F E4                CLR     A
0180 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1999
0181 905A30            MOV     DPTR,#05A30H
0184 E4                CLR     A
0185 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 2000
C51 COMPILER V9.03   CYPM                                                                  04/04/2015 14:09:13 PAGE 82  

0186 905A32            MOV     DPTR,#05A32H
0189 E4                CLR     A
018A F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 2001
018B 905A33            MOV     DPTR,#05A33H
018E E4                CLR     A
018F F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 2002
0190 905A34            MOV     DPTR,#05A34H
0193 E4                CLR     A
0194 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 2003
0195 905A36            MOV     DPTR,#05A36H
0198 E4                CLR     A
0199 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 2004
019A 905A38            MOV     DPTR,#05A38H
019D E4                CLR     A
019E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 2005
019F 905A3A            MOV     DPTR,#05A3AH
01A2 E4                CLR     A
01A3 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 2015
01A4 9046E8            MOV     DPTR,#046E8H
01A7 E0                MOVX    A,@DPTR
01A8 FF                MOV     R7,A
01A9 EF                MOV     A,R7
01AA 5404              ANL     A,#04H
01AC FF                MOV     R7,A
01AD 7E00              MOV     R6,#00H
01AF EF                MOV     A,R7
01B0 4E                ORL     A,R6
01B1 6033              JZ      ?C0101
                                           ; SOURCE LINE # 2016
                                           ; SOURCE LINE # 2018
01B3 900000      R     MOV     DPTR,#cyPmBackup+06H
01B6 7401              MOV     A,#01H
01B8 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 2021
01B9 90500B            MOV     DPTR,#0500BH
01BC E0                MOVX    A,@DPTR
01BD FF                MOV     R7,A
01BE EF                MOV     A,R7
01BF 540E              ANL     A,#0EH
01C1 FF                MOV     R7,A
01C2 900000      R     MOV     DPTR,#cyPmBackup+07H
01C5 EF                MOV     A,R7
01C6 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 2024
01C7 90500B            MOV     DPTR,#0500BH
01CA E0                MOVX    A,@DPTR
01CB FF                MOV     R7,A
01CC EF                MOV     A,R7
01CD 54F1              ANL     A,#0F1H
01CF FF                MOV     R7,A
01D0 EF                MOV     A,R7
01D1 440C              ORL     A,#0CH
01D3 FF                MOV     R7,A
01D4 90500B            MOV     DPTR,#0500BH
01D7 EF                MOV     A,R7
01D8 F0                MOVX    @DPTR,A
C51 COMPILER V9.03   CYPM                                                                  04/04/2015 14:09:13 PAGE 83  

                                           ; SOURCE LINE # 2028
01D9 9046E8            MOV     DPTR,#046E8H
01DC E0                MOVX    A,@DPTR
01DD FF                MOV     R7,A
01DE EF                MOV     A,R7
01DF 54FB              ANL     A,#0FBH
01E1 FF                MOV     R7,A
01E2 EF                MOV     A,R7
01E3 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 2029
01E4 8005              SJMP    ?C0102
01E6         ?C0101:
                                           ; SOURCE LINE # 2031
                                           ; SOURCE LINE # 2033
01E6 900000      R     MOV     DPTR,#cyPmBackup+06H
01E9 E4                CLR     A
01EA F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 2034
01EB         ?C0102:
                                           ; SOURCE LINE # 2044
01EB 90400B            MOV     DPTR,#0400BH
01EE E0                MOVX    A,@DPTR
01EF FF                MOV     R7,A
01F0 EF                MOV     A,R7
01F1 5404              ANL     A,#04H
01F3 FF                MOV     R7,A
01F4 7E00              MOV     R6,#00H
01F6 EF                MOV     A,R7
01F7 4E                ORL     A,R6
01F8 6007              JZ      ?C0103
                                           ; SOURCE LINE # 2045
                                           ; SOURCE LINE # 2046
01FA 900000      R     MOV     DPTR,#cyPmBackup+029H
01FD 7401              MOV     A,#01H
01FF F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 2047
0200 22                RET     
0201         ?C0103:
                                           ; SOURCE LINE # 2049
                                           ; SOURCE LINE # 2050
0201 900000      R     MOV     DPTR,#cyPmBackup+029H
0204 E4                CLR     A
0205 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 2051
0206         ?C0104:
                                           ; SOURCE LINE # 2052
0206         ?C0105:
0206 22                RET     
             ; FUNCTION CyPmHibSlpSaveSet (END)

             ; FUNCTION CyPmHibSlpRestore (BEGIN)
                                           ; SOURCE LINE # 2075
                                           ; SOURCE LINE # 2076
                                           ; SOURCE LINE # 2156
0000 900000      R     MOV     DPTR,#cyPmBackup+0BH
0003 E0                MOVX    A,@DPTR
0004 FF                MOV     R7,A
0005 905A00            MOV     DPTR,#05A00H
0008 EF                MOV     A,R7
0009 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 2157
000A 900000      R     MOV     DPTR,#cyPmBackup+0CH
C51 COMPILER V9.03   CYPM                                                                  04/04/2015 14:09:13 PAGE 84  

000D E0                MOVX    A,@DPTR
000E FF                MOV     R7,A
000F 905A02            MOV     DPTR,#05A02H
0012 EF                MOV     A,R7
0013 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 2158
0014 900000      R     MOV     DPTR,#cyPmBackup+0DH
0017 E0                MOVX    A,@DPTR
0018 FF                MOV     R7,A
0019 905A03            MOV     DPTR,#05A03H
001C EF                MOV     A,R7
001D F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 2159
001E 900000      R     MOV     DPTR,#cyPmBackup+0EH
0021 E0                MOVX    A,@DPTR
0022 FF                MOV     R7,A
0023 905A04            MOV     DPTR,#05A04H
0026 EF                MOV     A,R7
0027 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 2160
0028 900000      R     MOV     DPTR,#cyPmBackup+0FH
002B E0                MOVX    A,@DPTR
002C FF                MOV     R7,A
002D 905A06            MOV     DPTR,#05A06H
0030 EF                MOV     A,R7
0031 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 2161
0032 900000      R     MOV     DPTR,#cyPmBackup+010H
0035 E0                MOVX    A,@DPTR
0036 FF                MOV     R7,A
0037 905A08            MOV     DPTR,#05A08H
003A EF                MOV     A,R7
003B F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 2162
003C 900000      R     MOV     DPTR,#cyPmBackup+011H
003F E0                MOVX    A,@DPTR
0040 FF                MOV     R7,A
0041 905A0A            MOV     DPTR,#05A0AH
0044 EF                MOV     A,R7
0045 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 2164
0046 900000      R     MOV     DPTR,#cyPmBackup+012H
0049 E0                MOVX    A,@DPTR
004A FF                MOV     R7,A
004B 905A10            MOV     DPTR,#05A10H
004E EF                MOV     A,R7
004F F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 2165
0050 900000      R     MOV     DPTR,#cyPmBackup+013H
0053 E0                MOVX    A,@DPTR
0054 FF                MOV     R7,A
0055 905A12            MOV     DPTR,#05A12H
0058 EF                MOV     A,R7
0059 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 2166
005A 900000      R     MOV     DPTR,#cyPmBackup+014H
005D E0                MOVX    A,@DPTR
005E FF                MOV     R7,A
005F 905A13            MOV     DPTR,#05A13H
0062 EF                MOV     A,R7
0063 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 2167
C51 COMPILER V9.03   CYPM                                                                  04/04/2015 14:09:13 PAGE 85  

0064 900000      R     MOV     DPTR,#cyPmBackup+015H
0067 E0                MOVX    A,@DPTR
0068 FF                MOV     R7,A
0069 905A14            MOV     DPTR,#05A14H
006C EF                MOV     A,R7
006D F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 2168
006E 900000      R     MOV     DPTR,#cyPmBackup+016H
0071 E0                MOVX    A,@DPTR
0072 FF                MOV     R7,A
0073 905A16            MOV     DPTR,#05A16H
0076 EF                MOV     A,R7
0077 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 2169
0078 900000      R     MOV     DPTR,#cyPmBackup+017H
007B E0                MOVX    A,@DPTR
007C FF                MOV     R7,A
007D 905A18            MOV     DPTR,#05A18H
0080 EF                MOV     A,R7
0081 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 2170
0082 900000      R     MOV     DPTR,#cyPmBackup+018H
0085 E0                MOVX    A,@DPTR
0086 FF                MOV     R7,A
0087 905A1A            MOV     DPTR,#05A1AH
008A EF                MOV     A,R7
008B F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 2172
008C 900000      R     MOV     DPTR,#cyPmBackup+019H
008F E0                MOVX    A,@DPTR
0090 FF                MOV     R7,A
0091 905A20            MOV     DPTR,#05A20H
0094 EF                MOV     A,R7
0095 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 2173
0096 900000      R     MOV     DPTR,#cyPmBackup+01AH
0099 E0                MOVX    A,@DPTR
009A FF                MOV     R7,A
009B 905A22            MOV     DPTR,#05A22H
009E EF                MOV     A,R7
009F F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 2174
00A0 900000      R     MOV     DPTR,#cyPmBackup+01BH
00A3 E0                MOVX    A,@DPTR
00A4 FF                MOV     R7,A
00A5 905A23            MOV     DPTR,#05A23H
00A8 EF                MOV     A,R7
00A9 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 2175
00AA 900000      R     MOV     DPTR,#cyPmBackup+01CH
00AD E0                MOVX    A,@DPTR
00AE FF                MOV     R7,A
00AF 905A24            MOV     DPTR,#05A24H
00B2 EF                MOV     A,R7
00B3 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 2176
00B4 900000      R     MOV     DPTR,#cyPmBackup+01DH
00B7 E0                MOVX    A,@DPTR
00B8 FF                MOV     R7,A
00B9 905A26            MOV     DPTR,#05A26H
00BC EF                MOV     A,R7
00BD F0                MOVX    @DPTR,A
C51 COMPILER V9.03   CYPM                                                                  04/04/2015 14:09:13 PAGE 86  

                                           ; SOURCE LINE # 2177
00BE 900000      R     MOV     DPTR,#cyPmBackup+01EH
00C1 E0                MOVX    A,@DPTR
00C2 FF                MOV     R7,A
00C3 905A28            MOV     DPTR,#05A28H
00C6 EF                MOV     A,R7
00C7 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 2178
00C8 900000      R     MOV     DPTR,#cyPmBackup+01FH
00CB E0                MOVX    A,@DPTR
00CC FF                MOV     R7,A
00CD 905A2A            MOV     DPTR,#05A2AH
00D0 EF                MOV     A,R7
00D1 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 2180
00D2 900000      R     MOV     DPTR,#cyPmBackup+020H
00D5 E0                MOVX    A,@DPTR
00D6 FF                MOV     R7,A
00D7 905A30            MOV     DPTR,#05A30H
00DA EF                MOV     A,R7
00DB F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 2181
00DC 900000      R     MOV     DPTR,#cyPmBackup+021H
00DF E0                MOVX    A,@DPTR
00E0 FF                MOV     R7,A
00E1 905A32            MOV     DPTR,#05A32H
00E4 EF                MOV     A,R7
00E5 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 2182
00E6 900000      R     MOV     DPTR,#cyPmBackup+022H
00E9 E0                MOVX    A,@DPTR
00EA FF                MOV     R7,A
00EB 905A33            MOV     DPTR,#05A33H
00EE EF                MOV     A,R7
00EF F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 2183
00F0 900000      R     MOV     DPTR,#cyPmBackup+023H
00F3 E0                MOVX    A,@DPTR
00F4 FF                MOV     R7,A
00F5 905A34            MOV     DPTR,#05A34H
00F8 EF                MOV     A,R7
00F9 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 2184
00FA 900000      R     MOV     DPTR,#cyPmBackup+024H
00FD E0                MOVX    A,@DPTR
00FE FF                MOV     R7,A
00FF 905A36            MOV     DPTR,#05A36H
0102 EF                MOV     A,R7
0103 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 2185
0104 900000      R     MOV     DPTR,#cyPmBackup+025H
0107 E0                MOVX    A,@DPTR
0108 FF                MOV     R7,A
0109 905A38            MOV     DPTR,#05A38H
010C EF                MOV     A,R7
010D F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 2186
010E 900000      R     MOV     DPTR,#cyPmBackup+026H
0111 E0                MOVX    A,@DPTR
0112 FF                MOV     R7,A
0113 905A3A            MOV     DPTR,#05A3AH
0116 EF                MOV     A,R7
C51 COMPILER V9.03   CYPM                                                                  04/04/2015 14:09:13 PAGE 87  

0117 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 2194
0118 900000      R     MOV     DPTR,#cyPmBackup+06H
011B E0                MOVX    A,@DPTR
011C FF                MOV     R7,A
011D EF                MOV     A,R7
011E B40121            CJNE    A,#01H,?C0106
                                           ; SOURCE LINE # 2195
                                           ; SOURCE LINE # 2197
0121 90500B            MOV     DPTR,#0500BH
0124 E0                MOVX    A,@DPTR
0125 FF                MOV     R7,A
0126 EF                MOV     A,R7
0127 54F1              ANL     A,#0F1H
0129 FF                MOV     R7,A
012A 900000      R     MOV     DPTR,#cyPmBackup+07H
012D E0                MOVX    A,@DPTR
012E FE                MOV     R6,A
012F EF                MOV     A,R7
0130 4E                ORL     A,R6
0131 FF                MOV     R7,A
0132 90500B            MOV     DPTR,#0500BH
0135 EF                MOV     A,R7
0136 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 2201
0137 9046E8            MOV     DPTR,#046E8H
013A E0                MOVX    A,@DPTR
013B FF                MOV     R7,A
013C EF                MOV     A,R7
013D 4404              ORL     A,#04H
013F FF                MOV     R7,A
0140 EF                MOV     A,R7
0141 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 2202
0142         ?C0106:
                                           ; SOURCE LINE # 2217
0142 900000      R     MOV     DPTR,#cyPmBackup+029H
0145 E0                MOVX    A,@DPTR
0146 FF                MOV     R7,A
0147 EF                MOV     A,R7
0148 6401              XRL     A,#01H
014A 704D              JNZ     ?C0108
                                           ; SOURCE LINE # 2218
                                           ; SOURCE LINE # 2220
014C 904005            MOV     DPTR,#04005H
014F E0                MOVX    A,@DPTR
0150 FF                MOV     R7,A
0151 EF                MOV     A,R7
0152 54F0              ANL     A,#0F0H
0154 FF                MOV     R7,A
0155 7E00              MOV     R6,#00H
0157 EE                MOV     A,R6
0158 C4                SWAP    A
0159 F8                MOV     R0,A
015A 54F0              ANL     A,#0F0H
015C C8                XCH     A,R0
015D 68                XRL     A,R0
015E FE                MOV     R6,A
015F EF                MOV     A,R7
0160 C4                SWAP    A
0161 540F              ANL     A,#0FH
0163 48                ORL     A,R0
C51 COMPILER V9.03   CYPM                                                                  04/04/2015 14:09:13 PAGE 88  

0164 FF                MOV     R7,A
0165 EF                MOV     A,R7
0166 2401              ADD     A,#01H
0168 FD                MOV     R5,A
0169 EE                MOV     A,R6
016A 3400              ADDC    A,#00H
016C FC                MOV     R4,A
016D 904200            MOV     DPTR,#04200H
0170 E0                MOVX    A,@DPTR
0171 FF                MOV     R7,A
0172 EF                MOV     A,R7
0173 5407              ANL     A,#07H
0175 FF                MOV     R7,A
0176 EF                MOV     A,R7
0177 900000      R     MOV     DPTR,#cyPmImoFreqReg2Mhz
017A 93                MOVC    A,@A+DPTR
017B FF                MOV     R7,A
017C 7E00              MOV     R6,#00H
017E 120000      E     LCALL   ?C?UIDIV
0181 7C00              MOV     R4,#00H
0183 7D4B              MOV     R5,#04BH
0185 120000      E     LCALL   ?C?IMUL
0188 E4                CLR     A
0189 FC                MOV     R4,A
018A FD                MOV     R5,A
018B 120000      E     LCALL   _CyDelayCycles
                                           ; SOURCE LINE # 2221
018E 90400B            MOV     DPTR,#0400BH
0191 E0                MOVX    A,@DPTR
0192 FF                MOV     R7,A
0193 EF                MOV     A,R7
0194 4404              ORL     A,#04H
0196 FF                MOV     R7,A
0197 EF                MOV     A,R7
0198 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 2222
0199         ?C0107:
                                           ; SOURCE LINE # 2223
0199         ?C0108:
0199 22                RET     
             ; FUNCTION CyPmHibSlpRestore (END)



MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   3857    ----
   CONSTANT SIZE    =     14    ----
   XDATA SIZE       =     75    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
